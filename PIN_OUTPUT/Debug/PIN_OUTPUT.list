
PIN_OUTPUT.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000001e0  080001c4  080001c4  000011c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080003a4  080003ac  000013ac  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080003a4  080003a4  000013ac  2**0
                  CONTENTS
  4 .ARM          00000000  080003a4  080003a4  000013ac  2**0
                  CONTENTS
  5 .preinit_array 00000000  080003a4  080003ac  000013ac  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080003a4  080003a4  000013a4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080003a8  080003a8  000013a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  000013ac  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  080003ac  00002000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  080003ac  0000201c  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  000013ac  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000017d  00000000  00000000  000013d6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000112  00000000  00000000  00001553  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000058  00000000  00000000  00001668  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000039  00000000  00000000  000016c0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00001b87  00000000  00000000  000016f9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000069d  00000000  00000000  00003280  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000079e8  00000000  00000000  0000391d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  0000b305  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000000a8  00000000  00000000  0000b348  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 000000a2  00000000  00000000  0000b3f0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c4 <__do_global_dtors_aux>:
 80001c4:	b510      	push	{r4, lr}
 80001c6:	4c05      	ldr	r4, [pc, #20]	@ (80001dc <__do_global_dtors_aux+0x18>)
 80001c8:	7823      	ldrb	r3, [r4, #0]
 80001ca:	b933      	cbnz	r3, 80001da <__do_global_dtors_aux+0x16>
 80001cc:	4b04      	ldr	r3, [pc, #16]	@ (80001e0 <__do_global_dtors_aux+0x1c>)
 80001ce:	b113      	cbz	r3, 80001d6 <__do_global_dtors_aux+0x12>
 80001d0:	4804      	ldr	r0, [pc, #16]	@ (80001e4 <__do_global_dtors_aux+0x20>)
 80001d2:	f3af 8000 	nop.w
 80001d6:	2301      	movs	r3, #1
 80001d8:	7023      	strb	r3, [r4, #0]
 80001da:	bd10      	pop	{r4, pc}
 80001dc:	20000000 	.word	0x20000000
 80001e0:	00000000 	.word	0x00000000
 80001e4:	0800038c 	.word	0x0800038c

080001e8 <frame_dummy>:
 80001e8:	b508      	push	{r3, lr}
 80001ea:	4b03      	ldr	r3, [pc, #12]	@ (80001f8 <frame_dummy+0x10>)
 80001ec:	b11b      	cbz	r3, 80001f6 <frame_dummy+0xe>
 80001ee:	4903      	ldr	r1, [pc, #12]	@ (80001fc <frame_dummy+0x14>)
 80001f0:	4803      	ldr	r0, [pc, #12]	@ (8000200 <frame_dummy+0x18>)
 80001f2:	f3af 8000 	nop.w
 80001f6:	bd08      	pop	{r3, pc}
 80001f8:	00000000 	.word	0x00000000
 80001fc:	20000004 	.word	0x20000004
 8000200:	0800038c 	.word	0x0800038c

08000204 <delay>:
#define GPIOA_PUDR ((volatile uint32_t*)(GPIOA_BASE + GPIO_PUDR_OFFSET))

int update = 1;

void delay(uint32_t timer)
{
 8000204:	b480      	push	{r7}
 8000206:	b085      	sub	sp, #20
 8000208:	af00      	add	r7, sp, #0
 800020a:	6078      	str	r0, [r7, #4]
	for(int i=0;i<timer;i++)
 800020c:	2300      	movs	r3, #0
 800020e:	60fb      	str	r3, [r7, #12]
 8000210:	e00c      	b.n	800022c <delay+0x28>
	{
		for(int j =0;j<100000;j++);
 8000212:	2300      	movs	r3, #0
 8000214:	60bb      	str	r3, [r7, #8]
 8000216:	e002      	b.n	800021e <delay+0x1a>
 8000218:	68bb      	ldr	r3, [r7, #8]
 800021a:	3301      	adds	r3, #1
 800021c:	60bb      	str	r3, [r7, #8]
 800021e:	68bb      	ldr	r3, [r7, #8]
 8000220:	4a07      	ldr	r2, [pc, #28]	@ (8000240 <delay+0x3c>)
 8000222:	4293      	cmp	r3, r2
 8000224:	ddf8      	ble.n	8000218 <delay+0x14>
	for(int i=0;i<timer;i++)
 8000226:	68fb      	ldr	r3, [r7, #12]
 8000228:	3301      	adds	r3, #1
 800022a:	60fb      	str	r3, [r7, #12]
 800022c:	68fb      	ldr	r3, [r7, #12]
 800022e:	687a      	ldr	r2, [r7, #4]
 8000230:	429a      	cmp	r2, r3
 8000232:	d8ee      	bhi.n	8000212 <delay+0xe>
	}
}
 8000234:	bf00      	nop
 8000236:	bf00      	nop
 8000238:	3714      	adds	r7, #20
 800023a:	46bd      	mov	sp, r7
 800023c:	bc80      	pop	{r7}
 800023e:	4770      	bx	lr
 8000240:	0001869f 	.word	0x0001869f

08000244 <main>:
int button_press(volatile uint32_t *btn,int pos){
	return (*btn&(1<<pos))?1:0;
}

int main(void)
{
 8000244:	b580      	push	{r7, lr}
 8000246:	af00      	add	r7, sp, #0

	*RCC_AHB1ENR |= (1<<2);
 8000248:	4b21      	ldr	r3, [pc, #132]	@ (80002d0 <main+0x8c>)
 800024a:	681b      	ldr	r3, [r3, #0]
 800024c:	4a20      	ldr	r2, [pc, #128]	@ (80002d0 <main+0x8c>)
 800024e:	f043 0304 	orr.w	r3, r3, #4
 8000252:	6013      	str	r3, [r2, #0]
	*GPIOC_MODER &= ~(1<<26);
 8000254:	4b1f      	ldr	r3, [pc, #124]	@ (80002d4 <main+0x90>)
 8000256:	681b      	ldr	r3, [r3, #0]
 8000258:	4a1e      	ldr	r2, [pc, #120]	@ (80002d4 <main+0x90>)
 800025a:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
 800025e:	6013      	str	r3, [r2, #0]
	*GPIOC_PUDR |= (1<<26);
 8000260:	4b1d      	ldr	r3, [pc, #116]	@ (80002d8 <main+0x94>)
 8000262:	681b      	ldr	r3, [r3, #0]
 8000264:	4a1c      	ldr	r2, [pc, #112]	@ (80002d8 <main+0x94>)
 8000266:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 800026a:	6013      	str	r3, [r2, #0]

	*RCC_AHB1ENR |= (1 << RCC_AHB1ENR_GPIOAEN);
 800026c:	4b18      	ldr	r3, [pc, #96]	@ (80002d0 <main+0x8c>)
 800026e:	681b      	ldr	r3, [r3, #0]
 8000270:	4a17      	ldr	r2, [pc, #92]	@ (80002d0 <main+0x8c>)
 8000272:	f043 0301 	orr.w	r3, r3, #1
 8000276:	6013      	str	r3, [r2, #0]
	*GPIOA_MODER |= (1 << GPIO_MODER_MODER5);
 8000278:	4b18      	ldr	r3, [pc, #96]	@ (80002dc <main+0x98>)
 800027a:	681b      	ldr	r3, [r3, #0]
 800027c:	4a17      	ldr	r2, [pc, #92]	@ (80002dc <main+0x98>)
 800027e:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8000282:	6013      	str	r3, [r2, #0]
	*GPIOA_TYPER &= ~(1<<5);
 8000284:	4b16      	ldr	r3, [pc, #88]	@ (80002e0 <main+0x9c>)
 8000286:	681b      	ldr	r3, [r3, #0]
 8000288:	4a15      	ldr	r2, [pc, #84]	@ (80002e0 <main+0x9c>)
 800028a:	f023 0320 	bic.w	r3, r3, #32
 800028e:	6013      	str	r3, [r2, #0]
	*GPIOA_OSPEEDR |= (1<<10);
 8000290:	4b14      	ldr	r3, [pc, #80]	@ (80002e4 <main+0xa0>)
 8000292:	681b      	ldr	r3, [r3, #0]
 8000294:	4a13      	ldr	r2, [pc, #76]	@ (80002e4 <main+0xa0>)
 8000296:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 800029a:	6013      	str	r3, [r2, #0]
	*GPIOA_PUDR &= ~(3 << 10);
 800029c:	4b12      	ldr	r3, [pc, #72]	@ (80002e8 <main+0xa4>)
 800029e:	681b      	ldr	r3, [r3, #0]
 80002a0:	4a11      	ldr	r2, [pc, #68]	@ (80002e8 <main+0xa4>)
 80002a2:	f423 6340 	bic.w	r3, r3, #3072	@ 0xc00
 80002a6:	6013      	str	r3, [r2, #0]
//
//		if(update > 5) update = 1;
//
//		*GPIOA_ODR ^= (1<<5);
//		delay(update);
		*GPIOA_ODR |= (1<<5);
 80002a8:	4b10      	ldr	r3, [pc, #64]	@ (80002ec <main+0xa8>)
 80002aa:	681b      	ldr	r3, [r3, #0]
 80002ac:	4a0f      	ldr	r2, [pc, #60]	@ (80002ec <main+0xa8>)
 80002ae:	f043 0320 	orr.w	r3, r3, #32
 80002b2:	6013      	str	r3, [r2, #0]
		delay(10);
 80002b4:	200a      	movs	r0, #10
 80002b6:	f7ff ffa5 	bl	8000204 <delay>
		*GPIOA_ODR &= ~(1<<5);
 80002ba:	4b0c      	ldr	r3, [pc, #48]	@ (80002ec <main+0xa8>)
 80002bc:	681b      	ldr	r3, [r3, #0]
 80002be:	4a0b      	ldr	r2, [pc, #44]	@ (80002ec <main+0xa8>)
 80002c0:	f023 0320 	bic.w	r3, r3, #32
 80002c4:	6013      	str	r3, [r2, #0]
		delay(1);
 80002c6:	2001      	movs	r0, #1
 80002c8:	f7ff ff9c 	bl	8000204 <delay>
		*GPIOA_ODR |= (1<<5);
 80002cc:	bf00      	nop
 80002ce:	e7eb      	b.n	80002a8 <main+0x64>
 80002d0:	40023830 	.word	0x40023830
 80002d4:	40020800 	.word	0x40020800
 80002d8:	4002080c 	.word	0x4002080c
 80002dc:	40020000 	.word	0x40020000
 80002e0:	40020004 	.word	0x40020004
 80002e4:	40020008 	.word	0x40020008
 80002e8:	4002000c 	.word	0x4002000c
 80002ec:	40020014 	.word	0x40020014

080002f0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002f0:	480d      	ldr	r0, [pc, #52]	@ (8000328 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002f2:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80002f4:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002f8:	480c      	ldr	r0, [pc, #48]	@ (800032c <LoopForever+0x6>)
  ldr r1, =_edata
 80002fa:	490d      	ldr	r1, [pc, #52]	@ (8000330 <LoopForever+0xa>)
  ldr r2, =_sidata
 80002fc:	4a0d      	ldr	r2, [pc, #52]	@ (8000334 <LoopForever+0xe>)
  movs r3, #0
 80002fe:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000300:	e002      	b.n	8000308 <LoopCopyDataInit>

08000302 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000302:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000304:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000306:	3304      	adds	r3, #4

08000308 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000308:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800030a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800030c:	d3f9      	bcc.n	8000302 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800030e:	4a0a      	ldr	r2, [pc, #40]	@ (8000338 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000310:	4c0a      	ldr	r4, [pc, #40]	@ (800033c <LoopForever+0x16>)
  movs r3, #0
 8000312:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000314:	e001      	b.n	800031a <LoopFillZerobss>

08000316 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000316:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000318:	3204      	adds	r2, #4

0800031a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800031a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800031c:	d3fb      	bcc.n	8000316 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800031e:	f000 f811 	bl	8000344 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000322:	f7ff ff8f 	bl	8000244 <main>

08000326 <LoopForever>:

LoopForever:
  b LoopForever
 8000326:	e7fe      	b.n	8000326 <LoopForever>
  ldr   r0, =_estack
 8000328:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 800032c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000330:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000334:	080003ac 	.word	0x080003ac
  ldr r2, =_sbss
 8000338:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 800033c:	2000001c 	.word	0x2000001c

08000340 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000340:	e7fe      	b.n	8000340 <ADC_IRQHandler>
	...

08000344 <__libc_init_array>:
 8000344:	b570      	push	{r4, r5, r6, lr}
 8000346:	4d0d      	ldr	r5, [pc, #52]	@ (800037c <__libc_init_array+0x38>)
 8000348:	4c0d      	ldr	r4, [pc, #52]	@ (8000380 <__libc_init_array+0x3c>)
 800034a:	1b64      	subs	r4, r4, r5
 800034c:	10a4      	asrs	r4, r4, #2
 800034e:	2600      	movs	r6, #0
 8000350:	42a6      	cmp	r6, r4
 8000352:	d109      	bne.n	8000368 <__libc_init_array+0x24>
 8000354:	4d0b      	ldr	r5, [pc, #44]	@ (8000384 <__libc_init_array+0x40>)
 8000356:	4c0c      	ldr	r4, [pc, #48]	@ (8000388 <__libc_init_array+0x44>)
 8000358:	f000 f818 	bl	800038c <_init>
 800035c:	1b64      	subs	r4, r4, r5
 800035e:	10a4      	asrs	r4, r4, #2
 8000360:	2600      	movs	r6, #0
 8000362:	42a6      	cmp	r6, r4
 8000364:	d105      	bne.n	8000372 <__libc_init_array+0x2e>
 8000366:	bd70      	pop	{r4, r5, r6, pc}
 8000368:	f855 3b04 	ldr.w	r3, [r5], #4
 800036c:	4798      	blx	r3
 800036e:	3601      	adds	r6, #1
 8000370:	e7ee      	b.n	8000350 <__libc_init_array+0xc>
 8000372:	f855 3b04 	ldr.w	r3, [r5], #4
 8000376:	4798      	blx	r3
 8000378:	3601      	adds	r6, #1
 800037a:	e7f2      	b.n	8000362 <__libc_init_array+0x1e>
 800037c:	080003a4 	.word	0x080003a4
 8000380:	080003a4 	.word	0x080003a4
 8000384:	080003a4 	.word	0x080003a4
 8000388:	080003a8 	.word	0x080003a8

0800038c <_init>:
 800038c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800038e:	bf00      	nop
 8000390:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000392:	bc08      	pop	{r3}
 8000394:	469e      	mov	lr, r3
 8000396:	4770      	bx	lr

08000398 <_fini>:
 8000398:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800039a:	bf00      	nop
 800039c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800039e:	bc08      	pop	{r3}
 80003a0:	469e      	mov	lr, r3
 80003a2:	4770      	bx	lr
