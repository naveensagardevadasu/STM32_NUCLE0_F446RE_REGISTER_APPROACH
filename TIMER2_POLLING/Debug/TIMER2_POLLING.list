
TIMER2_POLLING.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000001e0  080001c4  080001c4  000011c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080003a4  080003ac  000013ac  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080003a4  080003a4  000013ac  2**0
                  CONTENTS
  4 .ARM          00000000  080003a4  080003a4  000013ac  2**0
                  CONTENTS
  5 .preinit_array 00000000  080003a4  080003ac  000013ac  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080003a4  080003a4  000013a4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080003a8  080003a8  000013a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  000013ac  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  080003ac  00002000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  080003ac  0000201c  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  000013ac  2**0
                  CONTENTS, READONLY
 12 .debug_info   000000ff  00000000  00000000  000013d6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000000a4  00000000  00000000  000014d5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000050  00000000  00000000  00001580  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000033  00000000  00000000  000015d0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00001c5f  00000000  00000000  00001603  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000060a  00000000  00000000  00003262  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00007fa0  00000000  00000000  0000386c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  0000b80c  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000080  00000000  00000000  0000b850  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000085  00000000  00000000  0000b8d0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c4 <__do_global_dtors_aux>:
 80001c4:	b510      	push	{r4, lr}
 80001c6:	4c05      	ldr	r4, [pc, #20]	@ (80001dc <__do_global_dtors_aux+0x18>)
 80001c8:	7823      	ldrb	r3, [r4, #0]
 80001ca:	b933      	cbnz	r3, 80001da <__do_global_dtors_aux+0x16>
 80001cc:	4b04      	ldr	r3, [pc, #16]	@ (80001e0 <__do_global_dtors_aux+0x1c>)
 80001ce:	b113      	cbz	r3, 80001d6 <__do_global_dtors_aux+0x12>
 80001d0:	4804      	ldr	r0, [pc, #16]	@ (80001e4 <__do_global_dtors_aux+0x20>)
 80001d2:	f3af 8000 	nop.w
 80001d6:	2301      	movs	r3, #1
 80001d8:	7023      	strb	r3, [r4, #0]
 80001da:	bd10      	pop	{r4, pc}
 80001dc:	20000000 	.word	0x20000000
 80001e0:	00000000 	.word	0x00000000
 80001e4:	0800038c 	.word	0x0800038c

080001e8 <frame_dummy>:
 80001e8:	b508      	push	{r3, lr}
 80001ea:	4b03      	ldr	r3, [pc, #12]	@ (80001f8 <frame_dummy+0x10>)
 80001ec:	b11b      	cbz	r3, 80001f6 <frame_dummy+0xe>
 80001ee:	4903      	ldr	r1, [pc, #12]	@ (80001fc <frame_dummy+0x14>)
 80001f0:	4803      	ldr	r0, [pc, #12]	@ (8000200 <frame_dummy+0x18>)
 80001f2:	f3af 8000 	nop.w
 80001f6:	bd08      	pop	{r3, pc}
 80001f8:	00000000 	.word	0x00000000
 80001fc:	20000004 	.word	0x20000004
 8000200:	0800038c 	.word	0x0800038c

08000204 <Timer2_delay>:
void Timer2_delay(uint32_t);



void Timer2_delay(uint32_t delay)
{
 8000204:	b480      	push	{r7}
 8000206:	b083      	sub	sp, #12
 8000208:	af00      	add	r7, sp, #0
 800020a:	6078      	str	r0, [r7, #4]
	*TIM2_PSC = 16000-1;
 800020c:	4b14      	ldr	r3, [pc, #80]	@ (8000260 <Timer2_delay+0x5c>)
 800020e:	f643 627f 	movw	r2, #15999	@ 0x3e7f
 8000212:	601a      	str	r2, [r3, #0]
	*TIM2_ARR = (2 - 1)*delay;
 8000214:	4a13      	ldr	r2, [pc, #76]	@ (8000264 <Timer2_delay+0x60>)
 8000216:	687b      	ldr	r3, [r7, #4]
 8000218:	6013      	str	r3, [r2, #0]
	*TIM2_CNT = 0;
 800021a:	4b13      	ldr	r3, [pc, #76]	@ (8000268 <Timer2_delay+0x64>)
 800021c:	2200      	movs	r2, #0
 800021e:	601a      	str	r2, [r3, #0]
	*TIM2_CR1 |= (1<<0);
 8000220:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8000224:	681b      	ldr	r3, [r3, #0]
 8000226:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 800022a:	f043 0301 	orr.w	r3, r3, #1
 800022e:	6013      	str	r3, [r2, #0]
	while(!(*TIM2_SR & 0x01));
 8000230:	bf00      	nop
 8000232:	4b0e      	ldr	r3, [pc, #56]	@ (800026c <Timer2_delay+0x68>)
 8000234:	681b      	ldr	r3, [r3, #0]
 8000236:	f003 0301 	and.w	r3, r3, #1
 800023a:	2b00      	cmp	r3, #0
 800023c:	d0f9      	beq.n	8000232 <Timer2_delay+0x2e>
	*TIM2_SR = 0x00;
 800023e:	4b0b      	ldr	r3, [pc, #44]	@ (800026c <Timer2_delay+0x68>)
 8000240:	2200      	movs	r2, #0
 8000242:	601a      	str	r2, [r3, #0]
	*TIM2_CR1 &= ~(1<<0);
 8000244:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8000248:	681b      	ldr	r3, [r3, #0]
 800024a:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 800024e:	f023 0301 	bic.w	r3, r3, #1
 8000252:	6013      	str	r3, [r2, #0]
}
 8000254:	bf00      	nop
 8000256:	370c      	adds	r7, #12
 8000258:	46bd      	mov	sp, r7
 800025a:	bc80      	pop	{r7}
 800025c:	4770      	bx	lr
 800025e:	bf00      	nop
 8000260:	40000028 	.word	0x40000028
 8000264:	4000002c 	.word	0x4000002c
 8000268:	40000024 	.word	0x40000024
 800026c:	40000010 	.word	0x40000010

08000270 <main>:


int main(void)
{
 8000270:	b580      	push	{r7, lr}
 8000272:	af00      	add	r7, sp, #0
	*RCC_APB1ENR |= (1 << 0);
 8000274:	4b17      	ldr	r3, [pc, #92]	@ (80002d4 <main+0x64>)
 8000276:	681b      	ldr	r3, [r3, #0]
 8000278:	4a16      	ldr	r2, [pc, #88]	@ (80002d4 <main+0x64>)
 800027a:	f043 0301 	orr.w	r3, r3, #1
 800027e:	6013      	str	r3, [r2, #0]
	*RCC_AHB1ENR |= (1 << RCC_AHB1ENR_GPIOAEN);
 8000280:	4b15      	ldr	r3, [pc, #84]	@ (80002d8 <main+0x68>)
 8000282:	681b      	ldr	r3, [r3, #0]
 8000284:	4a14      	ldr	r2, [pc, #80]	@ (80002d8 <main+0x68>)
 8000286:	f043 0301 	orr.w	r3, r3, #1
 800028a:	6013      	str	r3, [r2, #0]
	*GPIOA_MODER |= (1 << GPIO_MODER_MODER5);
 800028c:	4b13      	ldr	r3, [pc, #76]	@ (80002dc <main+0x6c>)
 800028e:	681b      	ldr	r3, [r3, #0]
 8000290:	4a12      	ldr	r2, [pc, #72]	@ (80002dc <main+0x6c>)
 8000292:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8000296:	6013      	str	r3, [r2, #0]
	*GPIOA_TYPER &= ~(1<<5);
 8000298:	4b11      	ldr	r3, [pc, #68]	@ (80002e0 <main+0x70>)
 800029a:	681b      	ldr	r3, [r3, #0]
 800029c:	4a10      	ldr	r2, [pc, #64]	@ (80002e0 <main+0x70>)
 800029e:	f023 0320 	bic.w	r3, r3, #32
 80002a2:	6013      	str	r3, [r2, #0]
	*GPIOA_OSPEEDR |= (1<<10);
 80002a4:	4b0f      	ldr	r3, [pc, #60]	@ (80002e4 <main+0x74>)
 80002a6:	681b      	ldr	r3, [r3, #0]
 80002a8:	4a0e      	ldr	r2, [pc, #56]	@ (80002e4 <main+0x74>)
 80002aa:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 80002ae:	6013      	str	r3, [r2, #0]
	*GPIOA_PUDR &= ~(3 << 10);
 80002b0:	4b0d      	ldr	r3, [pc, #52]	@ (80002e8 <main+0x78>)
 80002b2:	681b      	ldr	r3, [r3, #0]
 80002b4:	4a0c      	ldr	r2, [pc, #48]	@ (80002e8 <main+0x78>)
 80002b6:	f423 6340 	bic.w	r3, r3, #3072	@ 0xc00
 80002ba:	6013      	str	r3, [r2, #0]

    /* Loop forever */
	for(;;)
	{
		*GPIOA_ODR ^= (1<<5);
 80002bc:	4b0b      	ldr	r3, [pc, #44]	@ (80002ec <main+0x7c>)
 80002be:	681b      	ldr	r3, [r3, #0]
 80002c0:	4a0a      	ldr	r2, [pc, #40]	@ (80002ec <main+0x7c>)
 80002c2:	f083 0320 	eor.w	r3, r3, #32
 80002c6:	6013      	str	r3, [r2, #0]
//		printf("Hello world::\n");
		Timer2_delay(100);
 80002c8:	2064      	movs	r0, #100	@ 0x64
 80002ca:	f7ff ff9b 	bl	8000204 <Timer2_delay>
		*GPIOA_ODR ^= (1<<5);
 80002ce:	bf00      	nop
 80002d0:	e7f4      	b.n	80002bc <main+0x4c>
 80002d2:	bf00      	nop
 80002d4:	40023840 	.word	0x40023840
 80002d8:	40023830 	.word	0x40023830
 80002dc:	40020000 	.word	0x40020000
 80002e0:	40020004 	.word	0x40020004
 80002e4:	40020008 	.word	0x40020008
 80002e8:	4002000c 	.word	0x4002000c
 80002ec:	40020014 	.word	0x40020014

080002f0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002f0:	480d      	ldr	r0, [pc, #52]	@ (8000328 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002f2:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80002f4:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002f8:	480c      	ldr	r0, [pc, #48]	@ (800032c <LoopForever+0x6>)
  ldr r1, =_edata
 80002fa:	490d      	ldr	r1, [pc, #52]	@ (8000330 <LoopForever+0xa>)
  ldr r2, =_sidata
 80002fc:	4a0d      	ldr	r2, [pc, #52]	@ (8000334 <LoopForever+0xe>)
  movs r3, #0
 80002fe:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000300:	e002      	b.n	8000308 <LoopCopyDataInit>

08000302 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000302:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000304:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000306:	3304      	adds	r3, #4

08000308 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000308:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800030a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800030c:	d3f9      	bcc.n	8000302 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800030e:	4a0a      	ldr	r2, [pc, #40]	@ (8000338 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000310:	4c0a      	ldr	r4, [pc, #40]	@ (800033c <LoopForever+0x16>)
  movs r3, #0
 8000312:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000314:	e001      	b.n	800031a <LoopFillZerobss>

08000316 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000316:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000318:	3204      	adds	r2, #4

0800031a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800031a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800031c:	d3fb      	bcc.n	8000316 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800031e:	f000 f811 	bl	8000344 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000322:	f7ff ffa5 	bl	8000270 <main>

08000326 <LoopForever>:

LoopForever:
  b LoopForever
 8000326:	e7fe      	b.n	8000326 <LoopForever>
  ldr   r0, =_estack
 8000328:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 800032c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000330:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000334:	080003ac 	.word	0x080003ac
  ldr r2, =_sbss
 8000338:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 800033c:	2000001c 	.word	0x2000001c

08000340 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000340:	e7fe      	b.n	8000340 <ADC_IRQHandler>
	...

08000344 <__libc_init_array>:
 8000344:	b570      	push	{r4, r5, r6, lr}
 8000346:	4d0d      	ldr	r5, [pc, #52]	@ (800037c <__libc_init_array+0x38>)
 8000348:	4c0d      	ldr	r4, [pc, #52]	@ (8000380 <__libc_init_array+0x3c>)
 800034a:	1b64      	subs	r4, r4, r5
 800034c:	10a4      	asrs	r4, r4, #2
 800034e:	2600      	movs	r6, #0
 8000350:	42a6      	cmp	r6, r4
 8000352:	d109      	bne.n	8000368 <__libc_init_array+0x24>
 8000354:	4d0b      	ldr	r5, [pc, #44]	@ (8000384 <__libc_init_array+0x40>)
 8000356:	4c0c      	ldr	r4, [pc, #48]	@ (8000388 <__libc_init_array+0x44>)
 8000358:	f000 f818 	bl	800038c <_init>
 800035c:	1b64      	subs	r4, r4, r5
 800035e:	10a4      	asrs	r4, r4, #2
 8000360:	2600      	movs	r6, #0
 8000362:	42a6      	cmp	r6, r4
 8000364:	d105      	bne.n	8000372 <__libc_init_array+0x2e>
 8000366:	bd70      	pop	{r4, r5, r6, pc}
 8000368:	f855 3b04 	ldr.w	r3, [r5], #4
 800036c:	4798      	blx	r3
 800036e:	3601      	adds	r6, #1
 8000370:	e7ee      	b.n	8000350 <__libc_init_array+0xc>
 8000372:	f855 3b04 	ldr.w	r3, [r5], #4
 8000376:	4798      	blx	r3
 8000378:	3601      	adds	r6, #1
 800037a:	e7f2      	b.n	8000362 <__libc_init_array+0x1e>
 800037c:	080003a4 	.word	0x080003a4
 8000380:	080003a4 	.word	0x080003a4
 8000384:	080003a4 	.word	0x080003a4
 8000388:	080003a8 	.word	0x080003a8

0800038c <_init>:
 800038c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800038e:	bf00      	nop
 8000390:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000392:	bc08      	pop	{r3}
 8000394:	469e      	mov	lr, r3
 8000396:	4770      	bx	lr

08000398 <_fini>:
 8000398:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800039a:	bf00      	nop
 800039c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800039e:	bc08      	pop	{r3}
 80003a0:	469e      	mov	lr, r3
 80003a2:	4770      	bx	lr
