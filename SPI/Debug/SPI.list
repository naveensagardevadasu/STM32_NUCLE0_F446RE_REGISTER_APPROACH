
SPI.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000013dc  080001d0  080001d0  000011d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000058  080015ac  080015ac  000025ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001604  08001604  00003068  2**0
                  CONTENTS
  4 .ARM          00000008  08001604  08001604  00002604  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0800160c  0800160c  00003068  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800160c  0800160c  0000260c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08001610  08001610  00002610  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000068  20000000  08001614  00003000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000178  20000068  0800167c  00003068  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200001e0  0800167c  000031e0  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  00003068  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000dbe  00000000  00000000  00003092  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000479  00000000  00000000  00003e50  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000148  00000000  00000000  000042d0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000000e1  00000000  00000000  00004418  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000d769  00000000  00000000  000044f9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00001adc  00000000  00000000  00011c62  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00047337  00000000  00000000  0001373e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  0005aa75  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000b7c  00000000  00000000  0005aab8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000009b  00000000  00000000  0005b634  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	@ (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	@ (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	@ (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	20000068 	.word	0x20000068
 80001ec:	00000000 	.word	0x00000000
 80001f0:	08001594 	.word	0x08001594

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	@ (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	@ (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	@ (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	2000006c 	.word	0x2000006c
 800020c:	08001594 	.word	0x08001594

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <main>:
char src[]="Hello World";
char dest[12];


int main(void)
{
 80002b0:	b580      	push	{r7, lr}
 80002b2:	b082      	sub	sp, #8
 80002b4:	af00      	add	r7, sp, #0
	uint32_t count=0;
 80002b6:	2300      	movs	r3, #0
 80002b8:	607b      	str	r3, [r7, #4]
	//Initializations
	GPIO_init();
 80002ba:	f000 f843 	bl	8000344 <GPIO_init>
	SPI1_master();
 80002be:	f000 f8a7 	bl	8000410 <SPI1_master>
	SPI3_slave();
 80002c2:	f000 f901 	bl	80004c8 <SPI3_slave>
	//Loop for communication
	for(count=0;count<12;count++)
 80002c6:	2300      	movs	r3, #0
 80002c8:	607b      	str	r3, [r7, #4]
 80002ca:	e01d      	b.n	8000308 <main+0x58>
		{
		    SPI1->DR = src[count];// send data from SPI-1
 80002cc:	4a17      	ldr	r2, [pc, #92]	@ (800032c <main+0x7c>)
 80002ce:	687b      	ldr	r3, [r7, #4]
 80002d0:	4413      	add	r3, r2
 80002d2:	781a      	ldrb	r2, [r3, #0]
 80002d4:	4b16      	ldr	r3, [pc, #88]	@ (8000330 <main+0x80>)
 80002d6:	60da      	str	r2, [r3, #12]
		    while (!(SPI1->SR & (1<<1)))
 80002d8:	bf00      	nop
 80002da:	4b15      	ldr	r3, [pc, #84]	@ (8000330 <main+0x80>)
 80002dc:	689b      	ldr	r3, [r3, #8]
 80002de:	f003 0302 	and.w	r3, r3, #2
 80002e2:	2b00      	cmp	r3, #0
 80002e4:	d0f9      	beq.n	80002da <main+0x2a>
		    {

		    }

		    if (SPI3->SR & (1<<0))//bit 0->: Rx buffer not empty if Rx buffer not empty we are copying the data received in SPI2->DR to a global variable
 80002e6:	4b13      	ldr	r3, [pc, #76]	@ (8000334 <main+0x84>)
 80002e8:	689b      	ldr	r3, [r3, #8]
 80002ea:	f003 0301 	and.w	r3, r3, #1
 80002ee:	2b00      	cmp	r3, #0
 80002f0:	d007      	beq.n	8000302 <main+0x52>
		  	{
		  	    dest[count] = SPI3->DR;//check variable rc in live expression, decimal value of 0x11 =17 will be there
 80002f2:	4b10      	ldr	r3, [pc, #64]	@ (8000334 <main+0x84>)
 80002f4:	68db      	ldr	r3, [r3, #12]
 80002f6:	b2d9      	uxtb	r1, r3
 80002f8:	4a0f      	ldr	r2, [pc, #60]	@ (8000338 <main+0x88>)
 80002fa:	687b      	ldr	r3, [r7, #4]
 80002fc:	4413      	add	r3, r2
 80002fe:	460a      	mov	r2, r1
 8000300:	701a      	strb	r2, [r3, #0]
	for(count=0;count<12;count++)
 8000302:	687b      	ldr	r3, [r7, #4]
 8000304:	3301      	adds	r3, #1
 8000306:	607b      	str	r3, [r7, #4]
 8000308:	687b      	ldr	r3, [r7, #4]
 800030a:	2b0b      	cmp	r3, #11
 800030c:	d9de      	bls.n	80002cc <main+0x1c>
		  	}
		}
	dest[count]='\0';
 800030e:	4a0a      	ldr	r2, [pc, #40]	@ (8000338 <main+0x88>)
 8000310:	687b      	ldr	r3, [r7, #4]
 8000312:	4413      	add	r3, r2
 8000314:	2200      	movs	r2, #0
 8000316:	701a      	strb	r2, [r3, #0]
	printf("sent data : %s\n",src);
 8000318:	4904      	ldr	r1, [pc, #16]	@ (800032c <main+0x7c>)
 800031a:	4808      	ldr	r0, [pc, #32]	@ (800033c <main+0x8c>)
 800031c:	f000 fad2 	bl	80008c4 <iprintf>
	printf("received data : %s\n",dest);
 8000320:	4905      	ldr	r1, [pc, #20]	@ (8000338 <main+0x88>)
 8000322:	4807      	ldr	r0, [pc, #28]	@ (8000340 <main+0x90>)
 8000324:	f000 face 	bl	80008c4 <iprintf>
//Infinite loop
	while (1);
 8000328:	bf00      	nop
 800032a:	e7fd      	b.n	8000328 <main+0x78>
 800032c:	20000000 	.word	0x20000000
 8000330:	40013000 	.word	0x40013000
 8000334:	40003c00 	.word	0x40003c00
 8000338:	20000084 	.word	0x20000084
 800033c:	080015ac 	.word	0x080015ac
 8000340:	080015bc 	.word	0x080015bc

08000344 <GPIO_init>:
 *      Author: SANDEEP S C
 */
#include "spi.h"

void GPIO_init()
{
 8000344:	b480      	push	{r7}
 8000346:	af00      	add	r7, sp, #0
	RCC->AHB1ENR |= (1<<0);							//PortA Clock Enable
 8000348:	4b2e      	ldr	r3, [pc, #184]	@ (8000404 <GPIO_init+0xc0>)
 800034a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800034c:	4a2d      	ldr	r2, [pc, #180]	@ (8000404 <GPIO_init+0xc0>)
 800034e:	f043 0301 	orr.w	r3, r3, #1
 8000352:	6313      	str	r3, [r2, #48]	@ 0x30
	GPIOA->MODER &= ~((3<<10)|(3<<12)|(3<<14));		//clear PA5-PA7
 8000354:	4b2c      	ldr	r3, [pc, #176]	@ (8000408 <GPIO_init+0xc4>)
 8000356:	681b      	ldr	r3, [r3, #0]
 8000358:	4a2b      	ldr	r2, [pc, #172]	@ (8000408 <GPIO_init+0xc4>)
 800035a:	f423 437c 	bic.w	r3, r3, #64512	@ 0xfc00
 800035e:	6013      	str	r3, [r2, #0]
	GPIOA->MODER |= (2<<10)|(2<<12)|(2<<14);		//Alternate mode -10
 8000360:	4b29      	ldr	r3, [pc, #164]	@ (8000408 <GPIO_init+0xc4>)
 8000362:	681b      	ldr	r3, [r3, #0]
 8000364:	4a28      	ldr	r2, [pc, #160]	@ (8000408 <GPIO_init+0xc4>)
 8000366:	f443 4328 	orr.w	r3, r3, #43008	@ 0xa800
 800036a:	6013      	str	r3, [r2, #0]
	//GPIOA->OTYPER &= ~(7<<5); 						//push-pull for PA5-PA7;
	GPIOA->OSPEEDR &= ~((3<<10)|(3<<12)|(3<<14));	//clear speed select
 800036c:	4b26      	ldr	r3, [pc, #152]	@ (8000408 <GPIO_init+0xc4>)
 800036e:	689b      	ldr	r3, [r3, #8]
 8000370:	4a25      	ldr	r2, [pc, #148]	@ (8000408 <GPIO_init+0xc4>)
 8000372:	f423 437c 	bic.w	r3, r3, #64512	@ 0xfc00
 8000376:	6093      	str	r3, [r2, #8]
	GPIOA->OSPEEDR |= (2<<10)|(2<<12)|(2<<14);		//High speed PA5-PA7
 8000378:	4b23      	ldr	r3, [pc, #140]	@ (8000408 <GPIO_init+0xc4>)
 800037a:	689b      	ldr	r3, [r3, #8]
 800037c:	4a22      	ldr	r2, [pc, #136]	@ (8000408 <GPIO_init+0xc4>)
 800037e:	f443 4328 	orr.w	r3, r3, #43008	@ 0xa800
 8000382:	6093      	str	r3, [r2, #8]
	GPIOA->AFR[0] &= ~(0xFFF<<20);
 8000384:	4b20      	ldr	r3, [pc, #128]	@ (8000408 <GPIO_init+0xc4>)
 8000386:	6a1b      	ldr	r3, [r3, #32]
 8000388:	4a1f      	ldr	r2, [pc, #124]	@ (8000408 <GPIO_init+0xc4>)
 800038a:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800038e:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] |= (0x555<<20);					//SPI alternate function PA5-PA7
 8000390:	4b1d      	ldr	r3, [pc, #116]	@ (8000408 <GPIO_init+0xc4>)
 8000392:	6a1b      	ldr	r3, [r3, #32]
 8000394:	4a1c      	ldr	r2, [pc, #112]	@ (8000408 <GPIO_init+0xc4>)
 8000396:	f043 43aa 	orr.w	r3, r3, #1426063360	@ 0x55000000
 800039a:	f443 03a0 	orr.w	r3, r3, #5242880	@ 0x500000
 800039e:	6213      	str	r3, [r2, #32]

	RCC->AHB1ENR |= (1<<2);							//PortC Clock Enable
 80003a0:	4b18      	ldr	r3, [pc, #96]	@ (8000404 <GPIO_init+0xc0>)
 80003a2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003a4:	4a17      	ldr	r2, [pc, #92]	@ (8000404 <GPIO_init+0xc0>)
 80003a6:	f043 0304 	orr.w	r3, r3, #4
 80003aa:	6313      	str	r3, [r2, #48]	@ 0x30
	GPIOC->MODER &= ~((3<<20)|(3<<22)|(3<<24));		//clear PC10-PB12
 80003ac:	4b17      	ldr	r3, [pc, #92]	@ (800040c <GPIO_init+0xc8>)
 80003ae:	681b      	ldr	r3, [r3, #0]
 80003b0:	4a16      	ldr	r2, [pc, #88]	@ (800040c <GPIO_init+0xc8>)
 80003b2:	f023 737c 	bic.w	r3, r3, #66060288	@ 0x3f00000
 80003b6:	6013      	str	r3, [r2, #0]
	GPIOC->MODER |= (2<<20)|(2<<22)|(2<<24);		//Alternate mode
 80003b8:	4b14      	ldr	r3, [pc, #80]	@ (800040c <GPIO_init+0xc8>)
 80003ba:	681b      	ldr	r3, [r3, #0]
 80003bc:	4a13      	ldr	r2, [pc, #76]	@ (800040c <GPIO_init+0xc8>)
 80003be:	f043 7328 	orr.w	r3, r3, #44040192	@ 0x2a00000
 80003c2:	6013      	str	r3, [r2, #0]
	//GPIOC->OTYPER &= ~(7<<10); 						//push-pull for PC10-PC12;
	GPIOC->OSPEEDR &= ~((3<<20)|(3<<22)|(3<<24));	//clear speed select
 80003c4:	4b11      	ldr	r3, [pc, #68]	@ (800040c <GPIO_init+0xc8>)
 80003c6:	689b      	ldr	r3, [r3, #8]
 80003c8:	4a10      	ldr	r2, [pc, #64]	@ (800040c <GPIO_init+0xc8>)
 80003ca:	f023 737c 	bic.w	r3, r3, #66060288	@ 0x3f00000
 80003ce:	6093      	str	r3, [r2, #8]
	GPIOC->OSPEEDR |= (2<<20)|(2<<22)|(2<<24);		//High speed PC10-PC12
 80003d0:	4b0e      	ldr	r3, [pc, #56]	@ (800040c <GPIO_init+0xc8>)
 80003d2:	689b      	ldr	r3, [r3, #8]
 80003d4:	4a0d      	ldr	r2, [pc, #52]	@ (800040c <GPIO_init+0xc8>)
 80003d6:	f043 7328 	orr.w	r3, r3, #44040192	@ 0x2a00000
 80003da:	6093      	str	r3, [r2, #8]
	GPIOC->AFR[1] &= ~(0xFFF<<8);
 80003dc:	4b0b      	ldr	r3, [pc, #44]	@ (800040c <GPIO_init+0xc8>)
 80003de:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80003e0:	4a0a      	ldr	r2, [pc, #40]	@ (800040c <GPIO_init+0xc8>)
 80003e2:	f423 237f 	bic.w	r3, r3, #1044480	@ 0xff000
 80003e6:	f423 6370 	bic.w	r3, r3, #3840	@ 0xf00
 80003ea:	6253      	str	r3, [r2, #36]	@ 0x24
	GPIOC->AFR[1] |= (0x666<<8);					//SPI alternate function PC10-PC12
 80003ec:	4b07      	ldr	r3, [pc, #28]	@ (800040c <GPIO_init+0xc8>)
 80003ee:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80003f0:	4a06      	ldr	r2, [pc, #24]	@ (800040c <GPIO_init+0xc8>)
 80003f2:	f443 23cc 	orr.w	r3, r3, #417792	@ 0x66000
 80003f6:	f443 63c0 	orr.w	r3, r3, #1536	@ 0x600
 80003fa:	6253      	str	r3, [r2, #36]	@ 0x24
}
 80003fc:	bf00      	nop
 80003fe:	46bd      	mov	sp, r7
 8000400:	bc80      	pop	{r7}
 8000402:	4770      	bx	lr
 8000404:	40023800 	.word	0x40023800
 8000408:	40020000 	.word	0x40020000
 800040c:	40020800 	.word	0x40020800

08000410 <SPI1_master>:

void SPI1_master()
{
 8000410:	b480      	push	{r7}
 8000412:	af00      	add	r7, sp, #0
	RCC->APB2ENR |= (1<<12);	//Enable SPI1 clock
 8000414:	4b2a      	ldr	r3, [pc, #168]	@ (80004c0 <SPI1_master+0xb0>)
 8000416:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8000418:	4a29      	ldr	r2, [pc, #164]	@ (80004c0 <SPI1_master+0xb0>)
 800041a:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 800041e:	6453      	str	r3, [r2, #68]	@ 0x44
	SPI1->CR1 |= (1<<2);		//Master Enable SPI1 -Setting bit 2
 8000420:	4b28      	ldr	r3, [pc, #160]	@ (80004c4 <SPI1_master+0xb4>)
 8000422:	681b      	ldr	r3, [r3, #0]
 8000424:	4a27      	ldr	r2, [pc, #156]	@ (80004c4 <SPI1_master+0xb4>)
 8000426:	f043 0304 	orr.w	r3, r3, #4
 800042a:	6013      	str	r3, [r2, #0]
	SPI1->CR1 |= (1<<0)|(1<<1);	//CPHA=1-Clock phase, 	CPOL=1-clock polarity set
 800042c:	4b25      	ldr	r3, [pc, #148]	@ (80004c4 <SPI1_master+0xb4>)
 800042e:	681b      	ldr	r3, [r3, #0]
 8000430:	4a24      	ldr	r2, [pc, #144]	@ (80004c4 <SPI1_master+0xb4>)
 8000432:	f043 0303 	orr.w	r3, r3, #3
 8000436:	6013      	str	r3, [r2, #0]
	SPI1->CR1 &= ~(7<<3);		//clear baudrate -bit 5 4 3 cleared
 8000438:	4b22      	ldr	r3, [pc, #136]	@ (80004c4 <SPI1_master+0xb4>)
 800043a:	681b      	ldr	r3, [r3, #0]
 800043c:	4a21      	ldr	r2, [pc, #132]	@ (80004c4 <SPI1_master+0xb4>)
 800043e:	f023 0338 	bic.w	r3, r3, #56	@ 0x38
 8000442:	6013      	str	r3, [r2, #0]
	SPI1->CR1 |= (3<<3); 		//set baudrate by fclk/16 -011 to get 1 MHZ baud rate
 8000444:	4b1f      	ldr	r3, [pc, #124]	@ (80004c4 <SPI1_master+0xb4>)
 8000446:	681b      	ldr	r3, [r3, #0]
 8000448:	4a1e      	ldr	r2, [pc, #120]	@ (80004c4 <SPI1_master+0xb4>)
 800044a:	f043 0318 	orr.w	r3, r3, #24
 800044e:	6013      	str	r3, [r2, #0]
	SPI1->CR1 &=~(1<<7);		//MSB bit first - 7th bit cleared
 8000450:	4b1c      	ldr	r3, [pc, #112]	@ (80004c4 <SPI1_master+0xb4>)
 8000452:	681b      	ldr	r3, [r3, #0]
 8000454:	4a1b      	ldr	r2, [pc, #108]	@ (80004c4 <SPI1_master+0xb4>)
 8000456:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 800045a:	6013      	str	r3, [r2, #0]
	SPI1->CR1 |= (1<<9); 		//Software slave enable SSM
 800045c:	4b19      	ldr	r3, [pc, #100]	@ (80004c4 <SPI1_master+0xb4>)
 800045e:	681b      	ldr	r3, [r3, #0]
 8000460:	4a18      	ldr	r2, [pc, #96]	@ (80004c4 <SPI1_master+0xb4>)
 8000462:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8000466:	6013      	str	r3, [r2, #0]
	SPI1->CR1 |= (1<<8);		//Internal slave select
 8000468:	4b16      	ldr	r3, [pc, #88]	@ (80004c4 <SPI1_master+0xb4>)
 800046a:	681b      	ldr	r3, [r3, #0]
 800046c:	4a15      	ldr	r2, [pc, #84]	@ (80004c4 <SPI1_master+0xb4>)
 800046e:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8000472:	6013      	str	r3, [r2, #0]
	SPI1->CR1 &=~(1<<10);		//Full duplex mode
 8000474:	4b13      	ldr	r3, [pc, #76]	@ (80004c4 <SPI1_master+0xb4>)
 8000476:	681b      	ldr	r3, [r3, #0]
 8000478:	4a12      	ldr	r2, [pc, #72]	@ (80004c4 <SPI1_master+0xb4>)
 800047a:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 800047e:	6013      	str	r3, [r2, #0]
	SPI1->CR1 &=~(1<<11);		//8-bit data format
 8000480:	4b10      	ldr	r3, [pc, #64]	@ (80004c4 <SPI1_master+0xb4>)
 8000482:	681b      	ldr	r3, [r3, #0]
 8000484:	4a0f      	ldr	r2, [pc, #60]	@ (80004c4 <SPI1_master+0xb4>)
 8000486:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 800048a:	6013      	str	r3, [r2, #0]
	SPI1->CR1 &=~(3<<12);		// No CRC-Cyclic redundancy check
 800048c:	4b0d      	ldr	r3, [pc, #52]	@ (80004c4 <SPI1_master+0xb4>)
 800048e:	681b      	ldr	r3, [r3, #0]
 8000490:	4a0c      	ldr	r2, [pc, #48]	@ (80004c4 <SPI1_master+0xb4>)
 8000492:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 8000496:	6013      	str	r3, [r2, #0]
	SPI1->CR1 &=~(1<<15);		// unidirectional mode
 8000498:	4b0a      	ldr	r3, [pc, #40]	@ (80004c4 <SPI1_master+0xb4>)
 800049a:	681b      	ldr	r3, [r3, #0]
 800049c:	4a09      	ldr	r2, [pc, #36]	@ (80004c4 <SPI1_master+0xb4>)
 800049e:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 80004a2:	6013      	str	r3, [r2, #0]
	SPI1->CR1 |= (1<<6);		// SPI Enable
 80004a4:	4b07      	ldr	r3, [pc, #28]	@ (80004c4 <SPI1_master+0xb4>)
 80004a6:	681b      	ldr	r3, [r3, #0]
 80004a8:	4a06      	ldr	r2, [pc, #24]	@ (80004c4 <SPI1_master+0xb4>)
 80004aa:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80004ae:	6013      	str	r3, [r2, #0]
	SPI1->CR2=0;
 80004b0:	4b04      	ldr	r3, [pc, #16]	@ (80004c4 <SPI1_master+0xb4>)
 80004b2:	2200      	movs	r2, #0
 80004b4:	605a      	str	r2, [r3, #4]
}
 80004b6:	bf00      	nop
 80004b8:	46bd      	mov	sp, r7
 80004ba:	bc80      	pop	{r7}
 80004bc:	4770      	bx	lr
 80004be:	bf00      	nop
 80004c0:	40023800 	.word	0x40023800
 80004c4:	40013000 	.word	0x40013000

080004c8 <SPI3_slave>:

void SPI3_slave()
{
 80004c8:	b480      	push	{r7}
 80004ca:	af00      	add	r7, sp, #0
	RCC->APB1ENR |= (1<<15); 		//SPI3 clock enable
 80004cc:	4b22      	ldr	r3, [pc, #136]	@ (8000558 <SPI3_slave+0x90>)
 80004ce:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80004d0:	4a21      	ldr	r2, [pc, #132]	@ (8000558 <SPI3_slave+0x90>)
 80004d2:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 80004d6:	6413      	str	r3, [r2, #64]	@ 0x40
	SPI3->CR1 &= ~(1<<2);			//Slave mode enable
 80004d8:	4b20      	ldr	r3, [pc, #128]	@ (800055c <SPI3_slave+0x94>)
 80004da:	681b      	ldr	r3, [r3, #0]
 80004dc:	4a1f      	ldr	r2, [pc, #124]	@ (800055c <SPI3_slave+0x94>)
 80004de:	f023 0304 	bic.w	r3, r3, #4
 80004e2:	6013      	str	r3, [r2, #0]
	SPI3->CR1 |= (1<<0)|(1<<1);		//CPHA=1, 	CPOL=1
 80004e4:	4b1d      	ldr	r3, [pc, #116]	@ (800055c <SPI3_slave+0x94>)
 80004e6:	681b      	ldr	r3, [r3, #0]
 80004e8:	4a1c      	ldr	r2, [pc, #112]	@ (800055c <SPI3_slave+0x94>)
 80004ea:	f043 0303 	orr.w	r3, r3, #3
 80004ee:	6013      	str	r3, [r2, #0]
	SPI3->CR1 &=~(1<<7);			//MSB bit first
 80004f0:	4b1a      	ldr	r3, [pc, #104]	@ (800055c <SPI3_slave+0x94>)
 80004f2:	681b      	ldr	r3, [r3, #0]
 80004f4:	4a19      	ldr	r2, [pc, #100]	@ (800055c <SPI3_slave+0x94>)
 80004f6:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 80004fa:	6013      	str	r3, [r2, #0]
	SPI3->CR1 |= (1<<9); 			//Software slave enable
 80004fc:	4b17      	ldr	r3, [pc, #92]	@ (800055c <SPI3_slave+0x94>)
 80004fe:	681b      	ldr	r3, [r3, #0]
 8000500:	4a16      	ldr	r2, [pc, #88]	@ (800055c <SPI3_slave+0x94>)
 8000502:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8000506:	6013      	str	r3, [r2, #0]
	SPI3->CR1 &= ~(1<<8);			//clear Internal slave select
 8000508:	4b14      	ldr	r3, [pc, #80]	@ (800055c <SPI3_slave+0x94>)
 800050a:	681b      	ldr	r3, [r3, #0]
 800050c:	4a13      	ldr	r2, [pc, #76]	@ (800055c <SPI3_slave+0x94>)
 800050e:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8000512:	6013      	str	r3, [r2, #0]
	SPI3->CR1 &= ~(1<<10);			//Full duplex mode
 8000514:	4b11      	ldr	r3, [pc, #68]	@ (800055c <SPI3_slave+0x94>)
 8000516:	681b      	ldr	r3, [r3, #0]
 8000518:	4a10      	ldr	r2, [pc, #64]	@ (800055c <SPI3_slave+0x94>)
 800051a:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 800051e:	6013      	str	r3, [r2, #0]
	SPI3->CR1 &= ~(1<<11);			//8-bit data format
 8000520:	4b0e      	ldr	r3, [pc, #56]	@ (800055c <SPI3_slave+0x94>)
 8000522:	681b      	ldr	r3, [r3, #0]
 8000524:	4a0d      	ldr	r2, [pc, #52]	@ (800055c <SPI3_slave+0x94>)
 8000526:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 800052a:	6013      	str	r3, [r2, #0]
	SPI3->CR1 &= ~(3<<12);			// No CRC
 800052c:	4b0b      	ldr	r3, [pc, #44]	@ (800055c <SPI3_slave+0x94>)
 800052e:	681b      	ldr	r3, [r3, #0]
 8000530:	4a0a      	ldr	r2, [pc, #40]	@ (800055c <SPI3_slave+0x94>)
 8000532:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 8000536:	6013      	str	r3, [r2, #0]
	SPI3->CR1 &= ~(1<<15);			// unidirectional mode
 8000538:	4b08      	ldr	r3, [pc, #32]	@ (800055c <SPI3_slave+0x94>)
 800053a:	681b      	ldr	r3, [r3, #0]
 800053c:	4a07      	ldr	r2, [pc, #28]	@ (800055c <SPI3_slave+0x94>)
 800053e:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 8000542:	6013      	str	r3, [r2, #0]
	SPI3->CR1 |= (1<<6);			// SPI Enable
 8000544:	4b05      	ldr	r3, [pc, #20]	@ (800055c <SPI3_slave+0x94>)
 8000546:	681b      	ldr	r3, [r3, #0]
 8000548:	4a04      	ldr	r2, [pc, #16]	@ (800055c <SPI3_slave+0x94>)
 800054a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800054e:	6013      	str	r3, [r2, #0]
}
 8000550:	bf00      	nop
 8000552:	46bd      	mov	sp, r7
 8000554:	bc80      	pop	{r7}
 8000556:	4770      	bx	lr
 8000558:	40023800 	.word	0x40023800
 800055c:	40003c00 	.word	0x40003c00

08000560 <ITM_SendChar>:
/* ITM register addresses */
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 8000560:	b480      	push	{r7}
 8000562:	b083      	sub	sp, #12
 8000564:	af00      	add	r7, sp, #0
 8000566:	4603      	mov	r3, r0
 8000568:	71fb      	strb	r3, [r7, #7]

	//Enable TRCENA
	DEMCR |= ( 1 << 24);
 800056a:	4b0e      	ldr	r3, [pc, #56]	@ (80005a4 <ITM_SendChar+0x44>)
 800056c:	681b      	ldr	r3, [r3, #0]
 800056e:	4a0d      	ldr	r2, [pc, #52]	@ (80005a4 <ITM_SendChar+0x44>)
 8000570:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8000574:	6013      	str	r3, [r2, #0]

	//enable stimulus port 0
	ITM_TRACE_EN |= ( 1 << 0);
 8000576:	4b0c      	ldr	r3, [pc, #48]	@ (80005a8 <ITM_SendChar+0x48>)
 8000578:	681b      	ldr	r3, [r3, #0]
 800057a:	4a0b      	ldr	r2, [pc, #44]	@ (80005a8 <ITM_SendChar+0x48>)
 800057c:	f043 0301 	orr.w	r3, r3, #1
 8000580:	6013      	str	r3, [r2, #0]

	// read FIFO status in bit [0]:
	while(!(ITM_STIMULUS_PORT0 & 1));
 8000582:	bf00      	nop
 8000584:	f04f 4360 	mov.w	r3, #3758096384	@ 0xe0000000
 8000588:	681b      	ldr	r3, [r3, #0]
 800058a:	f003 0301 	and.w	r3, r3, #1
 800058e:	2b00      	cmp	r3, #0
 8000590:	d0f8      	beq.n	8000584 <ITM_SendChar+0x24>

	//Write to ITM stimulus port0
	ITM_STIMULUS_PORT0 = ch;
 8000592:	f04f 4260 	mov.w	r2, #3758096384	@ 0xe0000000
 8000596:	79fb      	ldrb	r3, [r7, #7]
 8000598:	6013      	str	r3, [r2, #0]
}
 800059a:	bf00      	nop
 800059c:	370c      	adds	r7, #12
 800059e:	46bd      	mov	sp, r7
 80005a0:	bc80      	pop	{r7}
 80005a2:	4770      	bx	lr
 80005a4:	e000edfc 	.word	0xe000edfc
 80005a8:	e0000e00 	.word	0xe0000e00

080005ac <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80005ac:	b580      	push	{r7, lr}
 80005ae:	b086      	sub	sp, #24
 80005b0:	af00      	add	r7, sp, #0
 80005b2:	60f8      	str	r0, [r7, #12]
 80005b4:	60b9      	str	r1, [r7, #8]
 80005b6:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80005b8:	2300      	movs	r3, #0
 80005ba:	617b      	str	r3, [r7, #20]
 80005bc:	e00a      	b.n	80005d4 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 80005be:	f3af 8000 	nop.w
 80005c2:	4601      	mov	r1, r0
 80005c4:	68bb      	ldr	r3, [r7, #8]
 80005c6:	1c5a      	adds	r2, r3, #1
 80005c8:	60ba      	str	r2, [r7, #8]
 80005ca:	b2ca      	uxtb	r2, r1
 80005cc:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80005ce:	697b      	ldr	r3, [r7, #20]
 80005d0:	3301      	adds	r3, #1
 80005d2:	617b      	str	r3, [r7, #20]
 80005d4:	697a      	ldr	r2, [r7, #20]
 80005d6:	687b      	ldr	r3, [r7, #4]
 80005d8:	429a      	cmp	r2, r3
 80005da:	dbf0      	blt.n	80005be <_read+0x12>
	}

return len;
 80005dc:	687b      	ldr	r3, [r7, #4]
}
 80005de:	4618      	mov	r0, r3
 80005e0:	3718      	adds	r7, #24
 80005e2:	46bd      	mov	sp, r7
 80005e4:	bd80      	pop	{r7, pc}

080005e6 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80005e6:	b580      	push	{r7, lr}
 80005e8:	b086      	sub	sp, #24
 80005ea:	af00      	add	r7, sp, #0
 80005ec:	60f8      	str	r0, [r7, #12]
 80005ee:	60b9      	str	r1, [r7, #8]
 80005f0:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80005f2:	2300      	movs	r3, #0
 80005f4:	617b      	str	r3, [r7, #20]
 80005f6:	e009      	b.n	800060c <_write+0x26>
	{
		//__io_putchar(*ptr++);
		ITM_SendChar(*ptr++);
 80005f8:	68bb      	ldr	r3, [r7, #8]
 80005fa:	1c5a      	adds	r2, r3, #1
 80005fc:	60ba      	str	r2, [r7, #8]
 80005fe:	781b      	ldrb	r3, [r3, #0]
 8000600:	4618      	mov	r0, r3
 8000602:	f7ff ffad 	bl	8000560 <ITM_SendChar>
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000606:	697b      	ldr	r3, [r7, #20]
 8000608:	3301      	adds	r3, #1
 800060a:	617b      	str	r3, [r7, #20]
 800060c:	697a      	ldr	r2, [r7, #20]
 800060e:	687b      	ldr	r3, [r7, #4]
 8000610:	429a      	cmp	r2, r3
 8000612:	dbf1      	blt.n	80005f8 <_write+0x12>
	}
	return len;
 8000614:	687b      	ldr	r3, [r7, #4]
}
 8000616:	4618      	mov	r0, r3
 8000618:	3718      	adds	r7, #24
 800061a:	46bd      	mov	sp, r7
 800061c:	bd80      	pop	{r7, pc}

0800061e <_close>:

int _close(int file)
{
 800061e:	b480      	push	{r7}
 8000620:	b083      	sub	sp, #12
 8000622:	af00      	add	r7, sp, #0
 8000624:	6078      	str	r0, [r7, #4]
	return -1;
 8000626:	f04f 33ff 	mov.w	r3, #4294967295
}
 800062a:	4618      	mov	r0, r3
 800062c:	370c      	adds	r7, #12
 800062e:	46bd      	mov	sp, r7
 8000630:	bc80      	pop	{r7}
 8000632:	4770      	bx	lr

08000634 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000634:	b480      	push	{r7}
 8000636:	b083      	sub	sp, #12
 8000638:	af00      	add	r7, sp, #0
 800063a:	6078      	str	r0, [r7, #4]
 800063c:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 800063e:	683b      	ldr	r3, [r7, #0]
 8000640:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8000644:	605a      	str	r2, [r3, #4]
	return 0;
 8000646:	2300      	movs	r3, #0
}
 8000648:	4618      	mov	r0, r3
 800064a:	370c      	adds	r7, #12
 800064c:	46bd      	mov	sp, r7
 800064e:	bc80      	pop	{r7}
 8000650:	4770      	bx	lr

08000652 <_isatty>:

int _isatty(int file)
{
 8000652:	b480      	push	{r7}
 8000654:	b083      	sub	sp, #12
 8000656:	af00      	add	r7, sp, #0
 8000658:	6078      	str	r0, [r7, #4]
	return 1;
 800065a:	2301      	movs	r3, #1
}
 800065c:	4618      	mov	r0, r3
 800065e:	370c      	adds	r7, #12
 8000660:	46bd      	mov	sp, r7
 8000662:	bc80      	pop	{r7}
 8000664:	4770      	bx	lr

08000666 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000666:	b480      	push	{r7}
 8000668:	b085      	sub	sp, #20
 800066a:	af00      	add	r7, sp, #0
 800066c:	60f8      	str	r0, [r7, #12]
 800066e:	60b9      	str	r1, [r7, #8]
 8000670:	607a      	str	r2, [r7, #4]
	return 0;
 8000672:	2300      	movs	r3, #0
}
 8000674:	4618      	mov	r0, r3
 8000676:	3714      	adds	r7, #20
 8000678:	46bd      	mov	sp, r7
 800067a:	bc80      	pop	{r7}
 800067c:	4770      	bx	lr
	...

08000680 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000680:	b580      	push	{r7, lr}
 8000682:	b086      	sub	sp, #24
 8000684:	af00      	add	r7, sp, #0
 8000686:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000688:	4a14      	ldr	r2, [pc, #80]	@ (80006dc <_sbrk+0x5c>)
 800068a:	4b15      	ldr	r3, [pc, #84]	@ (80006e0 <_sbrk+0x60>)
 800068c:	1ad3      	subs	r3, r2, r3
 800068e:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000690:	697b      	ldr	r3, [r7, #20]
 8000692:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000694:	4b13      	ldr	r3, [pc, #76]	@ (80006e4 <_sbrk+0x64>)
 8000696:	681b      	ldr	r3, [r3, #0]
 8000698:	2b00      	cmp	r3, #0
 800069a:	d102      	bne.n	80006a2 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 800069c:	4b11      	ldr	r3, [pc, #68]	@ (80006e4 <_sbrk+0x64>)
 800069e:	4a12      	ldr	r2, [pc, #72]	@ (80006e8 <_sbrk+0x68>)
 80006a0:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80006a2:	4b10      	ldr	r3, [pc, #64]	@ (80006e4 <_sbrk+0x64>)
 80006a4:	681a      	ldr	r2, [r3, #0]
 80006a6:	687b      	ldr	r3, [r7, #4]
 80006a8:	4413      	add	r3, r2
 80006aa:	693a      	ldr	r2, [r7, #16]
 80006ac:	429a      	cmp	r2, r3
 80006ae:	d207      	bcs.n	80006c0 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80006b0:	f000 f9ac 	bl	8000a0c <__errno>
 80006b4:	4603      	mov	r3, r0
 80006b6:	220c      	movs	r2, #12
 80006b8:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80006ba:	f04f 33ff 	mov.w	r3, #4294967295
 80006be:	e009      	b.n	80006d4 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80006c0:	4b08      	ldr	r3, [pc, #32]	@ (80006e4 <_sbrk+0x64>)
 80006c2:	681b      	ldr	r3, [r3, #0]
 80006c4:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80006c6:	4b07      	ldr	r3, [pc, #28]	@ (80006e4 <_sbrk+0x64>)
 80006c8:	681a      	ldr	r2, [r3, #0]
 80006ca:	687b      	ldr	r3, [r7, #4]
 80006cc:	4413      	add	r3, r2
 80006ce:	4a05      	ldr	r2, [pc, #20]	@ (80006e4 <_sbrk+0x64>)
 80006d0:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80006d2:	68fb      	ldr	r3, [r7, #12]
}
 80006d4:	4618      	mov	r0, r3
 80006d6:	3718      	adds	r7, #24
 80006d8:	46bd      	mov	sp, r7
 80006da:	bd80      	pop	{r7, pc}
 80006dc:	20020000 	.word	0x20020000
 80006e0:	00000400 	.word	0x00000400
 80006e4:	20000090 	.word	0x20000090
 80006e8:	200001e0 	.word	0x200001e0

080006ec <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80006ec:	480d      	ldr	r0, [pc, #52]	@ (8000724 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80006ee:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80006f0:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80006f4:	480c      	ldr	r0, [pc, #48]	@ (8000728 <LoopForever+0x6>)
  ldr r1, =_edata
 80006f6:	490d      	ldr	r1, [pc, #52]	@ (800072c <LoopForever+0xa>)
  ldr r2, =_sidata
 80006f8:	4a0d      	ldr	r2, [pc, #52]	@ (8000730 <LoopForever+0xe>)
  movs r3, #0
 80006fa:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80006fc:	e002      	b.n	8000704 <LoopCopyDataInit>

080006fe <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80006fe:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000700:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000702:	3304      	adds	r3, #4

08000704 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000704:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000706:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000708:	d3f9      	bcc.n	80006fe <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800070a:	4a0a      	ldr	r2, [pc, #40]	@ (8000734 <LoopForever+0x12>)
  ldr r4, =_ebss
 800070c:	4c0a      	ldr	r4, [pc, #40]	@ (8000738 <LoopForever+0x16>)
  movs r3, #0
 800070e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000710:	e001      	b.n	8000716 <LoopFillZerobss>

08000712 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000712:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000714:	3204      	adds	r2, #4

08000716 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000716:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000718:	d3fb      	bcc.n	8000712 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800071a:	f000 f97d 	bl	8000a18 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800071e:	f7ff fdc7 	bl	80002b0 <main>

08000722 <LoopForever>:

LoopForever:
  b LoopForever
 8000722:	e7fe      	b.n	8000722 <LoopForever>
  ldr   r0, =_estack
 8000724:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000728:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800072c:	20000068 	.word	0x20000068
  ldr r2, =_sidata
 8000730:	08001614 	.word	0x08001614
  ldr r2, =_sbss
 8000734:	20000068 	.word	0x20000068
  ldr r4, =_ebss
 8000738:	200001e0 	.word	0x200001e0

0800073c <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800073c:	e7fe      	b.n	800073c <ADC_IRQHandler>
	...

08000740 <std>:
 8000740:	2300      	movs	r3, #0
 8000742:	b510      	push	{r4, lr}
 8000744:	4604      	mov	r4, r0
 8000746:	e9c0 3300 	strd	r3, r3, [r0]
 800074a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800074e:	6083      	str	r3, [r0, #8]
 8000750:	8181      	strh	r1, [r0, #12]
 8000752:	6643      	str	r3, [r0, #100]	@ 0x64
 8000754:	81c2      	strh	r2, [r0, #14]
 8000756:	6183      	str	r3, [r0, #24]
 8000758:	4619      	mov	r1, r3
 800075a:	2208      	movs	r2, #8
 800075c:	305c      	adds	r0, #92	@ 0x5c
 800075e:	f000 f906 	bl	800096e <memset>
 8000762:	4b0d      	ldr	r3, [pc, #52]	@ (8000798 <std+0x58>)
 8000764:	6263      	str	r3, [r4, #36]	@ 0x24
 8000766:	4b0d      	ldr	r3, [pc, #52]	@ (800079c <std+0x5c>)
 8000768:	62a3      	str	r3, [r4, #40]	@ 0x28
 800076a:	4b0d      	ldr	r3, [pc, #52]	@ (80007a0 <std+0x60>)
 800076c:	62e3      	str	r3, [r4, #44]	@ 0x2c
 800076e:	4b0d      	ldr	r3, [pc, #52]	@ (80007a4 <std+0x64>)
 8000770:	6323      	str	r3, [r4, #48]	@ 0x30
 8000772:	4b0d      	ldr	r3, [pc, #52]	@ (80007a8 <std+0x68>)
 8000774:	6224      	str	r4, [r4, #32]
 8000776:	429c      	cmp	r4, r3
 8000778:	d006      	beq.n	8000788 <std+0x48>
 800077a:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 800077e:	4294      	cmp	r4, r2
 8000780:	d002      	beq.n	8000788 <std+0x48>
 8000782:	33d0      	adds	r3, #208	@ 0xd0
 8000784:	429c      	cmp	r4, r3
 8000786:	d105      	bne.n	8000794 <std+0x54>
 8000788:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 800078c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000790:	f000 b966 	b.w	8000a60 <__retarget_lock_init_recursive>
 8000794:	bd10      	pop	{r4, pc}
 8000796:	bf00      	nop
 8000798:	080008e9 	.word	0x080008e9
 800079c:	0800090b 	.word	0x0800090b
 80007a0:	08000943 	.word	0x08000943
 80007a4:	08000967 	.word	0x08000967
 80007a8:	20000094 	.word	0x20000094

080007ac <stdio_exit_handler>:
 80007ac:	4a02      	ldr	r2, [pc, #8]	@ (80007b8 <stdio_exit_handler+0xc>)
 80007ae:	4903      	ldr	r1, [pc, #12]	@ (80007bc <stdio_exit_handler+0x10>)
 80007b0:	4803      	ldr	r0, [pc, #12]	@ (80007c0 <stdio_exit_handler+0x14>)
 80007b2:	f000 b869 	b.w	8000888 <_fwalk_sglue>
 80007b6:	bf00      	nop
 80007b8:	2000000c 	.word	0x2000000c
 80007bc:	080012f5 	.word	0x080012f5
 80007c0:	2000001c 	.word	0x2000001c

080007c4 <cleanup_stdio>:
 80007c4:	6841      	ldr	r1, [r0, #4]
 80007c6:	4b0c      	ldr	r3, [pc, #48]	@ (80007f8 <cleanup_stdio+0x34>)
 80007c8:	4299      	cmp	r1, r3
 80007ca:	b510      	push	{r4, lr}
 80007cc:	4604      	mov	r4, r0
 80007ce:	d001      	beq.n	80007d4 <cleanup_stdio+0x10>
 80007d0:	f000 fd90 	bl	80012f4 <_fflush_r>
 80007d4:	68a1      	ldr	r1, [r4, #8]
 80007d6:	4b09      	ldr	r3, [pc, #36]	@ (80007fc <cleanup_stdio+0x38>)
 80007d8:	4299      	cmp	r1, r3
 80007da:	d002      	beq.n	80007e2 <cleanup_stdio+0x1e>
 80007dc:	4620      	mov	r0, r4
 80007de:	f000 fd89 	bl	80012f4 <_fflush_r>
 80007e2:	68e1      	ldr	r1, [r4, #12]
 80007e4:	4b06      	ldr	r3, [pc, #24]	@ (8000800 <cleanup_stdio+0x3c>)
 80007e6:	4299      	cmp	r1, r3
 80007e8:	d004      	beq.n	80007f4 <cleanup_stdio+0x30>
 80007ea:	4620      	mov	r0, r4
 80007ec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80007f0:	f000 bd80 	b.w	80012f4 <_fflush_r>
 80007f4:	bd10      	pop	{r4, pc}
 80007f6:	bf00      	nop
 80007f8:	20000094 	.word	0x20000094
 80007fc:	200000fc 	.word	0x200000fc
 8000800:	20000164 	.word	0x20000164

08000804 <global_stdio_init.part.0>:
 8000804:	b510      	push	{r4, lr}
 8000806:	4b0b      	ldr	r3, [pc, #44]	@ (8000834 <global_stdio_init.part.0+0x30>)
 8000808:	4c0b      	ldr	r4, [pc, #44]	@ (8000838 <global_stdio_init.part.0+0x34>)
 800080a:	4a0c      	ldr	r2, [pc, #48]	@ (800083c <global_stdio_init.part.0+0x38>)
 800080c:	601a      	str	r2, [r3, #0]
 800080e:	4620      	mov	r0, r4
 8000810:	2200      	movs	r2, #0
 8000812:	2104      	movs	r1, #4
 8000814:	f7ff ff94 	bl	8000740 <std>
 8000818:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 800081c:	2201      	movs	r2, #1
 800081e:	2109      	movs	r1, #9
 8000820:	f7ff ff8e 	bl	8000740 <std>
 8000824:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8000828:	2202      	movs	r2, #2
 800082a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800082e:	2112      	movs	r1, #18
 8000830:	f7ff bf86 	b.w	8000740 <std>
 8000834:	200001cc 	.word	0x200001cc
 8000838:	20000094 	.word	0x20000094
 800083c:	080007ad 	.word	0x080007ad

08000840 <__sfp_lock_acquire>:
 8000840:	4801      	ldr	r0, [pc, #4]	@ (8000848 <__sfp_lock_acquire+0x8>)
 8000842:	f000 b90e 	b.w	8000a62 <__retarget_lock_acquire_recursive>
 8000846:	bf00      	nop
 8000848:	200001d5 	.word	0x200001d5

0800084c <__sfp_lock_release>:
 800084c:	4801      	ldr	r0, [pc, #4]	@ (8000854 <__sfp_lock_release+0x8>)
 800084e:	f000 b909 	b.w	8000a64 <__retarget_lock_release_recursive>
 8000852:	bf00      	nop
 8000854:	200001d5 	.word	0x200001d5

08000858 <__sinit>:
 8000858:	b510      	push	{r4, lr}
 800085a:	4604      	mov	r4, r0
 800085c:	f7ff fff0 	bl	8000840 <__sfp_lock_acquire>
 8000860:	6a23      	ldr	r3, [r4, #32]
 8000862:	b11b      	cbz	r3, 800086c <__sinit+0x14>
 8000864:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000868:	f7ff bff0 	b.w	800084c <__sfp_lock_release>
 800086c:	4b04      	ldr	r3, [pc, #16]	@ (8000880 <__sinit+0x28>)
 800086e:	6223      	str	r3, [r4, #32]
 8000870:	4b04      	ldr	r3, [pc, #16]	@ (8000884 <__sinit+0x2c>)
 8000872:	681b      	ldr	r3, [r3, #0]
 8000874:	2b00      	cmp	r3, #0
 8000876:	d1f5      	bne.n	8000864 <__sinit+0xc>
 8000878:	f7ff ffc4 	bl	8000804 <global_stdio_init.part.0>
 800087c:	e7f2      	b.n	8000864 <__sinit+0xc>
 800087e:	bf00      	nop
 8000880:	080007c5 	.word	0x080007c5
 8000884:	200001cc 	.word	0x200001cc

08000888 <_fwalk_sglue>:
 8000888:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800088c:	4607      	mov	r7, r0
 800088e:	4688      	mov	r8, r1
 8000890:	4614      	mov	r4, r2
 8000892:	2600      	movs	r6, #0
 8000894:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000898:	f1b9 0901 	subs.w	r9, r9, #1
 800089c:	d505      	bpl.n	80008aa <_fwalk_sglue+0x22>
 800089e:	6824      	ldr	r4, [r4, #0]
 80008a0:	2c00      	cmp	r4, #0
 80008a2:	d1f7      	bne.n	8000894 <_fwalk_sglue+0xc>
 80008a4:	4630      	mov	r0, r6
 80008a6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80008aa:	89ab      	ldrh	r3, [r5, #12]
 80008ac:	2b01      	cmp	r3, #1
 80008ae:	d907      	bls.n	80008c0 <_fwalk_sglue+0x38>
 80008b0:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80008b4:	3301      	adds	r3, #1
 80008b6:	d003      	beq.n	80008c0 <_fwalk_sglue+0x38>
 80008b8:	4629      	mov	r1, r5
 80008ba:	4638      	mov	r0, r7
 80008bc:	47c0      	blx	r8
 80008be:	4306      	orrs	r6, r0
 80008c0:	3568      	adds	r5, #104	@ 0x68
 80008c2:	e7e9      	b.n	8000898 <_fwalk_sglue+0x10>

080008c4 <iprintf>:
 80008c4:	b40f      	push	{r0, r1, r2, r3}
 80008c6:	b507      	push	{r0, r1, r2, lr}
 80008c8:	4906      	ldr	r1, [pc, #24]	@ (80008e4 <iprintf+0x20>)
 80008ca:	ab04      	add	r3, sp, #16
 80008cc:	6808      	ldr	r0, [r1, #0]
 80008ce:	f853 2b04 	ldr.w	r2, [r3], #4
 80008d2:	6881      	ldr	r1, [r0, #8]
 80008d4:	9301      	str	r3, [sp, #4]
 80008d6:	f000 f9e7 	bl	8000ca8 <_vfiprintf_r>
 80008da:	b003      	add	sp, #12
 80008dc:	f85d eb04 	ldr.w	lr, [sp], #4
 80008e0:	b004      	add	sp, #16
 80008e2:	4770      	bx	lr
 80008e4:	20000018 	.word	0x20000018

080008e8 <__sread>:
 80008e8:	b510      	push	{r4, lr}
 80008ea:	460c      	mov	r4, r1
 80008ec:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80008f0:	f000 f868 	bl	80009c4 <_read_r>
 80008f4:	2800      	cmp	r0, #0
 80008f6:	bfab      	itete	ge
 80008f8:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 80008fa:	89a3      	ldrhlt	r3, [r4, #12]
 80008fc:	181b      	addge	r3, r3, r0
 80008fe:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8000902:	bfac      	ite	ge
 8000904:	6563      	strge	r3, [r4, #84]	@ 0x54
 8000906:	81a3      	strhlt	r3, [r4, #12]
 8000908:	bd10      	pop	{r4, pc}

0800090a <__swrite>:
 800090a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800090e:	461f      	mov	r7, r3
 8000910:	898b      	ldrh	r3, [r1, #12]
 8000912:	05db      	lsls	r3, r3, #23
 8000914:	4605      	mov	r5, r0
 8000916:	460c      	mov	r4, r1
 8000918:	4616      	mov	r6, r2
 800091a:	d505      	bpl.n	8000928 <__swrite+0x1e>
 800091c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000920:	2302      	movs	r3, #2
 8000922:	2200      	movs	r2, #0
 8000924:	f000 f83c 	bl	80009a0 <_lseek_r>
 8000928:	89a3      	ldrh	r3, [r4, #12]
 800092a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800092e:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8000932:	81a3      	strh	r3, [r4, #12]
 8000934:	4632      	mov	r2, r6
 8000936:	463b      	mov	r3, r7
 8000938:	4628      	mov	r0, r5
 800093a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800093e:	f000 b853 	b.w	80009e8 <_write_r>

08000942 <__sseek>:
 8000942:	b510      	push	{r4, lr}
 8000944:	460c      	mov	r4, r1
 8000946:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800094a:	f000 f829 	bl	80009a0 <_lseek_r>
 800094e:	1c43      	adds	r3, r0, #1
 8000950:	89a3      	ldrh	r3, [r4, #12]
 8000952:	bf15      	itete	ne
 8000954:	6560      	strne	r0, [r4, #84]	@ 0x54
 8000956:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 800095a:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 800095e:	81a3      	strheq	r3, [r4, #12]
 8000960:	bf18      	it	ne
 8000962:	81a3      	strhne	r3, [r4, #12]
 8000964:	bd10      	pop	{r4, pc}

08000966 <__sclose>:
 8000966:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800096a:	f000 b809 	b.w	8000980 <_close_r>

0800096e <memset>:
 800096e:	4402      	add	r2, r0
 8000970:	4603      	mov	r3, r0
 8000972:	4293      	cmp	r3, r2
 8000974:	d100      	bne.n	8000978 <memset+0xa>
 8000976:	4770      	bx	lr
 8000978:	f803 1b01 	strb.w	r1, [r3], #1
 800097c:	e7f9      	b.n	8000972 <memset+0x4>
	...

08000980 <_close_r>:
 8000980:	b538      	push	{r3, r4, r5, lr}
 8000982:	4d06      	ldr	r5, [pc, #24]	@ (800099c <_close_r+0x1c>)
 8000984:	2300      	movs	r3, #0
 8000986:	4604      	mov	r4, r0
 8000988:	4608      	mov	r0, r1
 800098a:	602b      	str	r3, [r5, #0]
 800098c:	f7ff fe47 	bl	800061e <_close>
 8000990:	1c43      	adds	r3, r0, #1
 8000992:	d102      	bne.n	800099a <_close_r+0x1a>
 8000994:	682b      	ldr	r3, [r5, #0]
 8000996:	b103      	cbz	r3, 800099a <_close_r+0x1a>
 8000998:	6023      	str	r3, [r4, #0]
 800099a:	bd38      	pop	{r3, r4, r5, pc}
 800099c:	200001d0 	.word	0x200001d0

080009a0 <_lseek_r>:
 80009a0:	b538      	push	{r3, r4, r5, lr}
 80009a2:	4d07      	ldr	r5, [pc, #28]	@ (80009c0 <_lseek_r+0x20>)
 80009a4:	4604      	mov	r4, r0
 80009a6:	4608      	mov	r0, r1
 80009a8:	4611      	mov	r1, r2
 80009aa:	2200      	movs	r2, #0
 80009ac:	602a      	str	r2, [r5, #0]
 80009ae:	461a      	mov	r2, r3
 80009b0:	f7ff fe59 	bl	8000666 <_lseek>
 80009b4:	1c43      	adds	r3, r0, #1
 80009b6:	d102      	bne.n	80009be <_lseek_r+0x1e>
 80009b8:	682b      	ldr	r3, [r5, #0]
 80009ba:	b103      	cbz	r3, 80009be <_lseek_r+0x1e>
 80009bc:	6023      	str	r3, [r4, #0]
 80009be:	bd38      	pop	{r3, r4, r5, pc}
 80009c0:	200001d0 	.word	0x200001d0

080009c4 <_read_r>:
 80009c4:	b538      	push	{r3, r4, r5, lr}
 80009c6:	4d07      	ldr	r5, [pc, #28]	@ (80009e4 <_read_r+0x20>)
 80009c8:	4604      	mov	r4, r0
 80009ca:	4608      	mov	r0, r1
 80009cc:	4611      	mov	r1, r2
 80009ce:	2200      	movs	r2, #0
 80009d0:	602a      	str	r2, [r5, #0]
 80009d2:	461a      	mov	r2, r3
 80009d4:	f7ff fdea 	bl	80005ac <_read>
 80009d8:	1c43      	adds	r3, r0, #1
 80009da:	d102      	bne.n	80009e2 <_read_r+0x1e>
 80009dc:	682b      	ldr	r3, [r5, #0]
 80009de:	b103      	cbz	r3, 80009e2 <_read_r+0x1e>
 80009e0:	6023      	str	r3, [r4, #0]
 80009e2:	bd38      	pop	{r3, r4, r5, pc}
 80009e4:	200001d0 	.word	0x200001d0

080009e8 <_write_r>:
 80009e8:	b538      	push	{r3, r4, r5, lr}
 80009ea:	4d07      	ldr	r5, [pc, #28]	@ (8000a08 <_write_r+0x20>)
 80009ec:	4604      	mov	r4, r0
 80009ee:	4608      	mov	r0, r1
 80009f0:	4611      	mov	r1, r2
 80009f2:	2200      	movs	r2, #0
 80009f4:	602a      	str	r2, [r5, #0]
 80009f6:	461a      	mov	r2, r3
 80009f8:	f7ff fdf5 	bl	80005e6 <_write>
 80009fc:	1c43      	adds	r3, r0, #1
 80009fe:	d102      	bne.n	8000a06 <_write_r+0x1e>
 8000a00:	682b      	ldr	r3, [r5, #0]
 8000a02:	b103      	cbz	r3, 8000a06 <_write_r+0x1e>
 8000a04:	6023      	str	r3, [r4, #0]
 8000a06:	bd38      	pop	{r3, r4, r5, pc}
 8000a08:	200001d0 	.word	0x200001d0

08000a0c <__errno>:
 8000a0c:	4b01      	ldr	r3, [pc, #4]	@ (8000a14 <__errno+0x8>)
 8000a0e:	6818      	ldr	r0, [r3, #0]
 8000a10:	4770      	bx	lr
 8000a12:	bf00      	nop
 8000a14:	20000018 	.word	0x20000018

08000a18 <__libc_init_array>:
 8000a18:	b570      	push	{r4, r5, r6, lr}
 8000a1a:	4d0d      	ldr	r5, [pc, #52]	@ (8000a50 <__libc_init_array+0x38>)
 8000a1c:	4c0d      	ldr	r4, [pc, #52]	@ (8000a54 <__libc_init_array+0x3c>)
 8000a1e:	1b64      	subs	r4, r4, r5
 8000a20:	10a4      	asrs	r4, r4, #2
 8000a22:	2600      	movs	r6, #0
 8000a24:	42a6      	cmp	r6, r4
 8000a26:	d109      	bne.n	8000a3c <__libc_init_array+0x24>
 8000a28:	4d0b      	ldr	r5, [pc, #44]	@ (8000a58 <__libc_init_array+0x40>)
 8000a2a:	4c0c      	ldr	r4, [pc, #48]	@ (8000a5c <__libc_init_array+0x44>)
 8000a2c:	f000 fdb2 	bl	8001594 <_init>
 8000a30:	1b64      	subs	r4, r4, r5
 8000a32:	10a4      	asrs	r4, r4, #2
 8000a34:	2600      	movs	r6, #0
 8000a36:	42a6      	cmp	r6, r4
 8000a38:	d105      	bne.n	8000a46 <__libc_init_array+0x2e>
 8000a3a:	bd70      	pop	{r4, r5, r6, pc}
 8000a3c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000a40:	4798      	blx	r3
 8000a42:	3601      	adds	r6, #1
 8000a44:	e7ee      	b.n	8000a24 <__libc_init_array+0xc>
 8000a46:	f855 3b04 	ldr.w	r3, [r5], #4
 8000a4a:	4798      	blx	r3
 8000a4c:	3601      	adds	r6, #1
 8000a4e:	e7f2      	b.n	8000a36 <__libc_init_array+0x1e>
 8000a50:	0800160c 	.word	0x0800160c
 8000a54:	0800160c 	.word	0x0800160c
 8000a58:	0800160c 	.word	0x0800160c
 8000a5c:	08001610 	.word	0x08001610

08000a60 <__retarget_lock_init_recursive>:
 8000a60:	4770      	bx	lr

08000a62 <__retarget_lock_acquire_recursive>:
 8000a62:	4770      	bx	lr

08000a64 <__retarget_lock_release_recursive>:
 8000a64:	4770      	bx	lr
	...

08000a68 <_free_r>:
 8000a68:	b538      	push	{r3, r4, r5, lr}
 8000a6a:	4605      	mov	r5, r0
 8000a6c:	2900      	cmp	r1, #0
 8000a6e:	d041      	beq.n	8000af4 <_free_r+0x8c>
 8000a70:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000a74:	1f0c      	subs	r4, r1, #4
 8000a76:	2b00      	cmp	r3, #0
 8000a78:	bfb8      	it	lt
 8000a7a:	18e4      	addlt	r4, r4, r3
 8000a7c:	f000 f8e0 	bl	8000c40 <__malloc_lock>
 8000a80:	4a1d      	ldr	r2, [pc, #116]	@ (8000af8 <_free_r+0x90>)
 8000a82:	6813      	ldr	r3, [r2, #0]
 8000a84:	b933      	cbnz	r3, 8000a94 <_free_r+0x2c>
 8000a86:	6063      	str	r3, [r4, #4]
 8000a88:	6014      	str	r4, [r2, #0]
 8000a8a:	4628      	mov	r0, r5
 8000a8c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000a90:	f000 b8dc 	b.w	8000c4c <__malloc_unlock>
 8000a94:	42a3      	cmp	r3, r4
 8000a96:	d908      	bls.n	8000aaa <_free_r+0x42>
 8000a98:	6820      	ldr	r0, [r4, #0]
 8000a9a:	1821      	adds	r1, r4, r0
 8000a9c:	428b      	cmp	r3, r1
 8000a9e:	bf01      	itttt	eq
 8000aa0:	6819      	ldreq	r1, [r3, #0]
 8000aa2:	685b      	ldreq	r3, [r3, #4]
 8000aa4:	1809      	addeq	r1, r1, r0
 8000aa6:	6021      	streq	r1, [r4, #0]
 8000aa8:	e7ed      	b.n	8000a86 <_free_r+0x1e>
 8000aaa:	461a      	mov	r2, r3
 8000aac:	685b      	ldr	r3, [r3, #4]
 8000aae:	b10b      	cbz	r3, 8000ab4 <_free_r+0x4c>
 8000ab0:	42a3      	cmp	r3, r4
 8000ab2:	d9fa      	bls.n	8000aaa <_free_r+0x42>
 8000ab4:	6811      	ldr	r1, [r2, #0]
 8000ab6:	1850      	adds	r0, r2, r1
 8000ab8:	42a0      	cmp	r0, r4
 8000aba:	d10b      	bne.n	8000ad4 <_free_r+0x6c>
 8000abc:	6820      	ldr	r0, [r4, #0]
 8000abe:	4401      	add	r1, r0
 8000ac0:	1850      	adds	r0, r2, r1
 8000ac2:	4283      	cmp	r3, r0
 8000ac4:	6011      	str	r1, [r2, #0]
 8000ac6:	d1e0      	bne.n	8000a8a <_free_r+0x22>
 8000ac8:	6818      	ldr	r0, [r3, #0]
 8000aca:	685b      	ldr	r3, [r3, #4]
 8000acc:	6053      	str	r3, [r2, #4]
 8000ace:	4408      	add	r0, r1
 8000ad0:	6010      	str	r0, [r2, #0]
 8000ad2:	e7da      	b.n	8000a8a <_free_r+0x22>
 8000ad4:	d902      	bls.n	8000adc <_free_r+0x74>
 8000ad6:	230c      	movs	r3, #12
 8000ad8:	602b      	str	r3, [r5, #0]
 8000ada:	e7d6      	b.n	8000a8a <_free_r+0x22>
 8000adc:	6820      	ldr	r0, [r4, #0]
 8000ade:	1821      	adds	r1, r4, r0
 8000ae0:	428b      	cmp	r3, r1
 8000ae2:	bf04      	itt	eq
 8000ae4:	6819      	ldreq	r1, [r3, #0]
 8000ae6:	685b      	ldreq	r3, [r3, #4]
 8000ae8:	6063      	str	r3, [r4, #4]
 8000aea:	bf04      	itt	eq
 8000aec:	1809      	addeq	r1, r1, r0
 8000aee:	6021      	streq	r1, [r4, #0]
 8000af0:	6054      	str	r4, [r2, #4]
 8000af2:	e7ca      	b.n	8000a8a <_free_r+0x22>
 8000af4:	bd38      	pop	{r3, r4, r5, pc}
 8000af6:	bf00      	nop
 8000af8:	200001dc 	.word	0x200001dc

08000afc <sbrk_aligned>:
 8000afc:	b570      	push	{r4, r5, r6, lr}
 8000afe:	4e0f      	ldr	r6, [pc, #60]	@ (8000b3c <sbrk_aligned+0x40>)
 8000b00:	460c      	mov	r4, r1
 8000b02:	6831      	ldr	r1, [r6, #0]
 8000b04:	4605      	mov	r5, r0
 8000b06:	b911      	cbnz	r1, 8000b0e <sbrk_aligned+0x12>
 8000b08:	f000 fcb0 	bl	800146c <_sbrk_r>
 8000b0c:	6030      	str	r0, [r6, #0]
 8000b0e:	4621      	mov	r1, r4
 8000b10:	4628      	mov	r0, r5
 8000b12:	f000 fcab 	bl	800146c <_sbrk_r>
 8000b16:	1c43      	adds	r3, r0, #1
 8000b18:	d103      	bne.n	8000b22 <sbrk_aligned+0x26>
 8000b1a:	f04f 34ff 	mov.w	r4, #4294967295
 8000b1e:	4620      	mov	r0, r4
 8000b20:	bd70      	pop	{r4, r5, r6, pc}
 8000b22:	1cc4      	adds	r4, r0, #3
 8000b24:	f024 0403 	bic.w	r4, r4, #3
 8000b28:	42a0      	cmp	r0, r4
 8000b2a:	d0f8      	beq.n	8000b1e <sbrk_aligned+0x22>
 8000b2c:	1a21      	subs	r1, r4, r0
 8000b2e:	4628      	mov	r0, r5
 8000b30:	f000 fc9c 	bl	800146c <_sbrk_r>
 8000b34:	3001      	adds	r0, #1
 8000b36:	d1f2      	bne.n	8000b1e <sbrk_aligned+0x22>
 8000b38:	e7ef      	b.n	8000b1a <sbrk_aligned+0x1e>
 8000b3a:	bf00      	nop
 8000b3c:	200001d8 	.word	0x200001d8

08000b40 <_malloc_r>:
 8000b40:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000b44:	1ccd      	adds	r5, r1, #3
 8000b46:	f025 0503 	bic.w	r5, r5, #3
 8000b4a:	3508      	adds	r5, #8
 8000b4c:	2d0c      	cmp	r5, #12
 8000b4e:	bf38      	it	cc
 8000b50:	250c      	movcc	r5, #12
 8000b52:	2d00      	cmp	r5, #0
 8000b54:	4606      	mov	r6, r0
 8000b56:	db01      	blt.n	8000b5c <_malloc_r+0x1c>
 8000b58:	42a9      	cmp	r1, r5
 8000b5a:	d904      	bls.n	8000b66 <_malloc_r+0x26>
 8000b5c:	230c      	movs	r3, #12
 8000b5e:	6033      	str	r3, [r6, #0]
 8000b60:	2000      	movs	r0, #0
 8000b62:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000b66:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8000c3c <_malloc_r+0xfc>
 8000b6a:	f000 f869 	bl	8000c40 <__malloc_lock>
 8000b6e:	f8d8 3000 	ldr.w	r3, [r8]
 8000b72:	461c      	mov	r4, r3
 8000b74:	bb44      	cbnz	r4, 8000bc8 <_malloc_r+0x88>
 8000b76:	4629      	mov	r1, r5
 8000b78:	4630      	mov	r0, r6
 8000b7a:	f7ff ffbf 	bl	8000afc <sbrk_aligned>
 8000b7e:	1c43      	adds	r3, r0, #1
 8000b80:	4604      	mov	r4, r0
 8000b82:	d158      	bne.n	8000c36 <_malloc_r+0xf6>
 8000b84:	f8d8 4000 	ldr.w	r4, [r8]
 8000b88:	4627      	mov	r7, r4
 8000b8a:	2f00      	cmp	r7, #0
 8000b8c:	d143      	bne.n	8000c16 <_malloc_r+0xd6>
 8000b8e:	2c00      	cmp	r4, #0
 8000b90:	d04b      	beq.n	8000c2a <_malloc_r+0xea>
 8000b92:	6823      	ldr	r3, [r4, #0]
 8000b94:	4639      	mov	r1, r7
 8000b96:	4630      	mov	r0, r6
 8000b98:	eb04 0903 	add.w	r9, r4, r3
 8000b9c:	f000 fc66 	bl	800146c <_sbrk_r>
 8000ba0:	4581      	cmp	r9, r0
 8000ba2:	d142      	bne.n	8000c2a <_malloc_r+0xea>
 8000ba4:	6821      	ldr	r1, [r4, #0]
 8000ba6:	1a6d      	subs	r5, r5, r1
 8000ba8:	4629      	mov	r1, r5
 8000baa:	4630      	mov	r0, r6
 8000bac:	f7ff ffa6 	bl	8000afc <sbrk_aligned>
 8000bb0:	3001      	adds	r0, #1
 8000bb2:	d03a      	beq.n	8000c2a <_malloc_r+0xea>
 8000bb4:	6823      	ldr	r3, [r4, #0]
 8000bb6:	442b      	add	r3, r5
 8000bb8:	6023      	str	r3, [r4, #0]
 8000bba:	f8d8 3000 	ldr.w	r3, [r8]
 8000bbe:	685a      	ldr	r2, [r3, #4]
 8000bc0:	bb62      	cbnz	r2, 8000c1c <_malloc_r+0xdc>
 8000bc2:	f8c8 7000 	str.w	r7, [r8]
 8000bc6:	e00f      	b.n	8000be8 <_malloc_r+0xa8>
 8000bc8:	6822      	ldr	r2, [r4, #0]
 8000bca:	1b52      	subs	r2, r2, r5
 8000bcc:	d420      	bmi.n	8000c10 <_malloc_r+0xd0>
 8000bce:	2a0b      	cmp	r2, #11
 8000bd0:	d917      	bls.n	8000c02 <_malloc_r+0xc2>
 8000bd2:	1961      	adds	r1, r4, r5
 8000bd4:	42a3      	cmp	r3, r4
 8000bd6:	6025      	str	r5, [r4, #0]
 8000bd8:	bf18      	it	ne
 8000bda:	6059      	strne	r1, [r3, #4]
 8000bdc:	6863      	ldr	r3, [r4, #4]
 8000bde:	bf08      	it	eq
 8000be0:	f8c8 1000 	streq.w	r1, [r8]
 8000be4:	5162      	str	r2, [r4, r5]
 8000be6:	604b      	str	r3, [r1, #4]
 8000be8:	4630      	mov	r0, r6
 8000bea:	f000 f82f 	bl	8000c4c <__malloc_unlock>
 8000bee:	f104 000b 	add.w	r0, r4, #11
 8000bf2:	1d23      	adds	r3, r4, #4
 8000bf4:	f020 0007 	bic.w	r0, r0, #7
 8000bf8:	1ac2      	subs	r2, r0, r3
 8000bfa:	bf1c      	itt	ne
 8000bfc:	1a1b      	subne	r3, r3, r0
 8000bfe:	50a3      	strne	r3, [r4, r2]
 8000c00:	e7af      	b.n	8000b62 <_malloc_r+0x22>
 8000c02:	6862      	ldr	r2, [r4, #4]
 8000c04:	42a3      	cmp	r3, r4
 8000c06:	bf0c      	ite	eq
 8000c08:	f8c8 2000 	streq.w	r2, [r8]
 8000c0c:	605a      	strne	r2, [r3, #4]
 8000c0e:	e7eb      	b.n	8000be8 <_malloc_r+0xa8>
 8000c10:	4623      	mov	r3, r4
 8000c12:	6864      	ldr	r4, [r4, #4]
 8000c14:	e7ae      	b.n	8000b74 <_malloc_r+0x34>
 8000c16:	463c      	mov	r4, r7
 8000c18:	687f      	ldr	r7, [r7, #4]
 8000c1a:	e7b6      	b.n	8000b8a <_malloc_r+0x4a>
 8000c1c:	461a      	mov	r2, r3
 8000c1e:	685b      	ldr	r3, [r3, #4]
 8000c20:	42a3      	cmp	r3, r4
 8000c22:	d1fb      	bne.n	8000c1c <_malloc_r+0xdc>
 8000c24:	2300      	movs	r3, #0
 8000c26:	6053      	str	r3, [r2, #4]
 8000c28:	e7de      	b.n	8000be8 <_malloc_r+0xa8>
 8000c2a:	230c      	movs	r3, #12
 8000c2c:	6033      	str	r3, [r6, #0]
 8000c2e:	4630      	mov	r0, r6
 8000c30:	f000 f80c 	bl	8000c4c <__malloc_unlock>
 8000c34:	e794      	b.n	8000b60 <_malloc_r+0x20>
 8000c36:	6005      	str	r5, [r0, #0]
 8000c38:	e7d6      	b.n	8000be8 <_malloc_r+0xa8>
 8000c3a:	bf00      	nop
 8000c3c:	200001dc 	.word	0x200001dc

08000c40 <__malloc_lock>:
 8000c40:	4801      	ldr	r0, [pc, #4]	@ (8000c48 <__malloc_lock+0x8>)
 8000c42:	f7ff bf0e 	b.w	8000a62 <__retarget_lock_acquire_recursive>
 8000c46:	bf00      	nop
 8000c48:	200001d4 	.word	0x200001d4

08000c4c <__malloc_unlock>:
 8000c4c:	4801      	ldr	r0, [pc, #4]	@ (8000c54 <__malloc_unlock+0x8>)
 8000c4e:	f7ff bf09 	b.w	8000a64 <__retarget_lock_release_recursive>
 8000c52:	bf00      	nop
 8000c54:	200001d4 	.word	0x200001d4

08000c58 <__sfputc_r>:
 8000c58:	6893      	ldr	r3, [r2, #8]
 8000c5a:	3b01      	subs	r3, #1
 8000c5c:	2b00      	cmp	r3, #0
 8000c5e:	b410      	push	{r4}
 8000c60:	6093      	str	r3, [r2, #8]
 8000c62:	da07      	bge.n	8000c74 <__sfputc_r+0x1c>
 8000c64:	6994      	ldr	r4, [r2, #24]
 8000c66:	42a3      	cmp	r3, r4
 8000c68:	db01      	blt.n	8000c6e <__sfputc_r+0x16>
 8000c6a:	290a      	cmp	r1, #10
 8000c6c:	d102      	bne.n	8000c74 <__sfputc_r+0x1c>
 8000c6e:	bc10      	pop	{r4}
 8000c70:	f000 bb68 	b.w	8001344 <__swbuf_r>
 8000c74:	6813      	ldr	r3, [r2, #0]
 8000c76:	1c58      	adds	r0, r3, #1
 8000c78:	6010      	str	r0, [r2, #0]
 8000c7a:	7019      	strb	r1, [r3, #0]
 8000c7c:	4608      	mov	r0, r1
 8000c7e:	bc10      	pop	{r4}
 8000c80:	4770      	bx	lr

08000c82 <__sfputs_r>:
 8000c82:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000c84:	4606      	mov	r6, r0
 8000c86:	460f      	mov	r7, r1
 8000c88:	4614      	mov	r4, r2
 8000c8a:	18d5      	adds	r5, r2, r3
 8000c8c:	42ac      	cmp	r4, r5
 8000c8e:	d101      	bne.n	8000c94 <__sfputs_r+0x12>
 8000c90:	2000      	movs	r0, #0
 8000c92:	e007      	b.n	8000ca4 <__sfputs_r+0x22>
 8000c94:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000c98:	463a      	mov	r2, r7
 8000c9a:	4630      	mov	r0, r6
 8000c9c:	f7ff ffdc 	bl	8000c58 <__sfputc_r>
 8000ca0:	1c43      	adds	r3, r0, #1
 8000ca2:	d1f3      	bne.n	8000c8c <__sfputs_r+0xa>
 8000ca4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000ca8 <_vfiprintf_r>:
 8000ca8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000cac:	460d      	mov	r5, r1
 8000cae:	b09d      	sub	sp, #116	@ 0x74
 8000cb0:	4614      	mov	r4, r2
 8000cb2:	4698      	mov	r8, r3
 8000cb4:	4606      	mov	r6, r0
 8000cb6:	b118      	cbz	r0, 8000cc0 <_vfiprintf_r+0x18>
 8000cb8:	6a03      	ldr	r3, [r0, #32]
 8000cba:	b90b      	cbnz	r3, 8000cc0 <_vfiprintf_r+0x18>
 8000cbc:	f7ff fdcc 	bl	8000858 <__sinit>
 8000cc0:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000cc2:	07d9      	lsls	r1, r3, #31
 8000cc4:	d405      	bmi.n	8000cd2 <_vfiprintf_r+0x2a>
 8000cc6:	89ab      	ldrh	r3, [r5, #12]
 8000cc8:	059a      	lsls	r2, r3, #22
 8000cca:	d402      	bmi.n	8000cd2 <_vfiprintf_r+0x2a>
 8000ccc:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000cce:	f7ff fec8 	bl	8000a62 <__retarget_lock_acquire_recursive>
 8000cd2:	89ab      	ldrh	r3, [r5, #12]
 8000cd4:	071b      	lsls	r3, r3, #28
 8000cd6:	d501      	bpl.n	8000cdc <_vfiprintf_r+0x34>
 8000cd8:	692b      	ldr	r3, [r5, #16]
 8000cda:	b99b      	cbnz	r3, 8000d04 <_vfiprintf_r+0x5c>
 8000cdc:	4629      	mov	r1, r5
 8000cde:	4630      	mov	r0, r6
 8000ce0:	f000 fb6e 	bl	80013c0 <__swsetup_r>
 8000ce4:	b170      	cbz	r0, 8000d04 <_vfiprintf_r+0x5c>
 8000ce6:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000ce8:	07dc      	lsls	r4, r3, #31
 8000cea:	d504      	bpl.n	8000cf6 <_vfiprintf_r+0x4e>
 8000cec:	f04f 30ff 	mov.w	r0, #4294967295
 8000cf0:	b01d      	add	sp, #116	@ 0x74
 8000cf2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000cf6:	89ab      	ldrh	r3, [r5, #12]
 8000cf8:	0598      	lsls	r0, r3, #22
 8000cfa:	d4f7      	bmi.n	8000cec <_vfiprintf_r+0x44>
 8000cfc:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000cfe:	f7ff feb1 	bl	8000a64 <__retarget_lock_release_recursive>
 8000d02:	e7f3      	b.n	8000cec <_vfiprintf_r+0x44>
 8000d04:	2300      	movs	r3, #0
 8000d06:	9309      	str	r3, [sp, #36]	@ 0x24
 8000d08:	2320      	movs	r3, #32
 8000d0a:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8000d0e:	f8cd 800c 	str.w	r8, [sp, #12]
 8000d12:	2330      	movs	r3, #48	@ 0x30
 8000d14:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 8000ec4 <_vfiprintf_r+0x21c>
 8000d18:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8000d1c:	f04f 0901 	mov.w	r9, #1
 8000d20:	4623      	mov	r3, r4
 8000d22:	469a      	mov	sl, r3
 8000d24:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000d28:	b10a      	cbz	r2, 8000d2e <_vfiprintf_r+0x86>
 8000d2a:	2a25      	cmp	r2, #37	@ 0x25
 8000d2c:	d1f9      	bne.n	8000d22 <_vfiprintf_r+0x7a>
 8000d2e:	ebba 0b04 	subs.w	fp, sl, r4
 8000d32:	d00b      	beq.n	8000d4c <_vfiprintf_r+0xa4>
 8000d34:	465b      	mov	r3, fp
 8000d36:	4622      	mov	r2, r4
 8000d38:	4629      	mov	r1, r5
 8000d3a:	4630      	mov	r0, r6
 8000d3c:	f7ff ffa1 	bl	8000c82 <__sfputs_r>
 8000d40:	3001      	adds	r0, #1
 8000d42:	f000 80a7 	beq.w	8000e94 <_vfiprintf_r+0x1ec>
 8000d46:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8000d48:	445a      	add	r2, fp
 8000d4a:	9209      	str	r2, [sp, #36]	@ 0x24
 8000d4c:	f89a 3000 	ldrb.w	r3, [sl]
 8000d50:	2b00      	cmp	r3, #0
 8000d52:	f000 809f 	beq.w	8000e94 <_vfiprintf_r+0x1ec>
 8000d56:	2300      	movs	r3, #0
 8000d58:	f04f 32ff 	mov.w	r2, #4294967295
 8000d5c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000d60:	f10a 0a01 	add.w	sl, sl, #1
 8000d64:	9304      	str	r3, [sp, #16]
 8000d66:	9307      	str	r3, [sp, #28]
 8000d68:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8000d6c:	931a      	str	r3, [sp, #104]	@ 0x68
 8000d6e:	4654      	mov	r4, sl
 8000d70:	2205      	movs	r2, #5
 8000d72:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000d76:	4853      	ldr	r0, [pc, #332]	@ (8000ec4 <_vfiprintf_r+0x21c>)
 8000d78:	f7ff fa4a 	bl	8000210 <memchr>
 8000d7c:	9a04      	ldr	r2, [sp, #16]
 8000d7e:	b9d8      	cbnz	r0, 8000db8 <_vfiprintf_r+0x110>
 8000d80:	06d1      	lsls	r1, r2, #27
 8000d82:	bf44      	itt	mi
 8000d84:	2320      	movmi	r3, #32
 8000d86:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000d8a:	0713      	lsls	r3, r2, #28
 8000d8c:	bf44      	itt	mi
 8000d8e:	232b      	movmi	r3, #43	@ 0x2b
 8000d90:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000d94:	f89a 3000 	ldrb.w	r3, [sl]
 8000d98:	2b2a      	cmp	r3, #42	@ 0x2a
 8000d9a:	d015      	beq.n	8000dc8 <_vfiprintf_r+0x120>
 8000d9c:	9a07      	ldr	r2, [sp, #28]
 8000d9e:	4654      	mov	r4, sl
 8000da0:	2000      	movs	r0, #0
 8000da2:	f04f 0c0a 	mov.w	ip, #10
 8000da6:	4621      	mov	r1, r4
 8000da8:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000dac:	3b30      	subs	r3, #48	@ 0x30
 8000dae:	2b09      	cmp	r3, #9
 8000db0:	d94b      	bls.n	8000e4a <_vfiprintf_r+0x1a2>
 8000db2:	b1b0      	cbz	r0, 8000de2 <_vfiprintf_r+0x13a>
 8000db4:	9207      	str	r2, [sp, #28]
 8000db6:	e014      	b.n	8000de2 <_vfiprintf_r+0x13a>
 8000db8:	eba0 0308 	sub.w	r3, r0, r8
 8000dbc:	fa09 f303 	lsl.w	r3, r9, r3
 8000dc0:	4313      	orrs	r3, r2
 8000dc2:	9304      	str	r3, [sp, #16]
 8000dc4:	46a2      	mov	sl, r4
 8000dc6:	e7d2      	b.n	8000d6e <_vfiprintf_r+0xc6>
 8000dc8:	9b03      	ldr	r3, [sp, #12]
 8000dca:	1d19      	adds	r1, r3, #4
 8000dcc:	681b      	ldr	r3, [r3, #0]
 8000dce:	9103      	str	r1, [sp, #12]
 8000dd0:	2b00      	cmp	r3, #0
 8000dd2:	bfbb      	ittet	lt
 8000dd4:	425b      	neglt	r3, r3
 8000dd6:	f042 0202 	orrlt.w	r2, r2, #2
 8000dda:	9307      	strge	r3, [sp, #28]
 8000ddc:	9307      	strlt	r3, [sp, #28]
 8000dde:	bfb8      	it	lt
 8000de0:	9204      	strlt	r2, [sp, #16]
 8000de2:	7823      	ldrb	r3, [r4, #0]
 8000de4:	2b2e      	cmp	r3, #46	@ 0x2e
 8000de6:	d10a      	bne.n	8000dfe <_vfiprintf_r+0x156>
 8000de8:	7863      	ldrb	r3, [r4, #1]
 8000dea:	2b2a      	cmp	r3, #42	@ 0x2a
 8000dec:	d132      	bne.n	8000e54 <_vfiprintf_r+0x1ac>
 8000dee:	9b03      	ldr	r3, [sp, #12]
 8000df0:	1d1a      	adds	r2, r3, #4
 8000df2:	681b      	ldr	r3, [r3, #0]
 8000df4:	9203      	str	r2, [sp, #12]
 8000df6:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8000dfa:	3402      	adds	r4, #2
 8000dfc:	9305      	str	r3, [sp, #20]
 8000dfe:	f8df a0c8 	ldr.w	sl, [pc, #200]	@ 8000ec8 <_vfiprintf_r+0x220>
 8000e02:	7821      	ldrb	r1, [r4, #0]
 8000e04:	2203      	movs	r2, #3
 8000e06:	4650      	mov	r0, sl
 8000e08:	f7ff fa02 	bl	8000210 <memchr>
 8000e0c:	b138      	cbz	r0, 8000e1e <_vfiprintf_r+0x176>
 8000e0e:	9b04      	ldr	r3, [sp, #16]
 8000e10:	eba0 000a 	sub.w	r0, r0, sl
 8000e14:	2240      	movs	r2, #64	@ 0x40
 8000e16:	4082      	lsls	r2, r0
 8000e18:	4313      	orrs	r3, r2
 8000e1a:	3401      	adds	r4, #1
 8000e1c:	9304      	str	r3, [sp, #16]
 8000e1e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000e22:	482a      	ldr	r0, [pc, #168]	@ (8000ecc <_vfiprintf_r+0x224>)
 8000e24:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8000e28:	2206      	movs	r2, #6
 8000e2a:	f7ff f9f1 	bl	8000210 <memchr>
 8000e2e:	2800      	cmp	r0, #0
 8000e30:	d03f      	beq.n	8000eb2 <_vfiprintf_r+0x20a>
 8000e32:	4b27      	ldr	r3, [pc, #156]	@ (8000ed0 <_vfiprintf_r+0x228>)
 8000e34:	bb1b      	cbnz	r3, 8000e7e <_vfiprintf_r+0x1d6>
 8000e36:	9b03      	ldr	r3, [sp, #12]
 8000e38:	3307      	adds	r3, #7
 8000e3a:	f023 0307 	bic.w	r3, r3, #7
 8000e3e:	3308      	adds	r3, #8
 8000e40:	9303      	str	r3, [sp, #12]
 8000e42:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8000e44:	443b      	add	r3, r7
 8000e46:	9309      	str	r3, [sp, #36]	@ 0x24
 8000e48:	e76a      	b.n	8000d20 <_vfiprintf_r+0x78>
 8000e4a:	fb0c 3202 	mla	r2, ip, r2, r3
 8000e4e:	460c      	mov	r4, r1
 8000e50:	2001      	movs	r0, #1
 8000e52:	e7a8      	b.n	8000da6 <_vfiprintf_r+0xfe>
 8000e54:	2300      	movs	r3, #0
 8000e56:	3401      	adds	r4, #1
 8000e58:	9305      	str	r3, [sp, #20]
 8000e5a:	4619      	mov	r1, r3
 8000e5c:	f04f 0c0a 	mov.w	ip, #10
 8000e60:	4620      	mov	r0, r4
 8000e62:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000e66:	3a30      	subs	r2, #48	@ 0x30
 8000e68:	2a09      	cmp	r2, #9
 8000e6a:	d903      	bls.n	8000e74 <_vfiprintf_r+0x1cc>
 8000e6c:	2b00      	cmp	r3, #0
 8000e6e:	d0c6      	beq.n	8000dfe <_vfiprintf_r+0x156>
 8000e70:	9105      	str	r1, [sp, #20]
 8000e72:	e7c4      	b.n	8000dfe <_vfiprintf_r+0x156>
 8000e74:	fb0c 2101 	mla	r1, ip, r1, r2
 8000e78:	4604      	mov	r4, r0
 8000e7a:	2301      	movs	r3, #1
 8000e7c:	e7f0      	b.n	8000e60 <_vfiprintf_r+0x1b8>
 8000e7e:	ab03      	add	r3, sp, #12
 8000e80:	9300      	str	r3, [sp, #0]
 8000e82:	462a      	mov	r2, r5
 8000e84:	4b13      	ldr	r3, [pc, #76]	@ (8000ed4 <_vfiprintf_r+0x22c>)
 8000e86:	a904      	add	r1, sp, #16
 8000e88:	4630      	mov	r0, r6
 8000e8a:	f3af 8000 	nop.w
 8000e8e:	4607      	mov	r7, r0
 8000e90:	1c78      	adds	r0, r7, #1
 8000e92:	d1d6      	bne.n	8000e42 <_vfiprintf_r+0x19a>
 8000e94:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000e96:	07d9      	lsls	r1, r3, #31
 8000e98:	d405      	bmi.n	8000ea6 <_vfiprintf_r+0x1fe>
 8000e9a:	89ab      	ldrh	r3, [r5, #12]
 8000e9c:	059a      	lsls	r2, r3, #22
 8000e9e:	d402      	bmi.n	8000ea6 <_vfiprintf_r+0x1fe>
 8000ea0:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000ea2:	f7ff fddf 	bl	8000a64 <__retarget_lock_release_recursive>
 8000ea6:	89ab      	ldrh	r3, [r5, #12]
 8000ea8:	065b      	lsls	r3, r3, #25
 8000eaa:	f53f af1f 	bmi.w	8000cec <_vfiprintf_r+0x44>
 8000eae:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8000eb0:	e71e      	b.n	8000cf0 <_vfiprintf_r+0x48>
 8000eb2:	ab03      	add	r3, sp, #12
 8000eb4:	9300      	str	r3, [sp, #0]
 8000eb6:	462a      	mov	r2, r5
 8000eb8:	4b06      	ldr	r3, [pc, #24]	@ (8000ed4 <_vfiprintf_r+0x22c>)
 8000eba:	a904      	add	r1, sp, #16
 8000ebc:	4630      	mov	r0, r6
 8000ebe:	f000 f879 	bl	8000fb4 <_printf_i>
 8000ec2:	e7e4      	b.n	8000e8e <_vfiprintf_r+0x1e6>
 8000ec4:	080015d0 	.word	0x080015d0
 8000ec8:	080015d6 	.word	0x080015d6
 8000ecc:	080015da 	.word	0x080015da
 8000ed0:	00000000 	.word	0x00000000
 8000ed4:	08000c83 	.word	0x08000c83

08000ed8 <_printf_common>:
 8000ed8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000edc:	4616      	mov	r6, r2
 8000ede:	4698      	mov	r8, r3
 8000ee0:	688a      	ldr	r2, [r1, #8]
 8000ee2:	690b      	ldr	r3, [r1, #16]
 8000ee4:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8000ee8:	4293      	cmp	r3, r2
 8000eea:	bfb8      	it	lt
 8000eec:	4613      	movlt	r3, r2
 8000eee:	6033      	str	r3, [r6, #0]
 8000ef0:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8000ef4:	4607      	mov	r7, r0
 8000ef6:	460c      	mov	r4, r1
 8000ef8:	b10a      	cbz	r2, 8000efe <_printf_common+0x26>
 8000efa:	3301      	adds	r3, #1
 8000efc:	6033      	str	r3, [r6, #0]
 8000efe:	6823      	ldr	r3, [r4, #0]
 8000f00:	0699      	lsls	r1, r3, #26
 8000f02:	bf42      	ittt	mi
 8000f04:	6833      	ldrmi	r3, [r6, #0]
 8000f06:	3302      	addmi	r3, #2
 8000f08:	6033      	strmi	r3, [r6, #0]
 8000f0a:	6825      	ldr	r5, [r4, #0]
 8000f0c:	f015 0506 	ands.w	r5, r5, #6
 8000f10:	d106      	bne.n	8000f20 <_printf_common+0x48>
 8000f12:	f104 0a19 	add.w	sl, r4, #25
 8000f16:	68e3      	ldr	r3, [r4, #12]
 8000f18:	6832      	ldr	r2, [r6, #0]
 8000f1a:	1a9b      	subs	r3, r3, r2
 8000f1c:	42ab      	cmp	r3, r5
 8000f1e:	dc26      	bgt.n	8000f6e <_printf_common+0x96>
 8000f20:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8000f24:	6822      	ldr	r2, [r4, #0]
 8000f26:	3b00      	subs	r3, #0
 8000f28:	bf18      	it	ne
 8000f2a:	2301      	movne	r3, #1
 8000f2c:	0692      	lsls	r2, r2, #26
 8000f2e:	d42b      	bmi.n	8000f88 <_printf_common+0xb0>
 8000f30:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8000f34:	4641      	mov	r1, r8
 8000f36:	4638      	mov	r0, r7
 8000f38:	47c8      	blx	r9
 8000f3a:	3001      	adds	r0, #1
 8000f3c:	d01e      	beq.n	8000f7c <_printf_common+0xa4>
 8000f3e:	6823      	ldr	r3, [r4, #0]
 8000f40:	6922      	ldr	r2, [r4, #16]
 8000f42:	f003 0306 	and.w	r3, r3, #6
 8000f46:	2b04      	cmp	r3, #4
 8000f48:	bf02      	ittt	eq
 8000f4a:	68e5      	ldreq	r5, [r4, #12]
 8000f4c:	6833      	ldreq	r3, [r6, #0]
 8000f4e:	1aed      	subeq	r5, r5, r3
 8000f50:	68a3      	ldr	r3, [r4, #8]
 8000f52:	bf0c      	ite	eq
 8000f54:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000f58:	2500      	movne	r5, #0
 8000f5a:	4293      	cmp	r3, r2
 8000f5c:	bfc4      	itt	gt
 8000f5e:	1a9b      	subgt	r3, r3, r2
 8000f60:	18ed      	addgt	r5, r5, r3
 8000f62:	2600      	movs	r6, #0
 8000f64:	341a      	adds	r4, #26
 8000f66:	42b5      	cmp	r5, r6
 8000f68:	d11a      	bne.n	8000fa0 <_printf_common+0xc8>
 8000f6a:	2000      	movs	r0, #0
 8000f6c:	e008      	b.n	8000f80 <_printf_common+0xa8>
 8000f6e:	2301      	movs	r3, #1
 8000f70:	4652      	mov	r2, sl
 8000f72:	4641      	mov	r1, r8
 8000f74:	4638      	mov	r0, r7
 8000f76:	47c8      	blx	r9
 8000f78:	3001      	adds	r0, #1
 8000f7a:	d103      	bne.n	8000f84 <_printf_common+0xac>
 8000f7c:	f04f 30ff 	mov.w	r0, #4294967295
 8000f80:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000f84:	3501      	adds	r5, #1
 8000f86:	e7c6      	b.n	8000f16 <_printf_common+0x3e>
 8000f88:	18e1      	adds	r1, r4, r3
 8000f8a:	1c5a      	adds	r2, r3, #1
 8000f8c:	2030      	movs	r0, #48	@ 0x30
 8000f8e:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8000f92:	4422      	add	r2, r4
 8000f94:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8000f98:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8000f9c:	3302      	adds	r3, #2
 8000f9e:	e7c7      	b.n	8000f30 <_printf_common+0x58>
 8000fa0:	2301      	movs	r3, #1
 8000fa2:	4622      	mov	r2, r4
 8000fa4:	4641      	mov	r1, r8
 8000fa6:	4638      	mov	r0, r7
 8000fa8:	47c8      	blx	r9
 8000faa:	3001      	adds	r0, #1
 8000fac:	d0e6      	beq.n	8000f7c <_printf_common+0xa4>
 8000fae:	3601      	adds	r6, #1
 8000fb0:	e7d9      	b.n	8000f66 <_printf_common+0x8e>
	...

08000fb4 <_printf_i>:
 8000fb4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000fb8:	7e0f      	ldrb	r7, [r1, #24]
 8000fba:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8000fbc:	2f78      	cmp	r7, #120	@ 0x78
 8000fbe:	4691      	mov	r9, r2
 8000fc0:	4680      	mov	r8, r0
 8000fc2:	460c      	mov	r4, r1
 8000fc4:	469a      	mov	sl, r3
 8000fc6:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8000fca:	d807      	bhi.n	8000fdc <_printf_i+0x28>
 8000fcc:	2f62      	cmp	r7, #98	@ 0x62
 8000fce:	d80a      	bhi.n	8000fe6 <_printf_i+0x32>
 8000fd0:	2f00      	cmp	r7, #0
 8000fd2:	f000 80d2 	beq.w	800117a <_printf_i+0x1c6>
 8000fd6:	2f58      	cmp	r7, #88	@ 0x58
 8000fd8:	f000 80b9 	beq.w	800114e <_printf_i+0x19a>
 8000fdc:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8000fe0:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8000fe4:	e03a      	b.n	800105c <_printf_i+0xa8>
 8000fe6:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8000fea:	2b15      	cmp	r3, #21
 8000fec:	d8f6      	bhi.n	8000fdc <_printf_i+0x28>
 8000fee:	a101      	add	r1, pc, #4	@ (adr r1, 8000ff4 <_printf_i+0x40>)
 8000ff0:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000ff4:	0800104d 	.word	0x0800104d
 8000ff8:	08001061 	.word	0x08001061
 8000ffc:	08000fdd 	.word	0x08000fdd
 8001000:	08000fdd 	.word	0x08000fdd
 8001004:	08000fdd 	.word	0x08000fdd
 8001008:	08000fdd 	.word	0x08000fdd
 800100c:	08001061 	.word	0x08001061
 8001010:	08000fdd 	.word	0x08000fdd
 8001014:	08000fdd 	.word	0x08000fdd
 8001018:	08000fdd 	.word	0x08000fdd
 800101c:	08000fdd 	.word	0x08000fdd
 8001020:	08001161 	.word	0x08001161
 8001024:	0800108b 	.word	0x0800108b
 8001028:	0800111b 	.word	0x0800111b
 800102c:	08000fdd 	.word	0x08000fdd
 8001030:	08000fdd 	.word	0x08000fdd
 8001034:	08001183 	.word	0x08001183
 8001038:	08000fdd 	.word	0x08000fdd
 800103c:	0800108b 	.word	0x0800108b
 8001040:	08000fdd 	.word	0x08000fdd
 8001044:	08000fdd 	.word	0x08000fdd
 8001048:	08001123 	.word	0x08001123
 800104c:	6833      	ldr	r3, [r6, #0]
 800104e:	1d1a      	adds	r2, r3, #4
 8001050:	681b      	ldr	r3, [r3, #0]
 8001052:	6032      	str	r2, [r6, #0]
 8001054:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8001058:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 800105c:	2301      	movs	r3, #1
 800105e:	e09d      	b.n	800119c <_printf_i+0x1e8>
 8001060:	6833      	ldr	r3, [r6, #0]
 8001062:	6820      	ldr	r0, [r4, #0]
 8001064:	1d19      	adds	r1, r3, #4
 8001066:	6031      	str	r1, [r6, #0]
 8001068:	0606      	lsls	r6, r0, #24
 800106a:	d501      	bpl.n	8001070 <_printf_i+0xbc>
 800106c:	681d      	ldr	r5, [r3, #0]
 800106e:	e003      	b.n	8001078 <_printf_i+0xc4>
 8001070:	0645      	lsls	r5, r0, #25
 8001072:	d5fb      	bpl.n	800106c <_printf_i+0xb8>
 8001074:	f9b3 5000 	ldrsh.w	r5, [r3]
 8001078:	2d00      	cmp	r5, #0
 800107a:	da03      	bge.n	8001084 <_printf_i+0xd0>
 800107c:	232d      	movs	r3, #45	@ 0x2d
 800107e:	426d      	negs	r5, r5
 8001080:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8001084:	4859      	ldr	r0, [pc, #356]	@ (80011ec <_printf_i+0x238>)
 8001086:	230a      	movs	r3, #10
 8001088:	e011      	b.n	80010ae <_printf_i+0xfa>
 800108a:	6821      	ldr	r1, [r4, #0]
 800108c:	6833      	ldr	r3, [r6, #0]
 800108e:	0608      	lsls	r0, r1, #24
 8001090:	f853 5b04 	ldr.w	r5, [r3], #4
 8001094:	d402      	bmi.n	800109c <_printf_i+0xe8>
 8001096:	0649      	lsls	r1, r1, #25
 8001098:	bf48      	it	mi
 800109a:	b2ad      	uxthmi	r5, r5
 800109c:	2f6f      	cmp	r7, #111	@ 0x6f
 800109e:	4853      	ldr	r0, [pc, #332]	@ (80011ec <_printf_i+0x238>)
 80010a0:	6033      	str	r3, [r6, #0]
 80010a2:	bf14      	ite	ne
 80010a4:	230a      	movne	r3, #10
 80010a6:	2308      	moveq	r3, #8
 80010a8:	2100      	movs	r1, #0
 80010aa:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 80010ae:	6866      	ldr	r6, [r4, #4]
 80010b0:	60a6      	str	r6, [r4, #8]
 80010b2:	2e00      	cmp	r6, #0
 80010b4:	bfa2      	ittt	ge
 80010b6:	6821      	ldrge	r1, [r4, #0]
 80010b8:	f021 0104 	bicge.w	r1, r1, #4
 80010bc:	6021      	strge	r1, [r4, #0]
 80010be:	b90d      	cbnz	r5, 80010c4 <_printf_i+0x110>
 80010c0:	2e00      	cmp	r6, #0
 80010c2:	d04b      	beq.n	800115c <_printf_i+0x1a8>
 80010c4:	4616      	mov	r6, r2
 80010c6:	fbb5 f1f3 	udiv	r1, r5, r3
 80010ca:	fb03 5711 	mls	r7, r3, r1, r5
 80010ce:	5dc7      	ldrb	r7, [r0, r7]
 80010d0:	f806 7d01 	strb.w	r7, [r6, #-1]!
 80010d4:	462f      	mov	r7, r5
 80010d6:	42bb      	cmp	r3, r7
 80010d8:	460d      	mov	r5, r1
 80010da:	d9f4      	bls.n	80010c6 <_printf_i+0x112>
 80010dc:	2b08      	cmp	r3, #8
 80010de:	d10b      	bne.n	80010f8 <_printf_i+0x144>
 80010e0:	6823      	ldr	r3, [r4, #0]
 80010e2:	07df      	lsls	r7, r3, #31
 80010e4:	d508      	bpl.n	80010f8 <_printf_i+0x144>
 80010e6:	6923      	ldr	r3, [r4, #16]
 80010e8:	6861      	ldr	r1, [r4, #4]
 80010ea:	4299      	cmp	r1, r3
 80010ec:	bfde      	ittt	le
 80010ee:	2330      	movle	r3, #48	@ 0x30
 80010f0:	f806 3c01 	strble.w	r3, [r6, #-1]
 80010f4:	f106 36ff 	addle.w	r6, r6, #4294967295
 80010f8:	1b92      	subs	r2, r2, r6
 80010fa:	6122      	str	r2, [r4, #16]
 80010fc:	f8cd a000 	str.w	sl, [sp]
 8001100:	464b      	mov	r3, r9
 8001102:	aa03      	add	r2, sp, #12
 8001104:	4621      	mov	r1, r4
 8001106:	4640      	mov	r0, r8
 8001108:	f7ff fee6 	bl	8000ed8 <_printf_common>
 800110c:	3001      	adds	r0, #1
 800110e:	d14a      	bne.n	80011a6 <_printf_i+0x1f2>
 8001110:	f04f 30ff 	mov.w	r0, #4294967295
 8001114:	b004      	add	sp, #16
 8001116:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800111a:	6823      	ldr	r3, [r4, #0]
 800111c:	f043 0320 	orr.w	r3, r3, #32
 8001120:	6023      	str	r3, [r4, #0]
 8001122:	4833      	ldr	r0, [pc, #204]	@ (80011f0 <_printf_i+0x23c>)
 8001124:	2778      	movs	r7, #120	@ 0x78
 8001126:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 800112a:	6823      	ldr	r3, [r4, #0]
 800112c:	6831      	ldr	r1, [r6, #0]
 800112e:	061f      	lsls	r7, r3, #24
 8001130:	f851 5b04 	ldr.w	r5, [r1], #4
 8001134:	d402      	bmi.n	800113c <_printf_i+0x188>
 8001136:	065f      	lsls	r7, r3, #25
 8001138:	bf48      	it	mi
 800113a:	b2ad      	uxthmi	r5, r5
 800113c:	6031      	str	r1, [r6, #0]
 800113e:	07d9      	lsls	r1, r3, #31
 8001140:	bf44      	itt	mi
 8001142:	f043 0320 	orrmi.w	r3, r3, #32
 8001146:	6023      	strmi	r3, [r4, #0]
 8001148:	b11d      	cbz	r5, 8001152 <_printf_i+0x19e>
 800114a:	2310      	movs	r3, #16
 800114c:	e7ac      	b.n	80010a8 <_printf_i+0xf4>
 800114e:	4827      	ldr	r0, [pc, #156]	@ (80011ec <_printf_i+0x238>)
 8001150:	e7e9      	b.n	8001126 <_printf_i+0x172>
 8001152:	6823      	ldr	r3, [r4, #0]
 8001154:	f023 0320 	bic.w	r3, r3, #32
 8001158:	6023      	str	r3, [r4, #0]
 800115a:	e7f6      	b.n	800114a <_printf_i+0x196>
 800115c:	4616      	mov	r6, r2
 800115e:	e7bd      	b.n	80010dc <_printf_i+0x128>
 8001160:	6833      	ldr	r3, [r6, #0]
 8001162:	6825      	ldr	r5, [r4, #0]
 8001164:	6961      	ldr	r1, [r4, #20]
 8001166:	1d18      	adds	r0, r3, #4
 8001168:	6030      	str	r0, [r6, #0]
 800116a:	062e      	lsls	r6, r5, #24
 800116c:	681b      	ldr	r3, [r3, #0]
 800116e:	d501      	bpl.n	8001174 <_printf_i+0x1c0>
 8001170:	6019      	str	r1, [r3, #0]
 8001172:	e002      	b.n	800117a <_printf_i+0x1c6>
 8001174:	0668      	lsls	r0, r5, #25
 8001176:	d5fb      	bpl.n	8001170 <_printf_i+0x1bc>
 8001178:	8019      	strh	r1, [r3, #0]
 800117a:	2300      	movs	r3, #0
 800117c:	6123      	str	r3, [r4, #16]
 800117e:	4616      	mov	r6, r2
 8001180:	e7bc      	b.n	80010fc <_printf_i+0x148>
 8001182:	6833      	ldr	r3, [r6, #0]
 8001184:	1d1a      	adds	r2, r3, #4
 8001186:	6032      	str	r2, [r6, #0]
 8001188:	681e      	ldr	r6, [r3, #0]
 800118a:	6862      	ldr	r2, [r4, #4]
 800118c:	2100      	movs	r1, #0
 800118e:	4630      	mov	r0, r6
 8001190:	f7ff f83e 	bl	8000210 <memchr>
 8001194:	b108      	cbz	r0, 800119a <_printf_i+0x1e6>
 8001196:	1b80      	subs	r0, r0, r6
 8001198:	6060      	str	r0, [r4, #4]
 800119a:	6863      	ldr	r3, [r4, #4]
 800119c:	6123      	str	r3, [r4, #16]
 800119e:	2300      	movs	r3, #0
 80011a0:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80011a4:	e7aa      	b.n	80010fc <_printf_i+0x148>
 80011a6:	6923      	ldr	r3, [r4, #16]
 80011a8:	4632      	mov	r2, r6
 80011aa:	4649      	mov	r1, r9
 80011ac:	4640      	mov	r0, r8
 80011ae:	47d0      	blx	sl
 80011b0:	3001      	adds	r0, #1
 80011b2:	d0ad      	beq.n	8001110 <_printf_i+0x15c>
 80011b4:	6823      	ldr	r3, [r4, #0]
 80011b6:	079b      	lsls	r3, r3, #30
 80011b8:	d413      	bmi.n	80011e2 <_printf_i+0x22e>
 80011ba:	68e0      	ldr	r0, [r4, #12]
 80011bc:	9b03      	ldr	r3, [sp, #12]
 80011be:	4298      	cmp	r0, r3
 80011c0:	bfb8      	it	lt
 80011c2:	4618      	movlt	r0, r3
 80011c4:	e7a6      	b.n	8001114 <_printf_i+0x160>
 80011c6:	2301      	movs	r3, #1
 80011c8:	4632      	mov	r2, r6
 80011ca:	4649      	mov	r1, r9
 80011cc:	4640      	mov	r0, r8
 80011ce:	47d0      	blx	sl
 80011d0:	3001      	adds	r0, #1
 80011d2:	d09d      	beq.n	8001110 <_printf_i+0x15c>
 80011d4:	3501      	adds	r5, #1
 80011d6:	68e3      	ldr	r3, [r4, #12]
 80011d8:	9903      	ldr	r1, [sp, #12]
 80011da:	1a5b      	subs	r3, r3, r1
 80011dc:	42ab      	cmp	r3, r5
 80011de:	dcf2      	bgt.n	80011c6 <_printf_i+0x212>
 80011e0:	e7eb      	b.n	80011ba <_printf_i+0x206>
 80011e2:	2500      	movs	r5, #0
 80011e4:	f104 0619 	add.w	r6, r4, #25
 80011e8:	e7f5      	b.n	80011d6 <_printf_i+0x222>
 80011ea:	bf00      	nop
 80011ec:	080015e1 	.word	0x080015e1
 80011f0:	080015f2 	.word	0x080015f2

080011f4 <__sflush_r>:
 80011f4:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 80011f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80011fa:	0716      	lsls	r6, r2, #28
 80011fc:	4605      	mov	r5, r0
 80011fe:	460c      	mov	r4, r1
 8001200:	d454      	bmi.n	80012ac <__sflush_r+0xb8>
 8001202:	684b      	ldr	r3, [r1, #4]
 8001204:	2b00      	cmp	r3, #0
 8001206:	dc02      	bgt.n	800120e <__sflush_r+0x1a>
 8001208:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 800120a:	2b00      	cmp	r3, #0
 800120c:	dd48      	ble.n	80012a0 <__sflush_r+0xac>
 800120e:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8001210:	2e00      	cmp	r6, #0
 8001212:	d045      	beq.n	80012a0 <__sflush_r+0xac>
 8001214:	2300      	movs	r3, #0
 8001216:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 800121a:	682f      	ldr	r7, [r5, #0]
 800121c:	6a21      	ldr	r1, [r4, #32]
 800121e:	602b      	str	r3, [r5, #0]
 8001220:	d030      	beq.n	8001284 <__sflush_r+0x90>
 8001222:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8001224:	89a3      	ldrh	r3, [r4, #12]
 8001226:	0759      	lsls	r1, r3, #29
 8001228:	d505      	bpl.n	8001236 <__sflush_r+0x42>
 800122a:	6863      	ldr	r3, [r4, #4]
 800122c:	1ad2      	subs	r2, r2, r3
 800122e:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8001230:	b10b      	cbz	r3, 8001236 <__sflush_r+0x42>
 8001232:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8001234:	1ad2      	subs	r2, r2, r3
 8001236:	2300      	movs	r3, #0
 8001238:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 800123a:	6a21      	ldr	r1, [r4, #32]
 800123c:	4628      	mov	r0, r5
 800123e:	47b0      	blx	r6
 8001240:	1c43      	adds	r3, r0, #1
 8001242:	89a3      	ldrh	r3, [r4, #12]
 8001244:	d106      	bne.n	8001254 <__sflush_r+0x60>
 8001246:	6829      	ldr	r1, [r5, #0]
 8001248:	291d      	cmp	r1, #29
 800124a:	d82b      	bhi.n	80012a4 <__sflush_r+0xb0>
 800124c:	4a28      	ldr	r2, [pc, #160]	@ (80012f0 <__sflush_r+0xfc>)
 800124e:	410a      	asrs	r2, r1
 8001250:	07d6      	lsls	r6, r2, #31
 8001252:	d427      	bmi.n	80012a4 <__sflush_r+0xb0>
 8001254:	2200      	movs	r2, #0
 8001256:	6062      	str	r2, [r4, #4]
 8001258:	04d9      	lsls	r1, r3, #19
 800125a:	6922      	ldr	r2, [r4, #16]
 800125c:	6022      	str	r2, [r4, #0]
 800125e:	d504      	bpl.n	800126a <__sflush_r+0x76>
 8001260:	1c42      	adds	r2, r0, #1
 8001262:	d101      	bne.n	8001268 <__sflush_r+0x74>
 8001264:	682b      	ldr	r3, [r5, #0]
 8001266:	b903      	cbnz	r3, 800126a <__sflush_r+0x76>
 8001268:	6560      	str	r0, [r4, #84]	@ 0x54
 800126a:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800126c:	602f      	str	r7, [r5, #0]
 800126e:	b1b9      	cbz	r1, 80012a0 <__sflush_r+0xac>
 8001270:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8001274:	4299      	cmp	r1, r3
 8001276:	d002      	beq.n	800127e <__sflush_r+0x8a>
 8001278:	4628      	mov	r0, r5
 800127a:	f7ff fbf5 	bl	8000a68 <_free_r>
 800127e:	2300      	movs	r3, #0
 8001280:	6363      	str	r3, [r4, #52]	@ 0x34
 8001282:	e00d      	b.n	80012a0 <__sflush_r+0xac>
 8001284:	2301      	movs	r3, #1
 8001286:	4628      	mov	r0, r5
 8001288:	47b0      	blx	r6
 800128a:	4602      	mov	r2, r0
 800128c:	1c50      	adds	r0, r2, #1
 800128e:	d1c9      	bne.n	8001224 <__sflush_r+0x30>
 8001290:	682b      	ldr	r3, [r5, #0]
 8001292:	2b00      	cmp	r3, #0
 8001294:	d0c6      	beq.n	8001224 <__sflush_r+0x30>
 8001296:	2b1d      	cmp	r3, #29
 8001298:	d001      	beq.n	800129e <__sflush_r+0xaa>
 800129a:	2b16      	cmp	r3, #22
 800129c:	d11d      	bne.n	80012da <__sflush_r+0xe6>
 800129e:	602f      	str	r7, [r5, #0]
 80012a0:	2000      	movs	r0, #0
 80012a2:	e021      	b.n	80012e8 <__sflush_r+0xf4>
 80012a4:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80012a8:	b21b      	sxth	r3, r3
 80012aa:	e01a      	b.n	80012e2 <__sflush_r+0xee>
 80012ac:	690f      	ldr	r7, [r1, #16]
 80012ae:	2f00      	cmp	r7, #0
 80012b0:	d0f6      	beq.n	80012a0 <__sflush_r+0xac>
 80012b2:	0793      	lsls	r3, r2, #30
 80012b4:	680e      	ldr	r6, [r1, #0]
 80012b6:	bf08      	it	eq
 80012b8:	694b      	ldreq	r3, [r1, #20]
 80012ba:	600f      	str	r7, [r1, #0]
 80012bc:	bf18      	it	ne
 80012be:	2300      	movne	r3, #0
 80012c0:	1bf6      	subs	r6, r6, r7
 80012c2:	608b      	str	r3, [r1, #8]
 80012c4:	2e00      	cmp	r6, #0
 80012c6:	ddeb      	ble.n	80012a0 <__sflush_r+0xac>
 80012c8:	6a21      	ldr	r1, [r4, #32]
 80012ca:	f8d4 c028 	ldr.w	ip, [r4, #40]	@ 0x28
 80012ce:	4633      	mov	r3, r6
 80012d0:	463a      	mov	r2, r7
 80012d2:	4628      	mov	r0, r5
 80012d4:	47e0      	blx	ip
 80012d6:	2800      	cmp	r0, #0
 80012d8:	dc07      	bgt.n	80012ea <__sflush_r+0xf6>
 80012da:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80012de:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80012e2:	81a3      	strh	r3, [r4, #12]
 80012e4:	f04f 30ff 	mov.w	r0, #4294967295
 80012e8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80012ea:	4407      	add	r7, r0
 80012ec:	1a36      	subs	r6, r6, r0
 80012ee:	e7e9      	b.n	80012c4 <__sflush_r+0xd0>
 80012f0:	dfbffffe 	.word	0xdfbffffe

080012f4 <_fflush_r>:
 80012f4:	b538      	push	{r3, r4, r5, lr}
 80012f6:	690b      	ldr	r3, [r1, #16]
 80012f8:	4605      	mov	r5, r0
 80012fa:	460c      	mov	r4, r1
 80012fc:	b913      	cbnz	r3, 8001304 <_fflush_r+0x10>
 80012fe:	2500      	movs	r5, #0
 8001300:	4628      	mov	r0, r5
 8001302:	bd38      	pop	{r3, r4, r5, pc}
 8001304:	b118      	cbz	r0, 800130e <_fflush_r+0x1a>
 8001306:	6a03      	ldr	r3, [r0, #32]
 8001308:	b90b      	cbnz	r3, 800130e <_fflush_r+0x1a>
 800130a:	f7ff faa5 	bl	8000858 <__sinit>
 800130e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001312:	2b00      	cmp	r3, #0
 8001314:	d0f3      	beq.n	80012fe <_fflush_r+0xa>
 8001316:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8001318:	07d0      	lsls	r0, r2, #31
 800131a:	d404      	bmi.n	8001326 <_fflush_r+0x32>
 800131c:	0599      	lsls	r1, r3, #22
 800131e:	d402      	bmi.n	8001326 <_fflush_r+0x32>
 8001320:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8001322:	f7ff fb9e 	bl	8000a62 <__retarget_lock_acquire_recursive>
 8001326:	4628      	mov	r0, r5
 8001328:	4621      	mov	r1, r4
 800132a:	f7ff ff63 	bl	80011f4 <__sflush_r>
 800132e:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8001330:	07da      	lsls	r2, r3, #31
 8001332:	4605      	mov	r5, r0
 8001334:	d4e4      	bmi.n	8001300 <_fflush_r+0xc>
 8001336:	89a3      	ldrh	r3, [r4, #12]
 8001338:	059b      	lsls	r3, r3, #22
 800133a:	d4e1      	bmi.n	8001300 <_fflush_r+0xc>
 800133c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800133e:	f7ff fb91 	bl	8000a64 <__retarget_lock_release_recursive>
 8001342:	e7dd      	b.n	8001300 <_fflush_r+0xc>

08001344 <__swbuf_r>:
 8001344:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001346:	460e      	mov	r6, r1
 8001348:	4614      	mov	r4, r2
 800134a:	4605      	mov	r5, r0
 800134c:	b118      	cbz	r0, 8001356 <__swbuf_r+0x12>
 800134e:	6a03      	ldr	r3, [r0, #32]
 8001350:	b90b      	cbnz	r3, 8001356 <__swbuf_r+0x12>
 8001352:	f7ff fa81 	bl	8000858 <__sinit>
 8001356:	69a3      	ldr	r3, [r4, #24]
 8001358:	60a3      	str	r3, [r4, #8]
 800135a:	89a3      	ldrh	r3, [r4, #12]
 800135c:	071a      	lsls	r2, r3, #28
 800135e:	d501      	bpl.n	8001364 <__swbuf_r+0x20>
 8001360:	6923      	ldr	r3, [r4, #16]
 8001362:	b943      	cbnz	r3, 8001376 <__swbuf_r+0x32>
 8001364:	4621      	mov	r1, r4
 8001366:	4628      	mov	r0, r5
 8001368:	f000 f82a 	bl	80013c0 <__swsetup_r>
 800136c:	b118      	cbz	r0, 8001376 <__swbuf_r+0x32>
 800136e:	f04f 37ff 	mov.w	r7, #4294967295
 8001372:	4638      	mov	r0, r7
 8001374:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001376:	6823      	ldr	r3, [r4, #0]
 8001378:	6922      	ldr	r2, [r4, #16]
 800137a:	1a98      	subs	r0, r3, r2
 800137c:	6963      	ldr	r3, [r4, #20]
 800137e:	b2f6      	uxtb	r6, r6
 8001380:	4283      	cmp	r3, r0
 8001382:	4637      	mov	r7, r6
 8001384:	dc05      	bgt.n	8001392 <__swbuf_r+0x4e>
 8001386:	4621      	mov	r1, r4
 8001388:	4628      	mov	r0, r5
 800138a:	f7ff ffb3 	bl	80012f4 <_fflush_r>
 800138e:	2800      	cmp	r0, #0
 8001390:	d1ed      	bne.n	800136e <__swbuf_r+0x2a>
 8001392:	68a3      	ldr	r3, [r4, #8]
 8001394:	3b01      	subs	r3, #1
 8001396:	60a3      	str	r3, [r4, #8]
 8001398:	6823      	ldr	r3, [r4, #0]
 800139a:	1c5a      	adds	r2, r3, #1
 800139c:	6022      	str	r2, [r4, #0]
 800139e:	701e      	strb	r6, [r3, #0]
 80013a0:	6962      	ldr	r2, [r4, #20]
 80013a2:	1c43      	adds	r3, r0, #1
 80013a4:	429a      	cmp	r2, r3
 80013a6:	d004      	beq.n	80013b2 <__swbuf_r+0x6e>
 80013a8:	89a3      	ldrh	r3, [r4, #12]
 80013aa:	07db      	lsls	r3, r3, #31
 80013ac:	d5e1      	bpl.n	8001372 <__swbuf_r+0x2e>
 80013ae:	2e0a      	cmp	r6, #10
 80013b0:	d1df      	bne.n	8001372 <__swbuf_r+0x2e>
 80013b2:	4621      	mov	r1, r4
 80013b4:	4628      	mov	r0, r5
 80013b6:	f7ff ff9d 	bl	80012f4 <_fflush_r>
 80013ba:	2800      	cmp	r0, #0
 80013bc:	d0d9      	beq.n	8001372 <__swbuf_r+0x2e>
 80013be:	e7d6      	b.n	800136e <__swbuf_r+0x2a>

080013c0 <__swsetup_r>:
 80013c0:	b538      	push	{r3, r4, r5, lr}
 80013c2:	4b29      	ldr	r3, [pc, #164]	@ (8001468 <__swsetup_r+0xa8>)
 80013c4:	4605      	mov	r5, r0
 80013c6:	6818      	ldr	r0, [r3, #0]
 80013c8:	460c      	mov	r4, r1
 80013ca:	b118      	cbz	r0, 80013d4 <__swsetup_r+0x14>
 80013cc:	6a03      	ldr	r3, [r0, #32]
 80013ce:	b90b      	cbnz	r3, 80013d4 <__swsetup_r+0x14>
 80013d0:	f7ff fa42 	bl	8000858 <__sinit>
 80013d4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80013d8:	0719      	lsls	r1, r3, #28
 80013da:	d422      	bmi.n	8001422 <__swsetup_r+0x62>
 80013dc:	06da      	lsls	r2, r3, #27
 80013de:	d407      	bmi.n	80013f0 <__swsetup_r+0x30>
 80013e0:	2209      	movs	r2, #9
 80013e2:	602a      	str	r2, [r5, #0]
 80013e4:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80013e8:	81a3      	strh	r3, [r4, #12]
 80013ea:	f04f 30ff 	mov.w	r0, #4294967295
 80013ee:	e033      	b.n	8001458 <__swsetup_r+0x98>
 80013f0:	0758      	lsls	r0, r3, #29
 80013f2:	d512      	bpl.n	800141a <__swsetup_r+0x5a>
 80013f4:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80013f6:	b141      	cbz	r1, 800140a <__swsetup_r+0x4a>
 80013f8:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80013fc:	4299      	cmp	r1, r3
 80013fe:	d002      	beq.n	8001406 <__swsetup_r+0x46>
 8001400:	4628      	mov	r0, r5
 8001402:	f7ff fb31 	bl	8000a68 <_free_r>
 8001406:	2300      	movs	r3, #0
 8001408:	6363      	str	r3, [r4, #52]	@ 0x34
 800140a:	89a3      	ldrh	r3, [r4, #12]
 800140c:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8001410:	81a3      	strh	r3, [r4, #12]
 8001412:	2300      	movs	r3, #0
 8001414:	6063      	str	r3, [r4, #4]
 8001416:	6923      	ldr	r3, [r4, #16]
 8001418:	6023      	str	r3, [r4, #0]
 800141a:	89a3      	ldrh	r3, [r4, #12]
 800141c:	f043 0308 	orr.w	r3, r3, #8
 8001420:	81a3      	strh	r3, [r4, #12]
 8001422:	6923      	ldr	r3, [r4, #16]
 8001424:	b94b      	cbnz	r3, 800143a <__swsetup_r+0x7a>
 8001426:	89a3      	ldrh	r3, [r4, #12]
 8001428:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 800142c:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8001430:	d003      	beq.n	800143a <__swsetup_r+0x7a>
 8001432:	4621      	mov	r1, r4
 8001434:	4628      	mov	r0, r5
 8001436:	f000 f84f 	bl	80014d8 <__smakebuf_r>
 800143a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800143e:	f013 0201 	ands.w	r2, r3, #1
 8001442:	d00a      	beq.n	800145a <__swsetup_r+0x9a>
 8001444:	2200      	movs	r2, #0
 8001446:	60a2      	str	r2, [r4, #8]
 8001448:	6962      	ldr	r2, [r4, #20]
 800144a:	4252      	negs	r2, r2
 800144c:	61a2      	str	r2, [r4, #24]
 800144e:	6922      	ldr	r2, [r4, #16]
 8001450:	b942      	cbnz	r2, 8001464 <__swsetup_r+0xa4>
 8001452:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8001456:	d1c5      	bne.n	80013e4 <__swsetup_r+0x24>
 8001458:	bd38      	pop	{r3, r4, r5, pc}
 800145a:	0799      	lsls	r1, r3, #30
 800145c:	bf58      	it	pl
 800145e:	6962      	ldrpl	r2, [r4, #20]
 8001460:	60a2      	str	r2, [r4, #8]
 8001462:	e7f4      	b.n	800144e <__swsetup_r+0x8e>
 8001464:	2000      	movs	r0, #0
 8001466:	e7f7      	b.n	8001458 <__swsetup_r+0x98>
 8001468:	20000018 	.word	0x20000018

0800146c <_sbrk_r>:
 800146c:	b538      	push	{r3, r4, r5, lr}
 800146e:	4d06      	ldr	r5, [pc, #24]	@ (8001488 <_sbrk_r+0x1c>)
 8001470:	2300      	movs	r3, #0
 8001472:	4604      	mov	r4, r0
 8001474:	4608      	mov	r0, r1
 8001476:	602b      	str	r3, [r5, #0]
 8001478:	f7ff f902 	bl	8000680 <_sbrk>
 800147c:	1c43      	adds	r3, r0, #1
 800147e:	d102      	bne.n	8001486 <_sbrk_r+0x1a>
 8001480:	682b      	ldr	r3, [r5, #0]
 8001482:	b103      	cbz	r3, 8001486 <_sbrk_r+0x1a>
 8001484:	6023      	str	r3, [r4, #0]
 8001486:	bd38      	pop	{r3, r4, r5, pc}
 8001488:	200001d0 	.word	0x200001d0

0800148c <__swhatbuf_r>:
 800148c:	b570      	push	{r4, r5, r6, lr}
 800148e:	460c      	mov	r4, r1
 8001490:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001494:	2900      	cmp	r1, #0
 8001496:	b096      	sub	sp, #88	@ 0x58
 8001498:	4615      	mov	r5, r2
 800149a:	461e      	mov	r6, r3
 800149c:	da0d      	bge.n	80014ba <__swhatbuf_r+0x2e>
 800149e:	89a3      	ldrh	r3, [r4, #12]
 80014a0:	f013 0f80 	tst.w	r3, #128	@ 0x80
 80014a4:	f04f 0100 	mov.w	r1, #0
 80014a8:	bf14      	ite	ne
 80014aa:	2340      	movne	r3, #64	@ 0x40
 80014ac:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 80014b0:	2000      	movs	r0, #0
 80014b2:	6031      	str	r1, [r6, #0]
 80014b4:	602b      	str	r3, [r5, #0]
 80014b6:	b016      	add	sp, #88	@ 0x58
 80014b8:	bd70      	pop	{r4, r5, r6, pc}
 80014ba:	466a      	mov	r2, sp
 80014bc:	f000 f848 	bl	8001550 <_fstat_r>
 80014c0:	2800      	cmp	r0, #0
 80014c2:	dbec      	blt.n	800149e <__swhatbuf_r+0x12>
 80014c4:	9901      	ldr	r1, [sp, #4]
 80014c6:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 80014ca:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 80014ce:	4259      	negs	r1, r3
 80014d0:	4159      	adcs	r1, r3
 80014d2:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80014d6:	e7eb      	b.n	80014b0 <__swhatbuf_r+0x24>

080014d8 <__smakebuf_r>:
 80014d8:	898b      	ldrh	r3, [r1, #12]
 80014da:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80014dc:	079d      	lsls	r5, r3, #30
 80014de:	4606      	mov	r6, r0
 80014e0:	460c      	mov	r4, r1
 80014e2:	d507      	bpl.n	80014f4 <__smakebuf_r+0x1c>
 80014e4:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 80014e8:	6023      	str	r3, [r4, #0]
 80014ea:	6123      	str	r3, [r4, #16]
 80014ec:	2301      	movs	r3, #1
 80014ee:	6163      	str	r3, [r4, #20]
 80014f0:	b003      	add	sp, #12
 80014f2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80014f4:	ab01      	add	r3, sp, #4
 80014f6:	466a      	mov	r2, sp
 80014f8:	f7ff ffc8 	bl	800148c <__swhatbuf_r>
 80014fc:	9f00      	ldr	r7, [sp, #0]
 80014fe:	4605      	mov	r5, r0
 8001500:	4639      	mov	r1, r7
 8001502:	4630      	mov	r0, r6
 8001504:	f7ff fb1c 	bl	8000b40 <_malloc_r>
 8001508:	b948      	cbnz	r0, 800151e <__smakebuf_r+0x46>
 800150a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800150e:	059a      	lsls	r2, r3, #22
 8001510:	d4ee      	bmi.n	80014f0 <__smakebuf_r+0x18>
 8001512:	f023 0303 	bic.w	r3, r3, #3
 8001516:	f043 0302 	orr.w	r3, r3, #2
 800151a:	81a3      	strh	r3, [r4, #12]
 800151c:	e7e2      	b.n	80014e4 <__smakebuf_r+0xc>
 800151e:	89a3      	ldrh	r3, [r4, #12]
 8001520:	6020      	str	r0, [r4, #0]
 8001522:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8001526:	81a3      	strh	r3, [r4, #12]
 8001528:	9b01      	ldr	r3, [sp, #4]
 800152a:	e9c4 0704 	strd	r0, r7, [r4, #16]
 800152e:	b15b      	cbz	r3, 8001548 <__smakebuf_r+0x70>
 8001530:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001534:	4630      	mov	r0, r6
 8001536:	f000 f81d 	bl	8001574 <_isatty_r>
 800153a:	b128      	cbz	r0, 8001548 <__smakebuf_r+0x70>
 800153c:	89a3      	ldrh	r3, [r4, #12]
 800153e:	f023 0303 	bic.w	r3, r3, #3
 8001542:	f043 0301 	orr.w	r3, r3, #1
 8001546:	81a3      	strh	r3, [r4, #12]
 8001548:	89a3      	ldrh	r3, [r4, #12]
 800154a:	431d      	orrs	r5, r3
 800154c:	81a5      	strh	r5, [r4, #12]
 800154e:	e7cf      	b.n	80014f0 <__smakebuf_r+0x18>

08001550 <_fstat_r>:
 8001550:	b538      	push	{r3, r4, r5, lr}
 8001552:	4d07      	ldr	r5, [pc, #28]	@ (8001570 <_fstat_r+0x20>)
 8001554:	2300      	movs	r3, #0
 8001556:	4604      	mov	r4, r0
 8001558:	4608      	mov	r0, r1
 800155a:	4611      	mov	r1, r2
 800155c:	602b      	str	r3, [r5, #0]
 800155e:	f7ff f869 	bl	8000634 <_fstat>
 8001562:	1c43      	adds	r3, r0, #1
 8001564:	d102      	bne.n	800156c <_fstat_r+0x1c>
 8001566:	682b      	ldr	r3, [r5, #0]
 8001568:	b103      	cbz	r3, 800156c <_fstat_r+0x1c>
 800156a:	6023      	str	r3, [r4, #0]
 800156c:	bd38      	pop	{r3, r4, r5, pc}
 800156e:	bf00      	nop
 8001570:	200001d0 	.word	0x200001d0

08001574 <_isatty_r>:
 8001574:	b538      	push	{r3, r4, r5, lr}
 8001576:	4d06      	ldr	r5, [pc, #24]	@ (8001590 <_isatty_r+0x1c>)
 8001578:	2300      	movs	r3, #0
 800157a:	4604      	mov	r4, r0
 800157c:	4608      	mov	r0, r1
 800157e:	602b      	str	r3, [r5, #0]
 8001580:	f7ff f867 	bl	8000652 <_isatty>
 8001584:	1c43      	adds	r3, r0, #1
 8001586:	d102      	bne.n	800158e <_isatty_r+0x1a>
 8001588:	682b      	ldr	r3, [r5, #0]
 800158a:	b103      	cbz	r3, 800158e <_isatty_r+0x1a>
 800158c:	6023      	str	r3, [r4, #0]
 800158e:	bd38      	pop	{r3, r4, r5, pc}
 8001590:	200001d0 	.word	0x200001d0

08001594 <_init>:
 8001594:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001596:	bf00      	nop
 8001598:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800159a:	bc08      	pop	{r3}
 800159c:	469e      	mov	lr, r3
 800159e:	4770      	bx	lr

080015a0 <_fini>:
 80015a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80015a2:	bf00      	nop
 80015a4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80015a6:	bc08      	pop	{r3}
 80015a8:	469e      	mov	lr, r3
 80015aa:	4770      	bx	lr
