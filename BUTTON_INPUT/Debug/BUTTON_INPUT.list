
BUTTON_INPUT.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000125c  080001d0  080001d0  000011d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000040  0800142c  0800142c  0000242c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800146c  0800146c  00003060  2**0
                  CONTENTS
  4 .ARM          00000008  0800146c  0800146c  0000246c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08001474  08001474  00003060  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001474  08001474  00002474  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08001478  08001478  00002478  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000060  20000000  0800147c  00003000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000016c  20000060  080014dc  00003060  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200001cc  080014dc  000031cc  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  00003060  2**0
                  CONTENTS, READONLY
 12 .debug_info   000009a5  00000000  00000000  0000308a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000372  00000000  00000000  00003a2f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000120  00000000  00000000  00003da8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000000c5  00000000  00000000  00003ec8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00002d48  00000000  00000000  00003f8d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000014fa  00000000  00000000  00006cd5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00009bab  00000000  00000000  000081cf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  00011d7a  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000b30  00000000  00000000  00011dc0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 000000a4  00000000  00000000  000128f0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	@ (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	@ (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	@ (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	20000060 	.word	0x20000060
 80001ec:	00000000 	.word	0x00000000
 80001f0:	08001414 	.word	0x08001414

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	@ (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	@ (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	@ (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	20000064 	.word	0x20000064
 800020c:	08001414 	.word	0x08001414

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <delay>:
#define GPIOA_PUDR ((volatile uint32_t*)(GPIOA_BASE + GPIO_PUDR_OFFSET))

int update = 1;

void delay(uint32_t timer)
{
 80002b0:	b480      	push	{r7}
 80002b2:	b085      	sub	sp, #20
 80002b4:	af00      	add	r7, sp, #0
 80002b6:	6078      	str	r0, [r7, #4]
	for(int i=0;i<timer;i++)
 80002b8:	2300      	movs	r3, #0
 80002ba:	60fb      	str	r3, [r7, #12]
 80002bc:	e00c      	b.n	80002d8 <delay+0x28>
	{
		for(int j =0;j<100000;j++);
 80002be:	2300      	movs	r3, #0
 80002c0:	60bb      	str	r3, [r7, #8]
 80002c2:	e002      	b.n	80002ca <delay+0x1a>
 80002c4:	68bb      	ldr	r3, [r7, #8]
 80002c6:	3301      	adds	r3, #1
 80002c8:	60bb      	str	r3, [r7, #8]
 80002ca:	68bb      	ldr	r3, [r7, #8]
 80002cc:	4a07      	ldr	r2, [pc, #28]	@ (80002ec <delay+0x3c>)
 80002ce:	4293      	cmp	r3, r2
 80002d0:	ddf8      	ble.n	80002c4 <delay+0x14>
	for(int i=0;i<timer;i++)
 80002d2:	68fb      	ldr	r3, [r7, #12]
 80002d4:	3301      	adds	r3, #1
 80002d6:	60fb      	str	r3, [r7, #12]
 80002d8:	68fb      	ldr	r3, [r7, #12]
 80002da:	687a      	ldr	r2, [r7, #4]
 80002dc:	429a      	cmp	r2, r3
 80002de:	d8ee      	bhi.n	80002be <delay+0xe>
	}
}
 80002e0:	bf00      	nop
 80002e2:	bf00      	nop
 80002e4:	3714      	adds	r7, #20
 80002e6:	46bd      	mov	sp, r7
 80002e8:	bc80      	pop	{r7}
 80002ea:	4770      	bx	lr
 80002ec:	0001869f 	.word	0x0001869f

080002f0 <main>:

int main(void)
{
 80002f0:	b580      	push	{r7, lr}
 80002f2:	af00      	add	r7, sp, #0

	*RCC_AHB1ENR |= (1<<2);
 80002f4:	4b2f      	ldr	r3, [pc, #188]	@ (80003b4 <main+0xc4>)
 80002f6:	681b      	ldr	r3, [r3, #0]
 80002f8:	4a2e      	ldr	r2, [pc, #184]	@ (80003b4 <main+0xc4>)
 80002fa:	f043 0304 	orr.w	r3, r3, #4
 80002fe:	6013      	str	r3, [r2, #0]
	*GPIOC_MODER &= ~(1<<26);
 8000300:	4b2d      	ldr	r3, [pc, #180]	@ (80003b8 <main+0xc8>)
 8000302:	681b      	ldr	r3, [r3, #0]
 8000304:	4a2c      	ldr	r2, [pc, #176]	@ (80003b8 <main+0xc8>)
 8000306:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
 800030a:	6013      	str	r3, [r2, #0]
	*GPIOC_PUDR |= (1<<26);
 800030c:	4b2b      	ldr	r3, [pc, #172]	@ (80003bc <main+0xcc>)
 800030e:	681b      	ldr	r3, [r3, #0]
 8000310:	4a2a      	ldr	r2, [pc, #168]	@ (80003bc <main+0xcc>)
 8000312:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 8000316:	6013      	str	r3, [r2, #0]

	*RCC_AHB1ENR |= (1 << RCC_AHB1ENR_GPIOAEN);
 8000318:	4b26      	ldr	r3, [pc, #152]	@ (80003b4 <main+0xc4>)
 800031a:	681b      	ldr	r3, [r3, #0]
 800031c:	4a25      	ldr	r2, [pc, #148]	@ (80003b4 <main+0xc4>)
 800031e:	f043 0301 	orr.w	r3, r3, #1
 8000322:	6013      	str	r3, [r2, #0]
	*GPIOA_MODER |= (1 << GPIO_MODER_MODER5);
 8000324:	4b26      	ldr	r3, [pc, #152]	@ (80003c0 <main+0xd0>)
 8000326:	681b      	ldr	r3, [r3, #0]
 8000328:	4a25      	ldr	r2, [pc, #148]	@ (80003c0 <main+0xd0>)
 800032a:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 800032e:	6013      	str	r3, [r2, #0]
	*GPIOA_TYPER &= ~(1<<5);
 8000330:	4b24      	ldr	r3, [pc, #144]	@ (80003c4 <main+0xd4>)
 8000332:	681b      	ldr	r3, [r3, #0]
 8000334:	4a23      	ldr	r2, [pc, #140]	@ (80003c4 <main+0xd4>)
 8000336:	f023 0320 	bic.w	r3, r3, #32
 800033a:	6013      	str	r3, [r2, #0]
	*GPIOA_OSPEEDR |= (1<<10);
 800033c:	4b22      	ldr	r3, [pc, #136]	@ (80003c8 <main+0xd8>)
 800033e:	681b      	ldr	r3, [r3, #0]
 8000340:	4a21      	ldr	r2, [pc, #132]	@ (80003c8 <main+0xd8>)
 8000342:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8000346:	6013      	str	r3, [r2, #0]
	*GPIOA_PUDR &= ~(3 << 10);
 8000348:	4b20      	ldr	r3, [pc, #128]	@ (80003cc <main+0xdc>)
 800034a:	681b      	ldr	r3, [r3, #0]
 800034c:	4a1f      	ldr	r2, [pc, #124]	@ (80003cc <main+0xdc>)
 800034e:	f423 6340 	bic.w	r3, r3, #3072	@ 0xc00
 8000352:	6013      	str	r3, [r2, #0]

    /* Loop forever */
	for(;;)
	{

		if(!(*GPIOC_IDR & (1<<13)))
 8000354:	4b1e      	ldr	r3, [pc, #120]	@ (80003d0 <main+0xe0>)
 8000356:	681b      	ldr	r3, [r3, #0]
 8000358:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 800035c:	2b00      	cmp	r3, #0
 800035e:	d112      	bne.n	8000386 <main+0x96>
		{
			update = update + 1;
 8000360:	4b1c      	ldr	r3, [pc, #112]	@ (80003d4 <main+0xe4>)
 8000362:	681b      	ldr	r3, [r3, #0]
 8000364:	3301      	adds	r3, #1
 8000366:	4a1b      	ldr	r2, [pc, #108]	@ (80003d4 <main+0xe4>)
 8000368:	6013      	str	r3, [r2, #0]
			printf("update:%d\n",update);
 800036a:	4b1a      	ldr	r3, [pc, #104]	@ (80003d4 <main+0xe4>)
 800036c:	681b      	ldr	r3, [r3, #0]
 800036e:	4619      	mov	r1, r3
 8000370:	4819      	ldr	r0, [pc, #100]	@ (80003d8 <main+0xe8>)
 8000372:	f000 f9e7 	bl	8000744 <iprintf>
			while(!(*GPIOC_IDR & (1<<13)));
 8000376:	bf00      	nop
 8000378:	4b15      	ldr	r3, [pc, #84]	@ (80003d0 <main+0xe0>)
 800037a:	681b      	ldr	r3, [r3, #0]
 800037c:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8000380:	2b00      	cmp	r3, #0
 8000382:	d0f9      	beq.n	8000378 <main+0x88>
 8000384:	e003      	b.n	800038e <main+0x9e>
		}
		else update = update;
 8000386:	4b13      	ldr	r3, [pc, #76]	@ (80003d4 <main+0xe4>)
 8000388:	681b      	ldr	r3, [r3, #0]
 800038a:	4a12      	ldr	r2, [pc, #72]	@ (80003d4 <main+0xe4>)
 800038c:	6013      	str	r3, [r2, #0]

		if(update > 5) update = 1;
 800038e:	4b11      	ldr	r3, [pc, #68]	@ (80003d4 <main+0xe4>)
 8000390:	681b      	ldr	r3, [r3, #0]
 8000392:	2b05      	cmp	r3, #5
 8000394:	dd02      	ble.n	800039c <main+0xac>
 8000396:	4b0f      	ldr	r3, [pc, #60]	@ (80003d4 <main+0xe4>)
 8000398:	2201      	movs	r2, #1
 800039a:	601a      	str	r2, [r3, #0]

		*GPIOA_ODR ^= (1<<5);
 800039c:	4b0f      	ldr	r3, [pc, #60]	@ (80003dc <main+0xec>)
 800039e:	681b      	ldr	r3, [r3, #0]
 80003a0:	4a0e      	ldr	r2, [pc, #56]	@ (80003dc <main+0xec>)
 80003a2:	f083 0320 	eor.w	r3, r3, #32
 80003a6:	6013      	str	r3, [r2, #0]
		delay(update);
 80003a8:	4b0a      	ldr	r3, [pc, #40]	@ (80003d4 <main+0xe4>)
 80003aa:	681b      	ldr	r3, [r3, #0]
 80003ac:	4618      	mov	r0, r3
 80003ae:	f7ff ff7f 	bl	80002b0 <delay>
		if(!(*GPIOC_IDR & (1<<13)))
 80003b2:	e7cf      	b.n	8000354 <main+0x64>
 80003b4:	40023830 	.word	0x40023830
 80003b8:	40020800 	.word	0x40020800
 80003bc:	4002080c 	.word	0x4002080c
 80003c0:	40020000 	.word	0x40020000
 80003c4:	40020004 	.word	0x40020004
 80003c8:	40020008 	.word	0x40020008
 80003cc:	4002000c 	.word	0x4002000c
 80003d0:	40020810 	.word	0x40020810
 80003d4:	20000000 	.word	0x20000000
 80003d8:	0800142c 	.word	0x0800142c
 80003dc:	40020014 	.word	0x40020014

080003e0 <ITM_SendChar>:
/* ITM register addresses */
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 80003e0:	b480      	push	{r7}
 80003e2:	b083      	sub	sp, #12
 80003e4:	af00      	add	r7, sp, #0
 80003e6:	4603      	mov	r3, r0
 80003e8:	71fb      	strb	r3, [r7, #7]

	//Enable TRCENA
	DEMCR |= ( 1 << 24);
 80003ea:	4b0e      	ldr	r3, [pc, #56]	@ (8000424 <ITM_SendChar+0x44>)
 80003ec:	681b      	ldr	r3, [r3, #0]
 80003ee:	4a0d      	ldr	r2, [pc, #52]	@ (8000424 <ITM_SendChar+0x44>)
 80003f0:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 80003f4:	6013      	str	r3, [r2, #0]

	//enable stimulus port 0
	ITM_TRACE_EN |= ( 1 << 0);
 80003f6:	4b0c      	ldr	r3, [pc, #48]	@ (8000428 <ITM_SendChar+0x48>)
 80003f8:	681b      	ldr	r3, [r3, #0]
 80003fa:	4a0b      	ldr	r2, [pc, #44]	@ (8000428 <ITM_SendChar+0x48>)
 80003fc:	f043 0301 	orr.w	r3, r3, #1
 8000400:	6013      	str	r3, [r2, #0]

	// read FIFO status in bit [0]:
	while(!(ITM_STIMULUS_PORT0 & 1));
 8000402:	bf00      	nop
 8000404:	f04f 4360 	mov.w	r3, #3758096384	@ 0xe0000000
 8000408:	681b      	ldr	r3, [r3, #0]
 800040a:	f003 0301 	and.w	r3, r3, #1
 800040e:	2b00      	cmp	r3, #0
 8000410:	d0f8      	beq.n	8000404 <ITM_SendChar+0x24>

	//Write to ITM stimulus port0
	ITM_STIMULUS_PORT0 = ch;
 8000412:	f04f 4260 	mov.w	r2, #3758096384	@ 0xe0000000
 8000416:	79fb      	ldrb	r3, [r7, #7]
 8000418:	6013      	str	r3, [r2, #0]
}
 800041a:	bf00      	nop
 800041c:	370c      	adds	r7, #12
 800041e:	46bd      	mov	sp, r7
 8000420:	bc80      	pop	{r7}
 8000422:	4770      	bx	lr
 8000424:	e000edfc 	.word	0xe000edfc
 8000428:	e0000e00 	.word	0xe0000e00

0800042c <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 800042c:	b580      	push	{r7, lr}
 800042e:	b086      	sub	sp, #24
 8000430:	af00      	add	r7, sp, #0
 8000432:	60f8      	str	r0, [r7, #12]
 8000434:	60b9      	str	r1, [r7, #8]
 8000436:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000438:	2300      	movs	r3, #0
 800043a:	617b      	str	r3, [r7, #20]
 800043c:	e00a      	b.n	8000454 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 800043e:	f3af 8000 	nop.w
 8000442:	4601      	mov	r1, r0
 8000444:	68bb      	ldr	r3, [r7, #8]
 8000446:	1c5a      	adds	r2, r3, #1
 8000448:	60ba      	str	r2, [r7, #8]
 800044a:	b2ca      	uxtb	r2, r1
 800044c:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800044e:	697b      	ldr	r3, [r7, #20]
 8000450:	3301      	adds	r3, #1
 8000452:	617b      	str	r3, [r7, #20]
 8000454:	697a      	ldr	r2, [r7, #20]
 8000456:	687b      	ldr	r3, [r7, #4]
 8000458:	429a      	cmp	r2, r3
 800045a:	dbf0      	blt.n	800043e <_read+0x12>
	}

return len;
 800045c:	687b      	ldr	r3, [r7, #4]
}
 800045e:	4618      	mov	r0, r3
 8000460:	3718      	adds	r7, #24
 8000462:	46bd      	mov	sp, r7
 8000464:	bd80      	pop	{r7, pc}

08000466 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000466:	b580      	push	{r7, lr}
 8000468:	b086      	sub	sp, #24
 800046a:	af00      	add	r7, sp, #0
 800046c:	60f8      	str	r0, [r7, #12]
 800046e:	60b9      	str	r1, [r7, #8]
 8000470:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000472:	2300      	movs	r3, #0
 8000474:	617b      	str	r3, [r7, #20]
 8000476:	e009      	b.n	800048c <_write+0x26>
	{
//		__io_putchar(*ptr++);
		ITM_SendChar(*ptr++);
 8000478:	68bb      	ldr	r3, [r7, #8]
 800047a:	1c5a      	adds	r2, r3, #1
 800047c:	60ba      	str	r2, [r7, #8]
 800047e:	781b      	ldrb	r3, [r3, #0]
 8000480:	4618      	mov	r0, r3
 8000482:	f7ff ffad 	bl	80003e0 <ITM_SendChar>
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000486:	697b      	ldr	r3, [r7, #20]
 8000488:	3301      	adds	r3, #1
 800048a:	617b      	str	r3, [r7, #20]
 800048c:	697a      	ldr	r2, [r7, #20]
 800048e:	687b      	ldr	r3, [r7, #4]
 8000490:	429a      	cmp	r2, r3
 8000492:	dbf1      	blt.n	8000478 <_write+0x12>
	}
	return len;
 8000494:	687b      	ldr	r3, [r7, #4]
}
 8000496:	4618      	mov	r0, r3
 8000498:	3718      	adds	r7, #24
 800049a:	46bd      	mov	sp, r7
 800049c:	bd80      	pop	{r7, pc}

0800049e <_close>:

int _close(int file)
{
 800049e:	b480      	push	{r7}
 80004a0:	b083      	sub	sp, #12
 80004a2:	af00      	add	r7, sp, #0
 80004a4:	6078      	str	r0, [r7, #4]
	return -1;
 80004a6:	f04f 33ff 	mov.w	r3, #4294967295
}
 80004aa:	4618      	mov	r0, r3
 80004ac:	370c      	adds	r7, #12
 80004ae:	46bd      	mov	sp, r7
 80004b0:	bc80      	pop	{r7}
 80004b2:	4770      	bx	lr

080004b4 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80004b4:	b480      	push	{r7}
 80004b6:	b083      	sub	sp, #12
 80004b8:	af00      	add	r7, sp, #0
 80004ba:	6078      	str	r0, [r7, #4]
 80004bc:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 80004be:	683b      	ldr	r3, [r7, #0]
 80004c0:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 80004c4:	605a      	str	r2, [r3, #4]
	return 0;
 80004c6:	2300      	movs	r3, #0
}
 80004c8:	4618      	mov	r0, r3
 80004ca:	370c      	adds	r7, #12
 80004cc:	46bd      	mov	sp, r7
 80004ce:	bc80      	pop	{r7}
 80004d0:	4770      	bx	lr

080004d2 <_isatty>:

int _isatty(int file)
{
 80004d2:	b480      	push	{r7}
 80004d4:	b083      	sub	sp, #12
 80004d6:	af00      	add	r7, sp, #0
 80004d8:	6078      	str	r0, [r7, #4]
	return 1;
 80004da:	2301      	movs	r3, #1
}
 80004dc:	4618      	mov	r0, r3
 80004de:	370c      	adds	r7, #12
 80004e0:	46bd      	mov	sp, r7
 80004e2:	bc80      	pop	{r7}
 80004e4:	4770      	bx	lr

080004e6 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80004e6:	b480      	push	{r7}
 80004e8:	b085      	sub	sp, #20
 80004ea:	af00      	add	r7, sp, #0
 80004ec:	60f8      	str	r0, [r7, #12]
 80004ee:	60b9      	str	r1, [r7, #8]
 80004f0:	607a      	str	r2, [r7, #4]
	return 0;
 80004f2:	2300      	movs	r3, #0
}
 80004f4:	4618      	mov	r0, r3
 80004f6:	3714      	adds	r7, #20
 80004f8:	46bd      	mov	sp, r7
 80004fa:	bc80      	pop	{r7}
 80004fc:	4770      	bx	lr
	...

08000500 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000500:	b580      	push	{r7, lr}
 8000502:	b086      	sub	sp, #24
 8000504:	af00      	add	r7, sp, #0
 8000506:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000508:	4a14      	ldr	r2, [pc, #80]	@ (800055c <_sbrk+0x5c>)
 800050a:	4b15      	ldr	r3, [pc, #84]	@ (8000560 <_sbrk+0x60>)
 800050c:	1ad3      	subs	r3, r2, r3
 800050e:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000510:	697b      	ldr	r3, [r7, #20]
 8000512:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000514:	4b13      	ldr	r3, [pc, #76]	@ (8000564 <_sbrk+0x64>)
 8000516:	681b      	ldr	r3, [r3, #0]
 8000518:	2b00      	cmp	r3, #0
 800051a:	d102      	bne.n	8000522 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 800051c:	4b11      	ldr	r3, [pc, #68]	@ (8000564 <_sbrk+0x64>)
 800051e:	4a12      	ldr	r2, [pc, #72]	@ (8000568 <_sbrk+0x68>)
 8000520:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000522:	4b10      	ldr	r3, [pc, #64]	@ (8000564 <_sbrk+0x64>)
 8000524:	681a      	ldr	r2, [r3, #0]
 8000526:	687b      	ldr	r3, [r7, #4]
 8000528:	4413      	add	r3, r2
 800052a:	693a      	ldr	r2, [r7, #16]
 800052c:	429a      	cmp	r2, r3
 800052e:	d207      	bcs.n	8000540 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000530:	f000 f9ac 	bl	800088c <__errno>
 8000534:	4603      	mov	r3, r0
 8000536:	220c      	movs	r2, #12
 8000538:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800053a:	f04f 33ff 	mov.w	r3, #4294967295
 800053e:	e009      	b.n	8000554 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000540:	4b08      	ldr	r3, [pc, #32]	@ (8000564 <_sbrk+0x64>)
 8000542:	681b      	ldr	r3, [r3, #0]
 8000544:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8000546:	4b07      	ldr	r3, [pc, #28]	@ (8000564 <_sbrk+0x64>)
 8000548:	681a      	ldr	r2, [r3, #0]
 800054a:	687b      	ldr	r3, [r7, #4]
 800054c:	4413      	add	r3, r2
 800054e:	4a05      	ldr	r2, [pc, #20]	@ (8000564 <_sbrk+0x64>)
 8000550:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8000552:	68fb      	ldr	r3, [r7, #12]
}
 8000554:	4618      	mov	r0, r3
 8000556:	3718      	adds	r7, #24
 8000558:	46bd      	mov	sp, r7
 800055a:	bd80      	pop	{r7, pc}
 800055c:	20020000 	.word	0x20020000
 8000560:	00000400 	.word	0x00000400
 8000564:	2000007c 	.word	0x2000007c
 8000568:	200001d0 	.word	0x200001d0

0800056c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800056c:	480d      	ldr	r0, [pc, #52]	@ (80005a4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800056e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000570:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000574:	480c      	ldr	r0, [pc, #48]	@ (80005a8 <LoopForever+0x6>)
  ldr r1, =_edata
 8000576:	490d      	ldr	r1, [pc, #52]	@ (80005ac <LoopForever+0xa>)
  ldr r2, =_sidata
 8000578:	4a0d      	ldr	r2, [pc, #52]	@ (80005b0 <LoopForever+0xe>)
  movs r3, #0
 800057a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800057c:	e002      	b.n	8000584 <LoopCopyDataInit>

0800057e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800057e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000580:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000582:	3304      	adds	r3, #4

08000584 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000584:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000586:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000588:	d3f9      	bcc.n	800057e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800058a:	4a0a      	ldr	r2, [pc, #40]	@ (80005b4 <LoopForever+0x12>)
  ldr r4, =_ebss
 800058c:	4c0a      	ldr	r4, [pc, #40]	@ (80005b8 <LoopForever+0x16>)
  movs r3, #0
 800058e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000590:	e001      	b.n	8000596 <LoopFillZerobss>

08000592 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000592:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000594:	3204      	adds	r2, #4

08000596 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000596:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000598:	d3fb      	bcc.n	8000592 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800059a:	f000 f97d 	bl	8000898 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800059e:	f7ff fea7 	bl	80002f0 <main>

080005a2 <LoopForever>:

LoopForever:
  b LoopForever
 80005a2:	e7fe      	b.n	80005a2 <LoopForever>
  ldr   r0, =_estack
 80005a4:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80005a8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80005ac:	20000060 	.word	0x20000060
  ldr r2, =_sidata
 80005b0:	0800147c 	.word	0x0800147c
  ldr r2, =_sbss
 80005b4:	20000060 	.word	0x20000060
  ldr r4, =_ebss
 80005b8:	200001cc 	.word	0x200001cc

080005bc <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80005bc:	e7fe      	b.n	80005bc <ADC_IRQHandler>
	...

080005c0 <std>:
 80005c0:	2300      	movs	r3, #0
 80005c2:	b510      	push	{r4, lr}
 80005c4:	4604      	mov	r4, r0
 80005c6:	e9c0 3300 	strd	r3, r3, [r0]
 80005ca:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80005ce:	6083      	str	r3, [r0, #8]
 80005d0:	8181      	strh	r1, [r0, #12]
 80005d2:	6643      	str	r3, [r0, #100]	@ 0x64
 80005d4:	81c2      	strh	r2, [r0, #14]
 80005d6:	6183      	str	r3, [r0, #24]
 80005d8:	4619      	mov	r1, r3
 80005da:	2208      	movs	r2, #8
 80005dc:	305c      	adds	r0, #92	@ 0x5c
 80005de:	f000 f906 	bl	80007ee <memset>
 80005e2:	4b0d      	ldr	r3, [pc, #52]	@ (8000618 <std+0x58>)
 80005e4:	6263      	str	r3, [r4, #36]	@ 0x24
 80005e6:	4b0d      	ldr	r3, [pc, #52]	@ (800061c <std+0x5c>)
 80005e8:	62a3      	str	r3, [r4, #40]	@ 0x28
 80005ea:	4b0d      	ldr	r3, [pc, #52]	@ (8000620 <std+0x60>)
 80005ec:	62e3      	str	r3, [r4, #44]	@ 0x2c
 80005ee:	4b0d      	ldr	r3, [pc, #52]	@ (8000624 <std+0x64>)
 80005f0:	6323      	str	r3, [r4, #48]	@ 0x30
 80005f2:	4b0d      	ldr	r3, [pc, #52]	@ (8000628 <std+0x68>)
 80005f4:	6224      	str	r4, [r4, #32]
 80005f6:	429c      	cmp	r4, r3
 80005f8:	d006      	beq.n	8000608 <std+0x48>
 80005fa:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 80005fe:	4294      	cmp	r4, r2
 8000600:	d002      	beq.n	8000608 <std+0x48>
 8000602:	33d0      	adds	r3, #208	@ 0xd0
 8000604:	429c      	cmp	r4, r3
 8000606:	d105      	bne.n	8000614 <std+0x54>
 8000608:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 800060c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000610:	f000 b966 	b.w	80008e0 <__retarget_lock_init_recursive>
 8000614:	bd10      	pop	{r4, pc}
 8000616:	bf00      	nop
 8000618:	08000769 	.word	0x08000769
 800061c:	0800078b 	.word	0x0800078b
 8000620:	080007c3 	.word	0x080007c3
 8000624:	080007e7 	.word	0x080007e7
 8000628:	20000080 	.word	0x20000080

0800062c <stdio_exit_handler>:
 800062c:	4a02      	ldr	r2, [pc, #8]	@ (8000638 <stdio_exit_handler+0xc>)
 800062e:	4903      	ldr	r1, [pc, #12]	@ (800063c <stdio_exit_handler+0x10>)
 8000630:	4803      	ldr	r0, [pc, #12]	@ (8000640 <stdio_exit_handler+0x14>)
 8000632:	f000 b869 	b.w	8000708 <_fwalk_sglue>
 8000636:	bf00      	nop
 8000638:	20000004 	.word	0x20000004
 800063c:	08001175 	.word	0x08001175
 8000640:	20000014 	.word	0x20000014

08000644 <cleanup_stdio>:
 8000644:	6841      	ldr	r1, [r0, #4]
 8000646:	4b0c      	ldr	r3, [pc, #48]	@ (8000678 <cleanup_stdio+0x34>)
 8000648:	4299      	cmp	r1, r3
 800064a:	b510      	push	{r4, lr}
 800064c:	4604      	mov	r4, r0
 800064e:	d001      	beq.n	8000654 <cleanup_stdio+0x10>
 8000650:	f000 fd90 	bl	8001174 <_fflush_r>
 8000654:	68a1      	ldr	r1, [r4, #8]
 8000656:	4b09      	ldr	r3, [pc, #36]	@ (800067c <cleanup_stdio+0x38>)
 8000658:	4299      	cmp	r1, r3
 800065a:	d002      	beq.n	8000662 <cleanup_stdio+0x1e>
 800065c:	4620      	mov	r0, r4
 800065e:	f000 fd89 	bl	8001174 <_fflush_r>
 8000662:	68e1      	ldr	r1, [r4, #12]
 8000664:	4b06      	ldr	r3, [pc, #24]	@ (8000680 <cleanup_stdio+0x3c>)
 8000666:	4299      	cmp	r1, r3
 8000668:	d004      	beq.n	8000674 <cleanup_stdio+0x30>
 800066a:	4620      	mov	r0, r4
 800066c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000670:	f000 bd80 	b.w	8001174 <_fflush_r>
 8000674:	bd10      	pop	{r4, pc}
 8000676:	bf00      	nop
 8000678:	20000080 	.word	0x20000080
 800067c:	200000e8 	.word	0x200000e8
 8000680:	20000150 	.word	0x20000150

08000684 <global_stdio_init.part.0>:
 8000684:	b510      	push	{r4, lr}
 8000686:	4b0b      	ldr	r3, [pc, #44]	@ (80006b4 <global_stdio_init.part.0+0x30>)
 8000688:	4c0b      	ldr	r4, [pc, #44]	@ (80006b8 <global_stdio_init.part.0+0x34>)
 800068a:	4a0c      	ldr	r2, [pc, #48]	@ (80006bc <global_stdio_init.part.0+0x38>)
 800068c:	601a      	str	r2, [r3, #0]
 800068e:	4620      	mov	r0, r4
 8000690:	2200      	movs	r2, #0
 8000692:	2104      	movs	r1, #4
 8000694:	f7ff ff94 	bl	80005c0 <std>
 8000698:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 800069c:	2201      	movs	r2, #1
 800069e:	2109      	movs	r1, #9
 80006a0:	f7ff ff8e 	bl	80005c0 <std>
 80006a4:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 80006a8:	2202      	movs	r2, #2
 80006aa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80006ae:	2112      	movs	r1, #18
 80006b0:	f7ff bf86 	b.w	80005c0 <std>
 80006b4:	200001b8 	.word	0x200001b8
 80006b8:	20000080 	.word	0x20000080
 80006bc:	0800062d 	.word	0x0800062d

080006c0 <__sfp_lock_acquire>:
 80006c0:	4801      	ldr	r0, [pc, #4]	@ (80006c8 <__sfp_lock_acquire+0x8>)
 80006c2:	f000 b90e 	b.w	80008e2 <__retarget_lock_acquire_recursive>
 80006c6:	bf00      	nop
 80006c8:	200001c1 	.word	0x200001c1

080006cc <__sfp_lock_release>:
 80006cc:	4801      	ldr	r0, [pc, #4]	@ (80006d4 <__sfp_lock_release+0x8>)
 80006ce:	f000 b909 	b.w	80008e4 <__retarget_lock_release_recursive>
 80006d2:	bf00      	nop
 80006d4:	200001c1 	.word	0x200001c1

080006d8 <__sinit>:
 80006d8:	b510      	push	{r4, lr}
 80006da:	4604      	mov	r4, r0
 80006dc:	f7ff fff0 	bl	80006c0 <__sfp_lock_acquire>
 80006e0:	6a23      	ldr	r3, [r4, #32]
 80006e2:	b11b      	cbz	r3, 80006ec <__sinit+0x14>
 80006e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80006e8:	f7ff bff0 	b.w	80006cc <__sfp_lock_release>
 80006ec:	4b04      	ldr	r3, [pc, #16]	@ (8000700 <__sinit+0x28>)
 80006ee:	6223      	str	r3, [r4, #32]
 80006f0:	4b04      	ldr	r3, [pc, #16]	@ (8000704 <__sinit+0x2c>)
 80006f2:	681b      	ldr	r3, [r3, #0]
 80006f4:	2b00      	cmp	r3, #0
 80006f6:	d1f5      	bne.n	80006e4 <__sinit+0xc>
 80006f8:	f7ff ffc4 	bl	8000684 <global_stdio_init.part.0>
 80006fc:	e7f2      	b.n	80006e4 <__sinit+0xc>
 80006fe:	bf00      	nop
 8000700:	08000645 	.word	0x08000645
 8000704:	200001b8 	.word	0x200001b8

08000708 <_fwalk_sglue>:
 8000708:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800070c:	4607      	mov	r7, r0
 800070e:	4688      	mov	r8, r1
 8000710:	4614      	mov	r4, r2
 8000712:	2600      	movs	r6, #0
 8000714:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000718:	f1b9 0901 	subs.w	r9, r9, #1
 800071c:	d505      	bpl.n	800072a <_fwalk_sglue+0x22>
 800071e:	6824      	ldr	r4, [r4, #0]
 8000720:	2c00      	cmp	r4, #0
 8000722:	d1f7      	bne.n	8000714 <_fwalk_sglue+0xc>
 8000724:	4630      	mov	r0, r6
 8000726:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800072a:	89ab      	ldrh	r3, [r5, #12]
 800072c:	2b01      	cmp	r3, #1
 800072e:	d907      	bls.n	8000740 <_fwalk_sglue+0x38>
 8000730:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000734:	3301      	adds	r3, #1
 8000736:	d003      	beq.n	8000740 <_fwalk_sglue+0x38>
 8000738:	4629      	mov	r1, r5
 800073a:	4638      	mov	r0, r7
 800073c:	47c0      	blx	r8
 800073e:	4306      	orrs	r6, r0
 8000740:	3568      	adds	r5, #104	@ 0x68
 8000742:	e7e9      	b.n	8000718 <_fwalk_sglue+0x10>

08000744 <iprintf>:
 8000744:	b40f      	push	{r0, r1, r2, r3}
 8000746:	b507      	push	{r0, r1, r2, lr}
 8000748:	4906      	ldr	r1, [pc, #24]	@ (8000764 <iprintf+0x20>)
 800074a:	ab04      	add	r3, sp, #16
 800074c:	6808      	ldr	r0, [r1, #0]
 800074e:	f853 2b04 	ldr.w	r2, [r3], #4
 8000752:	6881      	ldr	r1, [r0, #8]
 8000754:	9301      	str	r3, [sp, #4]
 8000756:	f000 f9e7 	bl	8000b28 <_vfiprintf_r>
 800075a:	b003      	add	sp, #12
 800075c:	f85d eb04 	ldr.w	lr, [sp], #4
 8000760:	b004      	add	sp, #16
 8000762:	4770      	bx	lr
 8000764:	20000010 	.word	0x20000010

08000768 <__sread>:
 8000768:	b510      	push	{r4, lr}
 800076a:	460c      	mov	r4, r1
 800076c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000770:	f000 f868 	bl	8000844 <_read_r>
 8000774:	2800      	cmp	r0, #0
 8000776:	bfab      	itete	ge
 8000778:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 800077a:	89a3      	ldrhlt	r3, [r4, #12]
 800077c:	181b      	addge	r3, r3, r0
 800077e:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8000782:	bfac      	ite	ge
 8000784:	6563      	strge	r3, [r4, #84]	@ 0x54
 8000786:	81a3      	strhlt	r3, [r4, #12]
 8000788:	bd10      	pop	{r4, pc}

0800078a <__swrite>:
 800078a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800078e:	461f      	mov	r7, r3
 8000790:	898b      	ldrh	r3, [r1, #12]
 8000792:	05db      	lsls	r3, r3, #23
 8000794:	4605      	mov	r5, r0
 8000796:	460c      	mov	r4, r1
 8000798:	4616      	mov	r6, r2
 800079a:	d505      	bpl.n	80007a8 <__swrite+0x1e>
 800079c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80007a0:	2302      	movs	r3, #2
 80007a2:	2200      	movs	r2, #0
 80007a4:	f000 f83c 	bl	8000820 <_lseek_r>
 80007a8:	89a3      	ldrh	r3, [r4, #12]
 80007aa:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80007ae:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 80007b2:	81a3      	strh	r3, [r4, #12]
 80007b4:	4632      	mov	r2, r6
 80007b6:	463b      	mov	r3, r7
 80007b8:	4628      	mov	r0, r5
 80007ba:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80007be:	f000 b853 	b.w	8000868 <_write_r>

080007c2 <__sseek>:
 80007c2:	b510      	push	{r4, lr}
 80007c4:	460c      	mov	r4, r1
 80007c6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80007ca:	f000 f829 	bl	8000820 <_lseek_r>
 80007ce:	1c43      	adds	r3, r0, #1
 80007d0:	89a3      	ldrh	r3, [r4, #12]
 80007d2:	bf15      	itete	ne
 80007d4:	6560      	strne	r0, [r4, #84]	@ 0x54
 80007d6:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 80007da:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 80007de:	81a3      	strheq	r3, [r4, #12]
 80007e0:	bf18      	it	ne
 80007e2:	81a3      	strhne	r3, [r4, #12]
 80007e4:	bd10      	pop	{r4, pc}

080007e6 <__sclose>:
 80007e6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80007ea:	f000 b809 	b.w	8000800 <_close_r>

080007ee <memset>:
 80007ee:	4402      	add	r2, r0
 80007f0:	4603      	mov	r3, r0
 80007f2:	4293      	cmp	r3, r2
 80007f4:	d100      	bne.n	80007f8 <memset+0xa>
 80007f6:	4770      	bx	lr
 80007f8:	f803 1b01 	strb.w	r1, [r3], #1
 80007fc:	e7f9      	b.n	80007f2 <memset+0x4>
	...

08000800 <_close_r>:
 8000800:	b538      	push	{r3, r4, r5, lr}
 8000802:	4d06      	ldr	r5, [pc, #24]	@ (800081c <_close_r+0x1c>)
 8000804:	2300      	movs	r3, #0
 8000806:	4604      	mov	r4, r0
 8000808:	4608      	mov	r0, r1
 800080a:	602b      	str	r3, [r5, #0]
 800080c:	f7ff fe47 	bl	800049e <_close>
 8000810:	1c43      	adds	r3, r0, #1
 8000812:	d102      	bne.n	800081a <_close_r+0x1a>
 8000814:	682b      	ldr	r3, [r5, #0]
 8000816:	b103      	cbz	r3, 800081a <_close_r+0x1a>
 8000818:	6023      	str	r3, [r4, #0]
 800081a:	bd38      	pop	{r3, r4, r5, pc}
 800081c:	200001bc 	.word	0x200001bc

08000820 <_lseek_r>:
 8000820:	b538      	push	{r3, r4, r5, lr}
 8000822:	4d07      	ldr	r5, [pc, #28]	@ (8000840 <_lseek_r+0x20>)
 8000824:	4604      	mov	r4, r0
 8000826:	4608      	mov	r0, r1
 8000828:	4611      	mov	r1, r2
 800082a:	2200      	movs	r2, #0
 800082c:	602a      	str	r2, [r5, #0]
 800082e:	461a      	mov	r2, r3
 8000830:	f7ff fe59 	bl	80004e6 <_lseek>
 8000834:	1c43      	adds	r3, r0, #1
 8000836:	d102      	bne.n	800083e <_lseek_r+0x1e>
 8000838:	682b      	ldr	r3, [r5, #0]
 800083a:	b103      	cbz	r3, 800083e <_lseek_r+0x1e>
 800083c:	6023      	str	r3, [r4, #0]
 800083e:	bd38      	pop	{r3, r4, r5, pc}
 8000840:	200001bc 	.word	0x200001bc

08000844 <_read_r>:
 8000844:	b538      	push	{r3, r4, r5, lr}
 8000846:	4d07      	ldr	r5, [pc, #28]	@ (8000864 <_read_r+0x20>)
 8000848:	4604      	mov	r4, r0
 800084a:	4608      	mov	r0, r1
 800084c:	4611      	mov	r1, r2
 800084e:	2200      	movs	r2, #0
 8000850:	602a      	str	r2, [r5, #0]
 8000852:	461a      	mov	r2, r3
 8000854:	f7ff fdea 	bl	800042c <_read>
 8000858:	1c43      	adds	r3, r0, #1
 800085a:	d102      	bne.n	8000862 <_read_r+0x1e>
 800085c:	682b      	ldr	r3, [r5, #0]
 800085e:	b103      	cbz	r3, 8000862 <_read_r+0x1e>
 8000860:	6023      	str	r3, [r4, #0]
 8000862:	bd38      	pop	{r3, r4, r5, pc}
 8000864:	200001bc 	.word	0x200001bc

08000868 <_write_r>:
 8000868:	b538      	push	{r3, r4, r5, lr}
 800086a:	4d07      	ldr	r5, [pc, #28]	@ (8000888 <_write_r+0x20>)
 800086c:	4604      	mov	r4, r0
 800086e:	4608      	mov	r0, r1
 8000870:	4611      	mov	r1, r2
 8000872:	2200      	movs	r2, #0
 8000874:	602a      	str	r2, [r5, #0]
 8000876:	461a      	mov	r2, r3
 8000878:	f7ff fdf5 	bl	8000466 <_write>
 800087c:	1c43      	adds	r3, r0, #1
 800087e:	d102      	bne.n	8000886 <_write_r+0x1e>
 8000880:	682b      	ldr	r3, [r5, #0]
 8000882:	b103      	cbz	r3, 8000886 <_write_r+0x1e>
 8000884:	6023      	str	r3, [r4, #0]
 8000886:	bd38      	pop	{r3, r4, r5, pc}
 8000888:	200001bc 	.word	0x200001bc

0800088c <__errno>:
 800088c:	4b01      	ldr	r3, [pc, #4]	@ (8000894 <__errno+0x8>)
 800088e:	6818      	ldr	r0, [r3, #0]
 8000890:	4770      	bx	lr
 8000892:	bf00      	nop
 8000894:	20000010 	.word	0x20000010

08000898 <__libc_init_array>:
 8000898:	b570      	push	{r4, r5, r6, lr}
 800089a:	4d0d      	ldr	r5, [pc, #52]	@ (80008d0 <__libc_init_array+0x38>)
 800089c:	4c0d      	ldr	r4, [pc, #52]	@ (80008d4 <__libc_init_array+0x3c>)
 800089e:	1b64      	subs	r4, r4, r5
 80008a0:	10a4      	asrs	r4, r4, #2
 80008a2:	2600      	movs	r6, #0
 80008a4:	42a6      	cmp	r6, r4
 80008a6:	d109      	bne.n	80008bc <__libc_init_array+0x24>
 80008a8:	4d0b      	ldr	r5, [pc, #44]	@ (80008d8 <__libc_init_array+0x40>)
 80008aa:	4c0c      	ldr	r4, [pc, #48]	@ (80008dc <__libc_init_array+0x44>)
 80008ac:	f000 fdb2 	bl	8001414 <_init>
 80008b0:	1b64      	subs	r4, r4, r5
 80008b2:	10a4      	asrs	r4, r4, #2
 80008b4:	2600      	movs	r6, #0
 80008b6:	42a6      	cmp	r6, r4
 80008b8:	d105      	bne.n	80008c6 <__libc_init_array+0x2e>
 80008ba:	bd70      	pop	{r4, r5, r6, pc}
 80008bc:	f855 3b04 	ldr.w	r3, [r5], #4
 80008c0:	4798      	blx	r3
 80008c2:	3601      	adds	r6, #1
 80008c4:	e7ee      	b.n	80008a4 <__libc_init_array+0xc>
 80008c6:	f855 3b04 	ldr.w	r3, [r5], #4
 80008ca:	4798      	blx	r3
 80008cc:	3601      	adds	r6, #1
 80008ce:	e7f2      	b.n	80008b6 <__libc_init_array+0x1e>
 80008d0:	08001474 	.word	0x08001474
 80008d4:	08001474 	.word	0x08001474
 80008d8:	08001474 	.word	0x08001474
 80008dc:	08001478 	.word	0x08001478

080008e0 <__retarget_lock_init_recursive>:
 80008e0:	4770      	bx	lr

080008e2 <__retarget_lock_acquire_recursive>:
 80008e2:	4770      	bx	lr

080008e4 <__retarget_lock_release_recursive>:
 80008e4:	4770      	bx	lr
	...

080008e8 <_free_r>:
 80008e8:	b538      	push	{r3, r4, r5, lr}
 80008ea:	4605      	mov	r5, r0
 80008ec:	2900      	cmp	r1, #0
 80008ee:	d041      	beq.n	8000974 <_free_r+0x8c>
 80008f0:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80008f4:	1f0c      	subs	r4, r1, #4
 80008f6:	2b00      	cmp	r3, #0
 80008f8:	bfb8      	it	lt
 80008fa:	18e4      	addlt	r4, r4, r3
 80008fc:	f000 f8e0 	bl	8000ac0 <__malloc_lock>
 8000900:	4a1d      	ldr	r2, [pc, #116]	@ (8000978 <_free_r+0x90>)
 8000902:	6813      	ldr	r3, [r2, #0]
 8000904:	b933      	cbnz	r3, 8000914 <_free_r+0x2c>
 8000906:	6063      	str	r3, [r4, #4]
 8000908:	6014      	str	r4, [r2, #0]
 800090a:	4628      	mov	r0, r5
 800090c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000910:	f000 b8dc 	b.w	8000acc <__malloc_unlock>
 8000914:	42a3      	cmp	r3, r4
 8000916:	d908      	bls.n	800092a <_free_r+0x42>
 8000918:	6820      	ldr	r0, [r4, #0]
 800091a:	1821      	adds	r1, r4, r0
 800091c:	428b      	cmp	r3, r1
 800091e:	bf01      	itttt	eq
 8000920:	6819      	ldreq	r1, [r3, #0]
 8000922:	685b      	ldreq	r3, [r3, #4]
 8000924:	1809      	addeq	r1, r1, r0
 8000926:	6021      	streq	r1, [r4, #0]
 8000928:	e7ed      	b.n	8000906 <_free_r+0x1e>
 800092a:	461a      	mov	r2, r3
 800092c:	685b      	ldr	r3, [r3, #4]
 800092e:	b10b      	cbz	r3, 8000934 <_free_r+0x4c>
 8000930:	42a3      	cmp	r3, r4
 8000932:	d9fa      	bls.n	800092a <_free_r+0x42>
 8000934:	6811      	ldr	r1, [r2, #0]
 8000936:	1850      	adds	r0, r2, r1
 8000938:	42a0      	cmp	r0, r4
 800093a:	d10b      	bne.n	8000954 <_free_r+0x6c>
 800093c:	6820      	ldr	r0, [r4, #0]
 800093e:	4401      	add	r1, r0
 8000940:	1850      	adds	r0, r2, r1
 8000942:	4283      	cmp	r3, r0
 8000944:	6011      	str	r1, [r2, #0]
 8000946:	d1e0      	bne.n	800090a <_free_r+0x22>
 8000948:	6818      	ldr	r0, [r3, #0]
 800094a:	685b      	ldr	r3, [r3, #4]
 800094c:	6053      	str	r3, [r2, #4]
 800094e:	4408      	add	r0, r1
 8000950:	6010      	str	r0, [r2, #0]
 8000952:	e7da      	b.n	800090a <_free_r+0x22>
 8000954:	d902      	bls.n	800095c <_free_r+0x74>
 8000956:	230c      	movs	r3, #12
 8000958:	602b      	str	r3, [r5, #0]
 800095a:	e7d6      	b.n	800090a <_free_r+0x22>
 800095c:	6820      	ldr	r0, [r4, #0]
 800095e:	1821      	adds	r1, r4, r0
 8000960:	428b      	cmp	r3, r1
 8000962:	bf04      	itt	eq
 8000964:	6819      	ldreq	r1, [r3, #0]
 8000966:	685b      	ldreq	r3, [r3, #4]
 8000968:	6063      	str	r3, [r4, #4]
 800096a:	bf04      	itt	eq
 800096c:	1809      	addeq	r1, r1, r0
 800096e:	6021      	streq	r1, [r4, #0]
 8000970:	6054      	str	r4, [r2, #4]
 8000972:	e7ca      	b.n	800090a <_free_r+0x22>
 8000974:	bd38      	pop	{r3, r4, r5, pc}
 8000976:	bf00      	nop
 8000978:	200001c8 	.word	0x200001c8

0800097c <sbrk_aligned>:
 800097c:	b570      	push	{r4, r5, r6, lr}
 800097e:	4e0f      	ldr	r6, [pc, #60]	@ (80009bc <sbrk_aligned+0x40>)
 8000980:	460c      	mov	r4, r1
 8000982:	6831      	ldr	r1, [r6, #0]
 8000984:	4605      	mov	r5, r0
 8000986:	b911      	cbnz	r1, 800098e <sbrk_aligned+0x12>
 8000988:	f000 fcb0 	bl	80012ec <_sbrk_r>
 800098c:	6030      	str	r0, [r6, #0]
 800098e:	4621      	mov	r1, r4
 8000990:	4628      	mov	r0, r5
 8000992:	f000 fcab 	bl	80012ec <_sbrk_r>
 8000996:	1c43      	adds	r3, r0, #1
 8000998:	d103      	bne.n	80009a2 <sbrk_aligned+0x26>
 800099a:	f04f 34ff 	mov.w	r4, #4294967295
 800099e:	4620      	mov	r0, r4
 80009a0:	bd70      	pop	{r4, r5, r6, pc}
 80009a2:	1cc4      	adds	r4, r0, #3
 80009a4:	f024 0403 	bic.w	r4, r4, #3
 80009a8:	42a0      	cmp	r0, r4
 80009aa:	d0f8      	beq.n	800099e <sbrk_aligned+0x22>
 80009ac:	1a21      	subs	r1, r4, r0
 80009ae:	4628      	mov	r0, r5
 80009b0:	f000 fc9c 	bl	80012ec <_sbrk_r>
 80009b4:	3001      	adds	r0, #1
 80009b6:	d1f2      	bne.n	800099e <sbrk_aligned+0x22>
 80009b8:	e7ef      	b.n	800099a <sbrk_aligned+0x1e>
 80009ba:	bf00      	nop
 80009bc:	200001c4 	.word	0x200001c4

080009c0 <_malloc_r>:
 80009c0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80009c4:	1ccd      	adds	r5, r1, #3
 80009c6:	f025 0503 	bic.w	r5, r5, #3
 80009ca:	3508      	adds	r5, #8
 80009cc:	2d0c      	cmp	r5, #12
 80009ce:	bf38      	it	cc
 80009d0:	250c      	movcc	r5, #12
 80009d2:	2d00      	cmp	r5, #0
 80009d4:	4606      	mov	r6, r0
 80009d6:	db01      	blt.n	80009dc <_malloc_r+0x1c>
 80009d8:	42a9      	cmp	r1, r5
 80009da:	d904      	bls.n	80009e6 <_malloc_r+0x26>
 80009dc:	230c      	movs	r3, #12
 80009de:	6033      	str	r3, [r6, #0]
 80009e0:	2000      	movs	r0, #0
 80009e2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80009e6:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8000abc <_malloc_r+0xfc>
 80009ea:	f000 f869 	bl	8000ac0 <__malloc_lock>
 80009ee:	f8d8 3000 	ldr.w	r3, [r8]
 80009f2:	461c      	mov	r4, r3
 80009f4:	bb44      	cbnz	r4, 8000a48 <_malloc_r+0x88>
 80009f6:	4629      	mov	r1, r5
 80009f8:	4630      	mov	r0, r6
 80009fa:	f7ff ffbf 	bl	800097c <sbrk_aligned>
 80009fe:	1c43      	adds	r3, r0, #1
 8000a00:	4604      	mov	r4, r0
 8000a02:	d158      	bne.n	8000ab6 <_malloc_r+0xf6>
 8000a04:	f8d8 4000 	ldr.w	r4, [r8]
 8000a08:	4627      	mov	r7, r4
 8000a0a:	2f00      	cmp	r7, #0
 8000a0c:	d143      	bne.n	8000a96 <_malloc_r+0xd6>
 8000a0e:	2c00      	cmp	r4, #0
 8000a10:	d04b      	beq.n	8000aaa <_malloc_r+0xea>
 8000a12:	6823      	ldr	r3, [r4, #0]
 8000a14:	4639      	mov	r1, r7
 8000a16:	4630      	mov	r0, r6
 8000a18:	eb04 0903 	add.w	r9, r4, r3
 8000a1c:	f000 fc66 	bl	80012ec <_sbrk_r>
 8000a20:	4581      	cmp	r9, r0
 8000a22:	d142      	bne.n	8000aaa <_malloc_r+0xea>
 8000a24:	6821      	ldr	r1, [r4, #0]
 8000a26:	1a6d      	subs	r5, r5, r1
 8000a28:	4629      	mov	r1, r5
 8000a2a:	4630      	mov	r0, r6
 8000a2c:	f7ff ffa6 	bl	800097c <sbrk_aligned>
 8000a30:	3001      	adds	r0, #1
 8000a32:	d03a      	beq.n	8000aaa <_malloc_r+0xea>
 8000a34:	6823      	ldr	r3, [r4, #0]
 8000a36:	442b      	add	r3, r5
 8000a38:	6023      	str	r3, [r4, #0]
 8000a3a:	f8d8 3000 	ldr.w	r3, [r8]
 8000a3e:	685a      	ldr	r2, [r3, #4]
 8000a40:	bb62      	cbnz	r2, 8000a9c <_malloc_r+0xdc>
 8000a42:	f8c8 7000 	str.w	r7, [r8]
 8000a46:	e00f      	b.n	8000a68 <_malloc_r+0xa8>
 8000a48:	6822      	ldr	r2, [r4, #0]
 8000a4a:	1b52      	subs	r2, r2, r5
 8000a4c:	d420      	bmi.n	8000a90 <_malloc_r+0xd0>
 8000a4e:	2a0b      	cmp	r2, #11
 8000a50:	d917      	bls.n	8000a82 <_malloc_r+0xc2>
 8000a52:	1961      	adds	r1, r4, r5
 8000a54:	42a3      	cmp	r3, r4
 8000a56:	6025      	str	r5, [r4, #0]
 8000a58:	bf18      	it	ne
 8000a5a:	6059      	strne	r1, [r3, #4]
 8000a5c:	6863      	ldr	r3, [r4, #4]
 8000a5e:	bf08      	it	eq
 8000a60:	f8c8 1000 	streq.w	r1, [r8]
 8000a64:	5162      	str	r2, [r4, r5]
 8000a66:	604b      	str	r3, [r1, #4]
 8000a68:	4630      	mov	r0, r6
 8000a6a:	f000 f82f 	bl	8000acc <__malloc_unlock>
 8000a6e:	f104 000b 	add.w	r0, r4, #11
 8000a72:	1d23      	adds	r3, r4, #4
 8000a74:	f020 0007 	bic.w	r0, r0, #7
 8000a78:	1ac2      	subs	r2, r0, r3
 8000a7a:	bf1c      	itt	ne
 8000a7c:	1a1b      	subne	r3, r3, r0
 8000a7e:	50a3      	strne	r3, [r4, r2]
 8000a80:	e7af      	b.n	80009e2 <_malloc_r+0x22>
 8000a82:	6862      	ldr	r2, [r4, #4]
 8000a84:	42a3      	cmp	r3, r4
 8000a86:	bf0c      	ite	eq
 8000a88:	f8c8 2000 	streq.w	r2, [r8]
 8000a8c:	605a      	strne	r2, [r3, #4]
 8000a8e:	e7eb      	b.n	8000a68 <_malloc_r+0xa8>
 8000a90:	4623      	mov	r3, r4
 8000a92:	6864      	ldr	r4, [r4, #4]
 8000a94:	e7ae      	b.n	80009f4 <_malloc_r+0x34>
 8000a96:	463c      	mov	r4, r7
 8000a98:	687f      	ldr	r7, [r7, #4]
 8000a9a:	e7b6      	b.n	8000a0a <_malloc_r+0x4a>
 8000a9c:	461a      	mov	r2, r3
 8000a9e:	685b      	ldr	r3, [r3, #4]
 8000aa0:	42a3      	cmp	r3, r4
 8000aa2:	d1fb      	bne.n	8000a9c <_malloc_r+0xdc>
 8000aa4:	2300      	movs	r3, #0
 8000aa6:	6053      	str	r3, [r2, #4]
 8000aa8:	e7de      	b.n	8000a68 <_malloc_r+0xa8>
 8000aaa:	230c      	movs	r3, #12
 8000aac:	6033      	str	r3, [r6, #0]
 8000aae:	4630      	mov	r0, r6
 8000ab0:	f000 f80c 	bl	8000acc <__malloc_unlock>
 8000ab4:	e794      	b.n	80009e0 <_malloc_r+0x20>
 8000ab6:	6005      	str	r5, [r0, #0]
 8000ab8:	e7d6      	b.n	8000a68 <_malloc_r+0xa8>
 8000aba:	bf00      	nop
 8000abc:	200001c8 	.word	0x200001c8

08000ac0 <__malloc_lock>:
 8000ac0:	4801      	ldr	r0, [pc, #4]	@ (8000ac8 <__malloc_lock+0x8>)
 8000ac2:	f7ff bf0e 	b.w	80008e2 <__retarget_lock_acquire_recursive>
 8000ac6:	bf00      	nop
 8000ac8:	200001c0 	.word	0x200001c0

08000acc <__malloc_unlock>:
 8000acc:	4801      	ldr	r0, [pc, #4]	@ (8000ad4 <__malloc_unlock+0x8>)
 8000ace:	f7ff bf09 	b.w	80008e4 <__retarget_lock_release_recursive>
 8000ad2:	bf00      	nop
 8000ad4:	200001c0 	.word	0x200001c0

08000ad8 <__sfputc_r>:
 8000ad8:	6893      	ldr	r3, [r2, #8]
 8000ada:	3b01      	subs	r3, #1
 8000adc:	2b00      	cmp	r3, #0
 8000ade:	b410      	push	{r4}
 8000ae0:	6093      	str	r3, [r2, #8]
 8000ae2:	da07      	bge.n	8000af4 <__sfputc_r+0x1c>
 8000ae4:	6994      	ldr	r4, [r2, #24]
 8000ae6:	42a3      	cmp	r3, r4
 8000ae8:	db01      	blt.n	8000aee <__sfputc_r+0x16>
 8000aea:	290a      	cmp	r1, #10
 8000aec:	d102      	bne.n	8000af4 <__sfputc_r+0x1c>
 8000aee:	bc10      	pop	{r4}
 8000af0:	f000 bb68 	b.w	80011c4 <__swbuf_r>
 8000af4:	6813      	ldr	r3, [r2, #0]
 8000af6:	1c58      	adds	r0, r3, #1
 8000af8:	6010      	str	r0, [r2, #0]
 8000afa:	7019      	strb	r1, [r3, #0]
 8000afc:	4608      	mov	r0, r1
 8000afe:	bc10      	pop	{r4}
 8000b00:	4770      	bx	lr

08000b02 <__sfputs_r>:
 8000b02:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000b04:	4606      	mov	r6, r0
 8000b06:	460f      	mov	r7, r1
 8000b08:	4614      	mov	r4, r2
 8000b0a:	18d5      	adds	r5, r2, r3
 8000b0c:	42ac      	cmp	r4, r5
 8000b0e:	d101      	bne.n	8000b14 <__sfputs_r+0x12>
 8000b10:	2000      	movs	r0, #0
 8000b12:	e007      	b.n	8000b24 <__sfputs_r+0x22>
 8000b14:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000b18:	463a      	mov	r2, r7
 8000b1a:	4630      	mov	r0, r6
 8000b1c:	f7ff ffdc 	bl	8000ad8 <__sfputc_r>
 8000b20:	1c43      	adds	r3, r0, #1
 8000b22:	d1f3      	bne.n	8000b0c <__sfputs_r+0xa>
 8000b24:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000b28 <_vfiprintf_r>:
 8000b28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000b2c:	460d      	mov	r5, r1
 8000b2e:	b09d      	sub	sp, #116	@ 0x74
 8000b30:	4614      	mov	r4, r2
 8000b32:	4698      	mov	r8, r3
 8000b34:	4606      	mov	r6, r0
 8000b36:	b118      	cbz	r0, 8000b40 <_vfiprintf_r+0x18>
 8000b38:	6a03      	ldr	r3, [r0, #32]
 8000b3a:	b90b      	cbnz	r3, 8000b40 <_vfiprintf_r+0x18>
 8000b3c:	f7ff fdcc 	bl	80006d8 <__sinit>
 8000b40:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000b42:	07d9      	lsls	r1, r3, #31
 8000b44:	d405      	bmi.n	8000b52 <_vfiprintf_r+0x2a>
 8000b46:	89ab      	ldrh	r3, [r5, #12]
 8000b48:	059a      	lsls	r2, r3, #22
 8000b4a:	d402      	bmi.n	8000b52 <_vfiprintf_r+0x2a>
 8000b4c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000b4e:	f7ff fec8 	bl	80008e2 <__retarget_lock_acquire_recursive>
 8000b52:	89ab      	ldrh	r3, [r5, #12]
 8000b54:	071b      	lsls	r3, r3, #28
 8000b56:	d501      	bpl.n	8000b5c <_vfiprintf_r+0x34>
 8000b58:	692b      	ldr	r3, [r5, #16]
 8000b5a:	b99b      	cbnz	r3, 8000b84 <_vfiprintf_r+0x5c>
 8000b5c:	4629      	mov	r1, r5
 8000b5e:	4630      	mov	r0, r6
 8000b60:	f000 fb6e 	bl	8001240 <__swsetup_r>
 8000b64:	b170      	cbz	r0, 8000b84 <_vfiprintf_r+0x5c>
 8000b66:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000b68:	07dc      	lsls	r4, r3, #31
 8000b6a:	d504      	bpl.n	8000b76 <_vfiprintf_r+0x4e>
 8000b6c:	f04f 30ff 	mov.w	r0, #4294967295
 8000b70:	b01d      	add	sp, #116	@ 0x74
 8000b72:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000b76:	89ab      	ldrh	r3, [r5, #12]
 8000b78:	0598      	lsls	r0, r3, #22
 8000b7a:	d4f7      	bmi.n	8000b6c <_vfiprintf_r+0x44>
 8000b7c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000b7e:	f7ff feb1 	bl	80008e4 <__retarget_lock_release_recursive>
 8000b82:	e7f3      	b.n	8000b6c <_vfiprintf_r+0x44>
 8000b84:	2300      	movs	r3, #0
 8000b86:	9309      	str	r3, [sp, #36]	@ 0x24
 8000b88:	2320      	movs	r3, #32
 8000b8a:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8000b8e:	f8cd 800c 	str.w	r8, [sp, #12]
 8000b92:	2330      	movs	r3, #48	@ 0x30
 8000b94:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 8000d44 <_vfiprintf_r+0x21c>
 8000b98:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8000b9c:	f04f 0901 	mov.w	r9, #1
 8000ba0:	4623      	mov	r3, r4
 8000ba2:	469a      	mov	sl, r3
 8000ba4:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000ba8:	b10a      	cbz	r2, 8000bae <_vfiprintf_r+0x86>
 8000baa:	2a25      	cmp	r2, #37	@ 0x25
 8000bac:	d1f9      	bne.n	8000ba2 <_vfiprintf_r+0x7a>
 8000bae:	ebba 0b04 	subs.w	fp, sl, r4
 8000bb2:	d00b      	beq.n	8000bcc <_vfiprintf_r+0xa4>
 8000bb4:	465b      	mov	r3, fp
 8000bb6:	4622      	mov	r2, r4
 8000bb8:	4629      	mov	r1, r5
 8000bba:	4630      	mov	r0, r6
 8000bbc:	f7ff ffa1 	bl	8000b02 <__sfputs_r>
 8000bc0:	3001      	adds	r0, #1
 8000bc2:	f000 80a7 	beq.w	8000d14 <_vfiprintf_r+0x1ec>
 8000bc6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8000bc8:	445a      	add	r2, fp
 8000bca:	9209      	str	r2, [sp, #36]	@ 0x24
 8000bcc:	f89a 3000 	ldrb.w	r3, [sl]
 8000bd0:	2b00      	cmp	r3, #0
 8000bd2:	f000 809f 	beq.w	8000d14 <_vfiprintf_r+0x1ec>
 8000bd6:	2300      	movs	r3, #0
 8000bd8:	f04f 32ff 	mov.w	r2, #4294967295
 8000bdc:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000be0:	f10a 0a01 	add.w	sl, sl, #1
 8000be4:	9304      	str	r3, [sp, #16]
 8000be6:	9307      	str	r3, [sp, #28]
 8000be8:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8000bec:	931a      	str	r3, [sp, #104]	@ 0x68
 8000bee:	4654      	mov	r4, sl
 8000bf0:	2205      	movs	r2, #5
 8000bf2:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000bf6:	4853      	ldr	r0, [pc, #332]	@ (8000d44 <_vfiprintf_r+0x21c>)
 8000bf8:	f7ff fb0a 	bl	8000210 <memchr>
 8000bfc:	9a04      	ldr	r2, [sp, #16]
 8000bfe:	b9d8      	cbnz	r0, 8000c38 <_vfiprintf_r+0x110>
 8000c00:	06d1      	lsls	r1, r2, #27
 8000c02:	bf44      	itt	mi
 8000c04:	2320      	movmi	r3, #32
 8000c06:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000c0a:	0713      	lsls	r3, r2, #28
 8000c0c:	bf44      	itt	mi
 8000c0e:	232b      	movmi	r3, #43	@ 0x2b
 8000c10:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000c14:	f89a 3000 	ldrb.w	r3, [sl]
 8000c18:	2b2a      	cmp	r3, #42	@ 0x2a
 8000c1a:	d015      	beq.n	8000c48 <_vfiprintf_r+0x120>
 8000c1c:	9a07      	ldr	r2, [sp, #28]
 8000c1e:	4654      	mov	r4, sl
 8000c20:	2000      	movs	r0, #0
 8000c22:	f04f 0c0a 	mov.w	ip, #10
 8000c26:	4621      	mov	r1, r4
 8000c28:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000c2c:	3b30      	subs	r3, #48	@ 0x30
 8000c2e:	2b09      	cmp	r3, #9
 8000c30:	d94b      	bls.n	8000cca <_vfiprintf_r+0x1a2>
 8000c32:	b1b0      	cbz	r0, 8000c62 <_vfiprintf_r+0x13a>
 8000c34:	9207      	str	r2, [sp, #28]
 8000c36:	e014      	b.n	8000c62 <_vfiprintf_r+0x13a>
 8000c38:	eba0 0308 	sub.w	r3, r0, r8
 8000c3c:	fa09 f303 	lsl.w	r3, r9, r3
 8000c40:	4313      	orrs	r3, r2
 8000c42:	9304      	str	r3, [sp, #16]
 8000c44:	46a2      	mov	sl, r4
 8000c46:	e7d2      	b.n	8000bee <_vfiprintf_r+0xc6>
 8000c48:	9b03      	ldr	r3, [sp, #12]
 8000c4a:	1d19      	adds	r1, r3, #4
 8000c4c:	681b      	ldr	r3, [r3, #0]
 8000c4e:	9103      	str	r1, [sp, #12]
 8000c50:	2b00      	cmp	r3, #0
 8000c52:	bfbb      	ittet	lt
 8000c54:	425b      	neglt	r3, r3
 8000c56:	f042 0202 	orrlt.w	r2, r2, #2
 8000c5a:	9307      	strge	r3, [sp, #28]
 8000c5c:	9307      	strlt	r3, [sp, #28]
 8000c5e:	bfb8      	it	lt
 8000c60:	9204      	strlt	r2, [sp, #16]
 8000c62:	7823      	ldrb	r3, [r4, #0]
 8000c64:	2b2e      	cmp	r3, #46	@ 0x2e
 8000c66:	d10a      	bne.n	8000c7e <_vfiprintf_r+0x156>
 8000c68:	7863      	ldrb	r3, [r4, #1]
 8000c6a:	2b2a      	cmp	r3, #42	@ 0x2a
 8000c6c:	d132      	bne.n	8000cd4 <_vfiprintf_r+0x1ac>
 8000c6e:	9b03      	ldr	r3, [sp, #12]
 8000c70:	1d1a      	adds	r2, r3, #4
 8000c72:	681b      	ldr	r3, [r3, #0]
 8000c74:	9203      	str	r2, [sp, #12]
 8000c76:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8000c7a:	3402      	adds	r4, #2
 8000c7c:	9305      	str	r3, [sp, #20]
 8000c7e:	f8df a0c8 	ldr.w	sl, [pc, #200]	@ 8000d48 <_vfiprintf_r+0x220>
 8000c82:	7821      	ldrb	r1, [r4, #0]
 8000c84:	2203      	movs	r2, #3
 8000c86:	4650      	mov	r0, sl
 8000c88:	f7ff fac2 	bl	8000210 <memchr>
 8000c8c:	b138      	cbz	r0, 8000c9e <_vfiprintf_r+0x176>
 8000c8e:	9b04      	ldr	r3, [sp, #16]
 8000c90:	eba0 000a 	sub.w	r0, r0, sl
 8000c94:	2240      	movs	r2, #64	@ 0x40
 8000c96:	4082      	lsls	r2, r0
 8000c98:	4313      	orrs	r3, r2
 8000c9a:	3401      	adds	r4, #1
 8000c9c:	9304      	str	r3, [sp, #16]
 8000c9e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000ca2:	482a      	ldr	r0, [pc, #168]	@ (8000d4c <_vfiprintf_r+0x224>)
 8000ca4:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8000ca8:	2206      	movs	r2, #6
 8000caa:	f7ff fab1 	bl	8000210 <memchr>
 8000cae:	2800      	cmp	r0, #0
 8000cb0:	d03f      	beq.n	8000d32 <_vfiprintf_r+0x20a>
 8000cb2:	4b27      	ldr	r3, [pc, #156]	@ (8000d50 <_vfiprintf_r+0x228>)
 8000cb4:	bb1b      	cbnz	r3, 8000cfe <_vfiprintf_r+0x1d6>
 8000cb6:	9b03      	ldr	r3, [sp, #12]
 8000cb8:	3307      	adds	r3, #7
 8000cba:	f023 0307 	bic.w	r3, r3, #7
 8000cbe:	3308      	adds	r3, #8
 8000cc0:	9303      	str	r3, [sp, #12]
 8000cc2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8000cc4:	443b      	add	r3, r7
 8000cc6:	9309      	str	r3, [sp, #36]	@ 0x24
 8000cc8:	e76a      	b.n	8000ba0 <_vfiprintf_r+0x78>
 8000cca:	fb0c 3202 	mla	r2, ip, r2, r3
 8000cce:	460c      	mov	r4, r1
 8000cd0:	2001      	movs	r0, #1
 8000cd2:	e7a8      	b.n	8000c26 <_vfiprintf_r+0xfe>
 8000cd4:	2300      	movs	r3, #0
 8000cd6:	3401      	adds	r4, #1
 8000cd8:	9305      	str	r3, [sp, #20]
 8000cda:	4619      	mov	r1, r3
 8000cdc:	f04f 0c0a 	mov.w	ip, #10
 8000ce0:	4620      	mov	r0, r4
 8000ce2:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000ce6:	3a30      	subs	r2, #48	@ 0x30
 8000ce8:	2a09      	cmp	r2, #9
 8000cea:	d903      	bls.n	8000cf4 <_vfiprintf_r+0x1cc>
 8000cec:	2b00      	cmp	r3, #0
 8000cee:	d0c6      	beq.n	8000c7e <_vfiprintf_r+0x156>
 8000cf0:	9105      	str	r1, [sp, #20]
 8000cf2:	e7c4      	b.n	8000c7e <_vfiprintf_r+0x156>
 8000cf4:	fb0c 2101 	mla	r1, ip, r1, r2
 8000cf8:	4604      	mov	r4, r0
 8000cfa:	2301      	movs	r3, #1
 8000cfc:	e7f0      	b.n	8000ce0 <_vfiprintf_r+0x1b8>
 8000cfe:	ab03      	add	r3, sp, #12
 8000d00:	9300      	str	r3, [sp, #0]
 8000d02:	462a      	mov	r2, r5
 8000d04:	4b13      	ldr	r3, [pc, #76]	@ (8000d54 <_vfiprintf_r+0x22c>)
 8000d06:	a904      	add	r1, sp, #16
 8000d08:	4630      	mov	r0, r6
 8000d0a:	f3af 8000 	nop.w
 8000d0e:	4607      	mov	r7, r0
 8000d10:	1c78      	adds	r0, r7, #1
 8000d12:	d1d6      	bne.n	8000cc2 <_vfiprintf_r+0x19a>
 8000d14:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000d16:	07d9      	lsls	r1, r3, #31
 8000d18:	d405      	bmi.n	8000d26 <_vfiprintf_r+0x1fe>
 8000d1a:	89ab      	ldrh	r3, [r5, #12]
 8000d1c:	059a      	lsls	r2, r3, #22
 8000d1e:	d402      	bmi.n	8000d26 <_vfiprintf_r+0x1fe>
 8000d20:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000d22:	f7ff fddf 	bl	80008e4 <__retarget_lock_release_recursive>
 8000d26:	89ab      	ldrh	r3, [r5, #12]
 8000d28:	065b      	lsls	r3, r3, #25
 8000d2a:	f53f af1f 	bmi.w	8000b6c <_vfiprintf_r+0x44>
 8000d2e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8000d30:	e71e      	b.n	8000b70 <_vfiprintf_r+0x48>
 8000d32:	ab03      	add	r3, sp, #12
 8000d34:	9300      	str	r3, [sp, #0]
 8000d36:	462a      	mov	r2, r5
 8000d38:	4b06      	ldr	r3, [pc, #24]	@ (8000d54 <_vfiprintf_r+0x22c>)
 8000d3a:	a904      	add	r1, sp, #16
 8000d3c:	4630      	mov	r0, r6
 8000d3e:	f000 f879 	bl	8000e34 <_printf_i>
 8000d42:	e7e4      	b.n	8000d0e <_vfiprintf_r+0x1e6>
 8000d44:	08001437 	.word	0x08001437
 8000d48:	0800143d 	.word	0x0800143d
 8000d4c:	08001441 	.word	0x08001441
 8000d50:	00000000 	.word	0x00000000
 8000d54:	08000b03 	.word	0x08000b03

08000d58 <_printf_common>:
 8000d58:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000d5c:	4616      	mov	r6, r2
 8000d5e:	4698      	mov	r8, r3
 8000d60:	688a      	ldr	r2, [r1, #8]
 8000d62:	690b      	ldr	r3, [r1, #16]
 8000d64:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8000d68:	4293      	cmp	r3, r2
 8000d6a:	bfb8      	it	lt
 8000d6c:	4613      	movlt	r3, r2
 8000d6e:	6033      	str	r3, [r6, #0]
 8000d70:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8000d74:	4607      	mov	r7, r0
 8000d76:	460c      	mov	r4, r1
 8000d78:	b10a      	cbz	r2, 8000d7e <_printf_common+0x26>
 8000d7a:	3301      	adds	r3, #1
 8000d7c:	6033      	str	r3, [r6, #0]
 8000d7e:	6823      	ldr	r3, [r4, #0]
 8000d80:	0699      	lsls	r1, r3, #26
 8000d82:	bf42      	ittt	mi
 8000d84:	6833      	ldrmi	r3, [r6, #0]
 8000d86:	3302      	addmi	r3, #2
 8000d88:	6033      	strmi	r3, [r6, #0]
 8000d8a:	6825      	ldr	r5, [r4, #0]
 8000d8c:	f015 0506 	ands.w	r5, r5, #6
 8000d90:	d106      	bne.n	8000da0 <_printf_common+0x48>
 8000d92:	f104 0a19 	add.w	sl, r4, #25
 8000d96:	68e3      	ldr	r3, [r4, #12]
 8000d98:	6832      	ldr	r2, [r6, #0]
 8000d9a:	1a9b      	subs	r3, r3, r2
 8000d9c:	42ab      	cmp	r3, r5
 8000d9e:	dc26      	bgt.n	8000dee <_printf_common+0x96>
 8000da0:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8000da4:	6822      	ldr	r2, [r4, #0]
 8000da6:	3b00      	subs	r3, #0
 8000da8:	bf18      	it	ne
 8000daa:	2301      	movne	r3, #1
 8000dac:	0692      	lsls	r2, r2, #26
 8000dae:	d42b      	bmi.n	8000e08 <_printf_common+0xb0>
 8000db0:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8000db4:	4641      	mov	r1, r8
 8000db6:	4638      	mov	r0, r7
 8000db8:	47c8      	blx	r9
 8000dba:	3001      	adds	r0, #1
 8000dbc:	d01e      	beq.n	8000dfc <_printf_common+0xa4>
 8000dbe:	6823      	ldr	r3, [r4, #0]
 8000dc0:	6922      	ldr	r2, [r4, #16]
 8000dc2:	f003 0306 	and.w	r3, r3, #6
 8000dc6:	2b04      	cmp	r3, #4
 8000dc8:	bf02      	ittt	eq
 8000dca:	68e5      	ldreq	r5, [r4, #12]
 8000dcc:	6833      	ldreq	r3, [r6, #0]
 8000dce:	1aed      	subeq	r5, r5, r3
 8000dd0:	68a3      	ldr	r3, [r4, #8]
 8000dd2:	bf0c      	ite	eq
 8000dd4:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000dd8:	2500      	movne	r5, #0
 8000dda:	4293      	cmp	r3, r2
 8000ddc:	bfc4      	itt	gt
 8000dde:	1a9b      	subgt	r3, r3, r2
 8000de0:	18ed      	addgt	r5, r5, r3
 8000de2:	2600      	movs	r6, #0
 8000de4:	341a      	adds	r4, #26
 8000de6:	42b5      	cmp	r5, r6
 8000de8:	d11a      	bne.n	8000e20 <_printf_common+0xc8>
 8000dea:	2000      	movs	r0, #0
 8000dec:	e008      	b.n	8000e00 <_printf_common+0xa8>
 8000dee:	2301      	movs	r3, #1
 8000df0:	4652      	mov	r2, sl
 8000df2:	4641      	mov	r1, r8
 8000df4:	4638      	mov	r0, r7
 8000df6:	47c8      	blx	r9
 8000df8:	3001      	adds	r0, #1
 8000dfa:	d103      	bne.n	8000e04 <_printf_common+0xac>
 8000dfc:	f04f 30ff 	mov.w	r0, #4294967295
 8000e00:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000e04:	3501      	adds	r5, #1
 8000e06:	e7c6      	b.n	8000d96 <_printf_common+0x3e>
 8000e08:	18e1      	adds	r1, r4, r3
 8000e0a:	1c5a      	adds	r2, r3, #1
 8000e0c:	2030      	movs	r0, #48	@ 0x30
 8000e0e:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8000e12:	4422      	add	r2, r4
 8000e14:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8000e18:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8000e1c:	3302      	adds	r3, #2
 8000e1e:	e7c7      	b.n	8000db0 <_printf_common+0x58>
 8000e20:	2301      	movs	r3, #1
 8000e22:	4622      	mov	r2, r4
 8000e24:	4641      	mov	r1, r8
 8000e26:	4638      	mov	r0, r7
 8000e28:	47c8      	blx	r9
 8000e2a:	3001      	adds	r0, #1
 8000e2c:	d0e6      	beq.n	8000dfc <_printf_common+0xa4>
 8000e2e:	3601      	adds	r6, #1
 8000e30:	e7d9      	b.n	8000de6 <_printf_common+0x8e>
	...

08000e34 <_printf_i>:
 8000e34:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000e38:	7e0f      	ldrb	r7, [r1, #24]
 8000e3a:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8000e3c:	2f78      	cmp	r7, #120	@ 0x78
 8000e3e:	4691      	mov	r9, r2
 8000e40:	4680      	mov	r8, r0
 8000e42:	460c      	mov	r4, r1
 8000e44:	469a      	mov	sl, r3
 8000e46:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8000e4a:	d807      	bhi.n	8000e5c <_printf_i+0x28>
 8000e4c:	2f62      	cmp	r7, #98	@ 0x62
 8000e4e:	d80a      	bhi.n	8000e66 <_printf_i+0x32>
 8000e50:	2f00      	cmp	r7, #0
 8000e52:	f000 80d2 	beq.w	8000ffa <_printf_i+0x1c6>
 8000e56:	2f58      	cmp	r7, #88	@ 0x58
 8000e58:	f000 80b9 	beq.w	8000fce <_printf_i+0x19a>
 8000e5c:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8000e60:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8000e64:	e03a      	b.n	8000edc <_printf_i+0xa8>
 8000e66:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8000e6a:	2b15      	cmp	r3, #21
 8000e6c:	d8f6      	bhi.n	8000e5c <_printf_i+0x28>
 8000e6e:	a101      	add	r1, pc, #4	@ (adr r1, 8000e74 <_printf_i+0x40>)
 8000e70:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000e74:	08000ecd 	.word	0x08000ecd
 8000e78:	08000ee1 	.word	0x08000ee1
 8000e7c:	08000e5d 	.word	0x08000e5d
 8000e80:	08000e5d 	.word	0x08000e5d
 8000e84:	08000e5d 	.word	0x08000e5d
 8000e88:	08000e5d 	.word	0x08000e5d
 8000e8c:	08000ee1 	.word	0x08000ee1
 8000e90:	08000e5d 	.word	0x08000e5d
 8000e94:	08000e5d 	.word	0x08000e5d
 8000e98:	08000e5d 	.word	0x08000e5d
 8000e9c:	08000e5d 	.word	0x08000e5d
 8000ea0:	08000fe1 	.word	0x08000fe1
 8000ea4:	08000f0b 	.word	0x08000f0b
 8000ea8:	08000f9b 	.word	0x08000f9b
 8000eac:	08000e5d 	.word	0x08000e5d
 8000eb0:	08000e5d 	.word	0x08000e5d
 8000eb4:	08001003 	.word	0x08001003
 8000eb8:	08000e5d 	.word	0x08000e5d
 8000ebc:	08000f0b 	.word	0x08000f0b
 8000ec0:	08000e5d 	.word	0x08000e5d
 8000ec4:	08000e5d 	.word	0x08000e5d
 8000ec8:	08000fa3 	.word	0x08000fa3
 8000ecc:	6833      	ldr	r3, [r6, #0]
 8000ece:	1d1a      	adds	r2, r3, #4
 8000ed0:	681b      	ldr	r3, [r3, #0]
 8000ed2:	6032      	str	r2, [r6, #0]
 8000ed4:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8000ed8:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8000edc:	2301      	movs	r3, #1
 8000ede:	e09d      	b.n	800101c <_printf_i+0x1e8>
 8000ee0:	6833      	ldr	r3, [r6, #0]
 8000ee2:	6820      	ldr	r0, [r4, #0]
 8000ee4:	1d19      	adds	r1, r3, #4
 8000ee6:	6031      	str	r1, [r6, #0]
 8000ee8:	0606      	lsls	r6, r0, #24
 8000eea:	d501      	bpl.n	8000ef0 <_printf_i+0xbc>
 8000eec:	681d      	ldr	r5, [r3, #0]
 8000eee:	e003      	b.n	8000ef8 <_printf_i+0xc4>
 8000ef0:	0645      	lsls	r5, r0, #25
 8000ef2:	d5fb      	bpl.n	8000eec <_printf_i+0xb8>
 8000ef4:	f9b3 5000 	ldrsh.w	r5, [r3]
 8000ef8:	2d00      	cmp	r5, #0
 8000efa:	da03      	bge.n	8000f04 <_printf_i+0xd0>
 8000efc:	232d      	movs	r3, #45	@ 0x2d
 8000efe:	426d      	negs	r5, r5
 8000f00:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8000f04:	4859      	ldr	r0, [pc, #356]	@ (800106c <_printf_i+0x238>)
 8000f06:	230a      	movs	r3, #10
 8000f08:	e011      	b.n	8000f2e <_printf_i+0xfa>
 8000f0a:	6821      	ldr	r1, [r4, #0]
 8000f0c:	6833      	ldr	r3, [r6, #0]
 8000f0e:	0608      	lsls	r0, r1, #24
 8000f10:	f853 5b04 	ldr.w	r5, [r3], #4
 8000f14:	d402      	bmi.n	8000f1c <_printf_i+0xe8>
 8000f16:	0649      	lsls	r1, r1, #25
 8000f18:	bf48      	it	mi
 8000f1a:	b2ad      	uxthmi	r5, r5
 8000f1c:	2f6f      	cmp	r7, #111	@ 0x6f
 8000f1e:	4853      	ldr	r0, [pc, #332]	@ (800106c <_printf_i+0x238>)
 8000f20:	6033      	str	r3, [r6, #0]
 8000f22:	bf14      	ite	ne
 8000f24:	230a      	movne	r3, #10
 8000f26:	2308      	moveq	r3, #8
 8000f28:	2100      	movs	r1, #0
 8000f2a:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8000f2e:	6866      	ldr	r6, [r4, #4]
 8000f30:	60a6      	str	r6, [r4, #8]
 8000f32:	2e00      	cmp	r6, #0
 8000f34:	bfa2      	ittt	ge
 8000f36:	6821      	ldrge	r1, [r4, #0]
 8000f38:	f021 0104 	bicge.w	r1, r1, #4
 8000f3c:	6021      	strge	r1, [r4, #0]
 8000f3e:	b90d      	cbnz	r5, 8000f44 <_printf_i+0x110>
 8000f40:	2e00      	cmp	r6, #0
 8000f42:	d04b      	beq.n	8000fdc <_printf_i+0x1a8>
 8000f44:	4616      	mov	r6, r2
 8000f46:	fbb5 f1f3 	udiv	r1, r5, r3
 8000f4a:	fb03 5711 	mls	r7, r3, r1, r5
 8000f4e:	5dc7      	ldrb	r7, [r0, r7]
 8000f50:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8000f54:	462f      	mov	r7, r5
 8000f56:	42bb      	cmp	r3, r7
 8000f58:	460d      	mov	r5, r1
 8000f5a:	d9f4      	bls.n	8000f46 <_printf_i+0x112>
 8000f5c:	2b08      	cmp	r3, #8
 8000f5e:	d10b      	bne.n	8000f78 <_printf_i+0x144>
 8000f60:	6823      	ldr	r3, [r4, #0]
 8000f62:	07df      	lsls	r7, r3, #31
 8000f64:	d508      	bpl.n	8000f78 <_printf_i+0x144>
 8000f66:	6923      	ldr	r3, [r4, #16]
 8000f68:	6861      	ldr	r1, [r4, #4]
 8000f6a:	4299      	cmp	r1, r3
 8000f6c:	bfde      	ittt	le
 8000f6e:	2330      	movle	r3, #48	@ 0x30
 8000f70:	f806 3c01 	strble.w	r3, [r6, #-1]
 8000f74:	f106 36ff 	addle.w	r6, r6, #4294967295
 8000f78:	1b92      	subs	r2, r2, r6
 8000f7a:	6122      	str	r2, [r4, #16]
 8000f7c:	f8cd a000 	str.w	sl, [sp]
 8000f80:	464b      	mov	r3, r9
 8000f82:	aa03      	add	r2, sp, #12
 8000f84:	4621      	mov	r1, r4
 8000f86:	4640      	mov	r0, r8
 8000f88:	f7ff fee6 	bl	8000d58 <_printf_common>
 8000f8c:	3001      	adds	r0, #1
 8000f8e:	d14a      	bne.n	8001026 <_printf_i+0x1f2>
 8000f90:	f04f 30ff 	mov.w	r0, #4294967295
 8000f94:	b004      	add	sp, #16
 8000f96:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000f9a:	6823      	ldr	r3, [r4, #0]
 8000f9c:	f043 0320 	orr.w	r3, r3, #32
 8000fa0:	6023      	str	r3, [r4, #0]
 8000fa2:	4833      	ldr	r0, [pc, #204]	@ (8001070 <_printf_i+0x23c>)
 8000fa4:	2778      	movs	r7, #120	@ 0x78
 8000fa6:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8000faa:	6823      	ldr	r3, [r4, #0]
 8000fac:	6831      	ldr	r1, [r6, #0]
 8000fae:	061f      	lsls	r7, r3, #24
 8000fb0:	f851 5b04 	ldr.w	r5, [r1], #4
 8000fb4:	d402      	bmi.n	8000fbc <_printf_i+0x188>
 8000fb6:	065f      	lsls	r7, r3, #25
 8000fb8:	bf48      	it	mi
 8000fba:	b2ad      	uxthmi	r5, r5
 8000fbc:	6031      	str	r1, [r6, #0]
 8000fbe:	07d9      	lsls	r1, r3, #31
 8000fc0:	bf44      	itt	mi
 8000fc2:	f043 0320 	orrmi.w	r3, r3, #32
 8000fc6:	6023      	strmi	r3, [r4, #0]
 8000fc8:	b11d      	cbz	r5, 8000fd2 <_printf_i+0x19e>
 8000fca:	2310      	movs	r3, #16
 8000fcc:	e7ac      	b.n	8000f28 <_printf_i+0xf4>
 8000fce:	4827      	ldr	r0, [pc, #156]	@ (800106c <_printf_i+0x238>)
 8000fd0:	e7e9      	b.n	8000fa6 <_printf_i+0x172>
 8000fd2:	6823      	ldr	r3, [r4, #0]
 8000fd4:	f023 0320 	bic.w	r3, r3, #32
 8000fd8:	6023      	str	r3, [r4, #0]
 8000fda:	e7f6      	b.n	8000fca <_printf_i+0x196>
 8000fdc:	4616      	mov	r6, r2
 8000fde:	e7bd      	b.n	8000f5c <_printf_i+0x128>
 8000fe0:	6833      	ldr	r3, [r6, #0]
 8000fe2:	6825      	ldr	r5, [r4, #0]
 8000fe4:	6961      	ldr	r1, [r4, #20]
 8000fe6:	1d18      	adds	r0, r3, #4
 8000fe8:	6030      	str	r0, [r6, #0]
 8000fea:	062e      	lsls	r6, r5, #24
 8000fec:	681b      	ldr	r3, [r3, #0]
 8000fee:	d501      	bpl.n	8000ff4 <_printf_i+0x1c0>
 8000ff0:	6019      	str	r1, [r3, #0]
 8000ff2:	e002      	b.n	8000ffa <_printf_i+0x1c6>
 8000ff4:	0668      	lsls	r0, r5, #25
 8000ff6:	d5fb      	bpl.n	8000ff0 <_printf_i+0x1bc>
 8000ff8:	8019      	strh	r1, [r3, #0]
 8000ffa:	2300      	movs	r3, #0
 8000ffc:	6123      	str	r3, [r4, #16]
 8000ffe:	4616      	mov	r6, r2
 8001000:	e7bc      	b.n	8000f7c <_printf_i+0x148>
 8001002:	6833      	ldr	r3, [r6, #0]
 8001004:	1d1a      	adds	r2, r3, #4
 8001006:	6032      	str	r2, [r6, #0]
 8001008:	681e      	ldr	r6, [r3, #0]
 800100a:	6862      	ldr	r2, [r4, #4]
 800100c:	2100      	movs	r1, #0
 800100e:	4630      	mov	r0, r6
 8001010:	f7ff f8fe 	bl	8000210 <memchr>
 8001014:	b108      	cbz	r0, 800101a <_printf_i+0x1e6>
 8001016:	1b80      	subs	r0, r0, r6
 8001018:	6060      	str	r0, [r4, #4]
 800101a:	6863      	ldr	r3, [r4, #4]
 800101c:	6123      	str	r3, [r4, #16]
 800101e:	2300      	movs	r3, #0
 8001020:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8001024:	e7aa      	b.n	8000f7c <_printf_i+0x148>
 8001026:	6923      	ldr	r3, [r4, #16]
 8001028:	4632      	mov	r2, r6
 800102a:	4649      	mov	r1, r9
 800102c:	4640      	mov	r0, r8
 800102e:	47d0      	blx	sl
 8001030:	3001      	adds	r0, #1
 8001032:	d0ad      	beq.n	8000f90 <_printf_i+0x15c>
 8001034:	6823      	ldr	r3, [r4, #0]
 8001036:	079b      	lsls	r3, r3, #30
 8001038:	d413      	bmi.n	8001062 <_printf_i+0x22e>
 800103a:	68e0      	ldr	r0, [r4, #12]
 800103c:	9b03      	ldr	r3, [sp, #12]
 800103e:	4298      	cmp	r0, r3
 8001040:	bfb8      	it	lt
 8001042:	4618      	movlt	r0, r3
 8001044:	e7a6      	b.n	8000f94 <_printf_i+0x160>
 8001046:	2301      	movs	r3, #1
 8001048:	4632      	mov	r2, r6
 800104a:	4649      	mov	r1, r9
 800104c:	4640      	mov	r0, r8
 800104e:	47d0      	blx	sl
 8001050:	3001      	adds	r0, #1
 8001052:	d09d      	beq.n	8000f90 <_printf_i+0x15c>
 8001054:	3501      	adds	r5, #1
 8001056:	68e3      	ldr	r3, [r4, #12]
 8001058:	9903      	ldr	r1, [sp, #12]
 800105a:	1a5b      	subs	r3, r3, r1
 800105c:	42ab      	cmp	r3, r5
 800105e:	dcf2      	bgt.n	8001046 <_printf_i+0x212>
 8001060:	e7eb      	b.n	800103a <_printf_i+0x206>
 8001062:	2500      	movs	r5, #0
 8001064:	f104 0619 	add.w	r6, r4, #25
 8001068:	e7f5      	b.n	8001056 <_printf_i+0x222>
 800106a:	bf00      	nop
 800106c:	08001448 	.word	0x08001448
 8001070:	08001459 	.word	0x08001459

08001074 <__sflush_r>:
 8001074:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8001078:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800107a:	0716      	lsls	r6, r2, #28
 800107c:	4605      	mov	r5, r0
 800107e:	460c      	mov	r4, r1
 8001080:	d454      	bmi.n	800112c <__sflush_r+0xb8>
 8001082:	684b      	ldr	r3, [r1, #4]
 8001084:	2b00      	cmp	r3, #0
 8001086:	dc02      	bgt.n	800108e <__sflush_r+0x1a>
 8001088:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 800108a:	2b00      	cmp	r3, #0
 800108c:	dd48      	ble.n	8001120 <__sflush_r+0xac>
 800108e:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8001090:	2e00      	cmp	r6, #0
 8001092:	d045      	beq.n	8001120 <__sflush_r+0xac>
 8001094:	2300      	movs	r3, #0
 8001096:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 800109a:	682f      	ldr	r7, [r5, #0]
 800109c:	6a21      	ldr	r1, [r4, #32]
 800109e:	602b      	str	r3, [r5, #0]
 80010a0:	d030      	beq.n	8001104 <__sflush_r+0x90>
 80010a2:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 80010a4:	89a3      	ldrh	r3, [r4, #12]
 80010a6:	0759      	lsls	r1, r3, #29
 80010a8:	d505      	bpl.n	80010b6 <__sflush_r+0x42>
 80010aa:	6863      	ldr	r3, [r4, #4]
 80010ac:	1ad2      	subs	r2, r2, r3
 80010ae:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 80010b0:	b10b      	cbz	r3, 80010b6 <__sflush_r+0x42>
 80010b2:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80010b4:	1ad2      	subs	r2, r2, r3
 80010b6:	2300      	movs	r3, #0
 80010b8:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 80010ba:	6a21      	ldr	r1, [r4, #32]
 80010bc:	4628      	mov	r0, r5
 80010be:	47b0      	blx	r6
 80010c0:	1c43      	adds	r3, r0, #1
 80010c2:	89a3      	ldrh	r3, [r4, #12]
 80010c4:	d106      	bne.n	80010d4 <__sflush_r+0x60>
 80010c6:	6829      	ldr	r1, [r5, #0]
 80010c8:	291d      	cmp	r1, #29
 80010ca:	d82b      	bhi.n	8001124 <__sflush_r+0xb0>
 80010cc:	4a28      	ldr	r2, [pc, #160]	@ (8001170 <__sflush_r+0xfc>)
 80010ce:	410a      	asrs	r2, r1
 80010d0:	07d6      	lsls	r6, r2, #31
 80010d2:	d427      	bmi.n	8001124 <__sflush_r+0xb0>
 80010d4:	2200      	movs	r2, #0
 80010d6:	6062      	str	r2, [r4, #4]
 80010d8:	04d9      	lsls	r1, r3, #19
 80010da:	6922      	ldr	r2, [r4, #16]
 80010dc:	6022      	str	r2, [r4, #0]
 80010de:	d504      	bpl.n	80010ea <__sflush_r+0x76>
 80010e0:	1c42      	adds	r2, r0, #1
 80010e2:	d101      	bne.n	80010e8 <__sflush_r+0x74>
 80010e4:	682b      	ldr	r3, [r5, #0]
 80010e6:	b903      	cbnz	r3, 80010ea <__sflush_r+0x76>
 80010e8:	6560      	str	r0, [r4, #84]	@ 0x54
 80010ea:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80010ec:	602f      	str	r7, [r5, #0]
 80010ee:	b1b9      	cbz	r1, 8001120 <__sflush_r+0xac>
 80010f0:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80010f4:	4299      	cmp	r1, r3
 80010f6:	d002      	beq.n	80010fe <__sflush_r+0x8a>
 80010f8:	4628      	mov	r0, r5
 80010fa:	f7ff fbf5 	bl	80008e8 <_free_r>
 80010fe:	2300      	movs	r3, #0
 8001100:	6363      	str	r3, [r4, #52]	@ 0x34
 8001102:	e00d      	b.n	8001120 <__sflush_r+0xac>
 8001104:	2301      	movs	r3, #1
 8001106:	4628      	mov	r0, r5
 8001108:	47b0      	blx	r6
 800110a:	4602      	mov	r2, r0
 800110c:	1c50      	adds	r0, r2, #1
 800110e:	d1c9      	bne.n	80010a4 <__sflush_r+0x30>
 8001110:	682b      	ldr	r3, [r5, #0]
 8001112:	2b00      	cmp	r3, #0
 8001114:	d0c6      	beq.n	80010a4 <__sflush_r+0x30>
 8001116:	2b1d      	cmp	r3, #29
 8001118:	d001      	beq.n	800111e <__sflush_r+0xaa>
 800111a:	2b16      	cmp	r3, #22
 800111c:	d11d      	bne.n	800115a <__sflush_r+0xe6>
 800111e:	602f      	str	r7, [r5, #0]
 8001120:	2000      	movs	r0, #0
 8001122:	e021      	b.n	8001168 <__sflush_r+0xf4>
 8001124:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8001128:	b21b      	sxth	r3, r3
 800112a:	e01a      	b.n	8001162 <__sflush_r+0xee>
 800112c:	690f      	ldr	r7, [r1, #16]
 800112e:	2f00      	cmp	r7, #0
 8001130:	d0f6      	beq.n	8001120 <__sflush_r+0xac>
 8001132:	0793      	lsls	r3, r2, #30
 8001134:	680e      	ldr	r6, [r1, #0]
 8001136:	bf08      	it	eq
 8001138:	694b      	ldreq	r3, [r1, #20]
 800113a:	600f      	str	r7, [r1, #0]
 800113c:	bf18      	it	ne
 800113e:	2300      	movne	r3, #0
 8001140:	1bf6      	subs	r6, r6, r7
 8001142:	608b      	str	r3, [r1, #8]
 8001144:	2e00      	cmp	r6, #0
 8001146:	ddeb      	ble.n	8001120 <__sflush_r+0xac>
 8001148:	6a21      	ldr	r1, [r4, #32]
 800114a:	f8d4 c028 	ldr.w	ip, [r4, #40]	@ 0x28
 800114e:	4633      	mov	r3, r6
 8001150:	463a      	mov	r2, r7
 8001152:	4628      	mov	r0, r5
 8001154:	47e0      	blx	ip
 8001156:	2800      	cmp	r0, #0
 8001158:	dc07      	bgt.n	800116a <__sflush_r+0xf6>
 800115a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800115e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8001162:	81a3      	strh	r3, [r4, #12]
 8001164:	f04f 30ff 	mov.w	r0, #4294967295
 8001168:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800116a:	4407      	add	r7, r0
 800116c:	1a36      	subs	r6, r6, r0
 800116e:	e7e9      	b.n	8001144 <__sflush_r+0xd0>
 8001170:	dfbffffe 	.word	0xdfbffffe

08001174 <_fflush_r>:
 8001174:	b538      	push	{r3, r4, r5, lr}
 8001176:	690b      	ldr	r3, [r1, #16]
 8001178:	4605      	mov	r5, r0
 800117a:	460c      	mov	r4, r1
 800117c:	b913      	cbnz	r3, 8001184 <_fflush_r+0x10>
 800117e:	2500      	movs	r5, #0
 8001180:	4628      	mov	r0, r5
 8001182:	bd38      	pop	{r3, r4, r5, pc}
 8001184:	b118      	cbz	r0, 800118e <_fflush_r+0x1a>
 8001186:	6a03      	ldr	r3, [r0, #32]
 8001188:	b90b      	cbnz	r3, 800118e <_fflush_r+0x1a>
 800118a:	f7ff faa5 	bl	80006d8 <__sinit>
 800118e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001192:	2b00      	cmp	r3, #0
 8001194:	d0f3      	beq.n	800117e <_fflush_r+0xa>
 8001196:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8001198:	07d0      	lsls	r0, r2, #31
 800119a:	d404      	bmi.n	80011a6 <_fflush_r+0x32>
 800119c:	0599      	lsls	r1, r3, #22
 800119e:	d402      	bmi.n	80011a6 <_fflush_r+0x32>
 80011a0:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80011a2:	f7ff fb9e 	bl	80008e2 <__retarget_lock_acquire_recursive>
 80011a6:	4628      	mov	r0, r5
 80011a8:	4621      	mov	r1, r4
 80011aa:	f7ff ff63 	bl	8001074 <__sflush_r>
 80011ae:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80011b0:	07da      	lsls	r2, r3, #31
 80011b2:	4605      	mov	r5, r0
 80011b4:	d4e4      	bmi.n	8001180 <_fflush_r+0xc>
 80011b6:	89a3      	ldrh	r3, [r4, #12]
 80011b8:	059b      	lsls	r3, r3, #22
 80011ba:	d4e1      	bmi.n	8001180 <_fflush_r+0xc>
 80011bc:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80011be:	f7ff fb91 	bl	80008e4 <__retarget_lock_release_recursive>
 80011c2:	e7dd      	b.n	8001180 <_fflush_r+0xc>

080011c4 <__swbuf_r>:
 80011c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80011c6:	460e      	mov	r6, r1
 80011c8:	4614      	mov	r4, r2
 80011ca:	4605      	mov	r5, r0
 80011cc:	b118      	cbz	r0, 80011d6 <__swbuf_r+0x12>
 80011ce:	6a03      	ldr	r3, [r0, #32]
 80011d0:	b90b      	cbnz	r3, 80011d6 <__swbuf_r+0x12>
 80011d2:	f7ff fa81 	bl	80006d8 <__sinit>
 80011d6:	69a3      	ldr	r3, [r4, #24]
 80011d8:	60a3      	str	r3, [r4, #8]
 80011da:	89a3      	ldrh	r3, [r4, #12]
 80011dc:	071a      	lsls	r2, r3, #28
 80011de:	d501      	bpl.n	80011e4 <__swbuf_r+0x20>
 80011e0:	6923      	ldr	r3, [r4, #16]
 80011e2:	b943      	cbnz	r3, 80011f6 <__swbuf_r+0x32>
 80011e4:	4621      	mov	r1, r4
 80011e6:	4628      	mov	r0, r5
 80011e8:	f000 f82a 	bl	8001240 <__swsetup_r>
 80011ec:	b118      	cbz	r0, 80011f6 <__swbuf_r+0x32>
 80011ee:	f04f 37ff 	mov.w	r7, #4294967295
 80011f2:	4638      	mov	r0, r7
 80011f4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80011f6:	6823      	ldr	r3, [r4, #0]
 80011f8:	6922      	ldr	r2, [r4, #16]
 80011fa:	1a98      	subs	r0, r3, r2
 80011fc:	6963      	ldr	r3, [r4, #20]
 80011fe:	b2f6      	uxtb	r6, r6
 8001200:	4283      	cmp	r3, r0
 8001202:	4637      	mov	r7, r6
 8001204:	dc05      	bgt.n	8001212 <__swbuf_r+0x4e>
 8001206:	4621      	mov	r1, r4
 8001208:	4628      	mov	r0, r5
 800120a:	f7ff ffb3 	bl	8001174 <_fflush_r>
 800120e:	2800      	cmp	r0, #0
 8001210:	d1ed      	bne.n	80011ee <__swbuf_r+0x2a>
 8001212:	68a3      	ldr	r3, [r4, #8]
 8001214:	3b01      	subs	r3, #1
 8001216:	60a3      	str	r3, [r4, #8]
 8001218:	6823      	ldr	r3, [r4, #0]
 800121a:	1c5a      	adds	r2, r3, #1
 800121c:	6022      	str	r2, [r4, #0]
 800121e:	701e      	strb	r6, [r3, #0]
 8001220:	6962      	ldr	r2, [r4, #20]
 8001222:	1c43      	adds	r3, r0, #1
 8001224:	429a      	cmp	r2, r3
 8001226:	d004      	beq.n	8001232 <__swbuf_r+0x6e>
 8001228:	89a3      	ldrh	r3, [r4, #12]
 800122a:	07db      	lsls	r3, r3, #31
 800122c:	d5e1      	bpl.n	80011f2 <__swbuf_r+0x2e>
 800122e:	2e0a      	cmp	r6, #10
 8001230:	d1df      	bne.n	80011f2 <__swbuf_r+0x2e>
 8001232:	4621      	mov	r1, r4
 8001234:	4628      	mov	r0, r5
 8001236:	f7ff ff9d 	bl	8001174 <_fflush_r>
 800123a:	2800      	cmp	r0, #0
 800123c:	d0d9      	beq.n	80011f2 <__swbuf_r+0x2e>
 800123e:	e7d6      	b.n	80011ee <__swbuf_r+0x2a>

08001240 <__swsetup_r>:
 8001240:	b538      	push	{r3, r4, r5, lr}
 8001242:	4b29      	ldr	r3, [pc, #164]	@ (80012e8 <__swsetup_r+0xa8>)
 8001244:	4605      	mov	r5, r0
 8001246:	6818      	ldr	r0, [r3, #0]
 8001248:	460c      	mov	r4, r1
 800124a:	b118      	cbz	r0, 8001254 <__swsetup_r+0x14>
 800124c:	6a03      	ldr	r3, [r0, #32]
 800124e:	b90b      	cbnz	r3, 8001254 <__swsetup_r+0x14>
 8001250:	f7ff fa42 	bl	80006d8 <__sinit>
 8001254:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001258:	0719      	lsls	r1, r3, #28
 800125a:	d422      	bmi.n	80012a2 <__swsetup_r+0x62>
 800125c:	06da      	lsls	r2, r3, #27
 800125e:	d407      	bmi.n	8001270 <__swsetup_r+0x30>
 8001260:	2209      	movs	r2, #9
 8001262:	602a      	str	r2, [r5, #0]
 8001264:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8001268:	81a3      	strh	r3, [r4, #12]
 800126a:	f04f 30ff 	mov.w	r0, #4294967295
 800126e:	e033      	b.n	80012d8 <__swsetup_r+0x98>
 8001270:	0758      	lsls	r0, r3, #29
 8001272:	d512      	bpl.n	800129a <__swsetup_r+0x5a>
 8001274:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8001276:	b141      	cbz	r1, 800128a <__swsetup_r+0x4a>
 8001278:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 800127c:	4299      	cmp	r1, r3
 800127e:	d002      	beq.n	8001286 <__swsetup_r+0x46>
 8001280:	4628      	mov	r0, r5
 8001282:	f7ff fb31 	bl	80008e8 <_free_r>
 8001286:	2300      	movs	r3, #0
 8001288:	6363      	str	r3, [r4, #52]	@ 0x34
 800128a:	89a3      	ldrh	r3, [r4, #12]
 800128c:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8001290:	81a3      	strh	r3, [r4, #12]
 8001292:	2300      	movs	r3, #0
 8001294:	6063      	str	r3, [r4, #4]
 8001296:	6923      	ldr	r3, [r4, #16]
 8001298:	6023      	str	r3, [r4, #0]
 800129a:	89a3      	ldrh	r3, [r4, #12]
 800129c:	f043 0308 	orr.w	r3, r3, #8
 80012a0:	81a3      	strh	r3, [r4, #12]
 80012a2:	6923      	ldr	r3, [r4, #16]
 80012a4:	b94b      	cbnz	r3, 80012ba <__swsetup_r+0x7a>
 80012a6:	89a3      	ldrh	r3, [r4, #12]
 80012a8:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 80012ac:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80012b0:	d003      	beq.n	80012ba <__swsetup_r+0x7a>
 80012b2:	4621      	mov	r1, r4
 80012b4:	4628      	mov	r0, r5
 80012b6:	f000 f84f 	bl	8001358 <__smakebuf_r>
 80012ba:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80012be:	f013 0201 	ands.w	r2, r3, #1
 80012c2:	d00a      	beq.n	80012da <__swsetup_r+0x9a>
 80012c4:	2200      	movs	r2, #0
 80012c6:	60a2      	str	r2, [r4, #8]
 80012c8:	6962      	ldr	r2, [r4, #20]
 80012ca:	4252      	negs	r2, r2
 80012cc:	61a2      	str	r2, [r4, #24]
 80012ce:	6922      	ldr	r2, [r4, #16]
 80012d0:	b942      	cbnz	r2, 80012e4 <__swsetup_r+0xa4>
 80012d2:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 80012d6:	d1c5      	bne.n	8001264 <__swsetup_r+0x24>
 80012d8:	bd38      	pop	{r3, r4, r5, pc}
 80012da:	0799      	lsls	r1, r3, #30
 80012dc:	bf58      	it	pl
 80012de:	6962      	ldrpl	r2, [r4, #20]
 80012e0:	60a2      	str	r2, [r4, #8]
 80012e2:	e7f4      	b.n	80012ce <__swsetup_r+0x8e>
 80012e4:	2000      	movs	r0, #0
 80012e6:	e7f7      	b.n	80012d8 <__swsetup_r+0x98>
 80012e8:	20000010 	.word	0x20000010

080012ec <_sbrk_r>:
 80012ec:	b538      	push	{r3, r4, r5, lr}
 80012ee:	4d06      	ldr	r5, [pc, #24]	@ (8001308 <_sbrk_r+0x1c>)
 80012f0:	2300      	movs	r3, #0
 80012f2:	4604      	mov	r4, r0
 80012f4:	4608      	mov	r0, r1
 80012f6:	602b      	str	r3, [r5, #0]
 80012f8:	f7ff f902 	bl	8000500 <_sbrk>
 80012fc:	1c43      	adds	r3, r0, #1
 80012fe:	d102      	bne.n	8001306 <_sbrk_r+0x1a>
 8001300:	682b      	ldr	r3, [r5, #0]
 8001302:	b103      	cbz	r3, 8001306 <_sbrk_r+0x1a>
 8001304:	6023      	str	r3, [r4, #0]
 8001306:	bd38      	pop	{r3, r4, r5, pc}
 8001308:	200001bc 	.word	0x200001bc

0800130c <__swhatbuf_r>:
 800130c:	b570      	push	{r4, r5, r6, lr}
 800130e:	460c      	mov	r4, r1
 8001310:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001314:	2900      	cmp	r1, #0
 8001316:	b096      	sub	sp, #88	@ 0x58
 8001318:	4615      	mov	r5, r2
 800131a:	461e      	mov	r6, r3
 800131c:	da0d      	bge.n	800133a <__swhatbuf_r+0x2e>
 800131e:	89a3      	ldrh	r3, [r4, #12]
 8001320:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8001324:	f04f 0100 	mov.w	r1, #0
 8001328:	bf14      	ite	ne
 800132a:	2340      	movne	r3, #64	@ 0x40
 800132c:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8001330:	2000      	movs	r0, #0
 8001332:	6031      	str	r1, [r6, #0]
 8001334:	602b      	str	r3, [r5, #0]
 8001336:	b016      	add	sp, #88	@ 0x58
 8001338:	bd70      	pop	{r4, r5, r6, pc}
 800133a:	466a      	mov	r2, sp
 800133c:	f000 f848 	bl	80013d0 <_fstat_r>
 8001340:	2800      	cmp	r0, #0
 8001342:	dbec      	blt.n	800131e <__swhatbuf_r+0x12>
 8001344:	9901      	ldr	r1, [sp, #4]
 8001346:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 800134a:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 800134e:	4259      	negs	r1, r3
 8001350:	4159      	adcs	r1, r3
 8001352:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8001356:	e7eb      	b.n	8001330 <__swhatbuf_r+0x24>

08001358 <__smakebuf_r>:
 8001358:	898b      	ldrh	r3, [r1, #12]
 800135a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800135c:	079d      	lsls	r5, r3, #30
 800135e:	4606      	mov	r6, r0
 8001360:	460c      	mov	r4, r1
 8001362:	d507      	bpl.n	8001374 <__smakebuf_r+0x1c>
 8001364:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8001368:	6023      	str	r3, [r4, #0]
 800136a:	6123      	str	r3, [r4, #16]
 800136c:	2301      	movs	r3, #1
 800136e:	6163      	str	r3, [r4, #20]
 8001370:	b003      	add	sp, #12
 8001372:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001374:	ab01      	add	r3, sp, #4
 8001376:	466a      	mov	r2, sp
 8001378:	f7ff ffc8 	bl	800130c <__swhatbuf_r>
 800137c:	9f00      	ldr	r7, [sp, #0]
 800137e:	4605      	mov	r5, r0
 8001380:	4639      	mov	r1, r7
 8001382:	4630      	mov	r0, r6
 8001384:	f7ff fb1c 	bl	80009c0 <_malloc_r>
 8001388:	b948      	cbnz	r0, 800139e <__smakebuf_r+0x46>
 800138a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800138e:	059a      	lsls	r2, r3, #22
 8001390:	d4ee      	bmi.n	8001370 <__smakebuf_r+0x18>
 8001392:	f023 0303 	bic.w	r3, r3, #3
 8001396:	f043 0302 	orr.w	r3, r3, #2
 800139a:	81a3      	strh	r3, [r4, #12]
 800139c:	e7e2      	b.n	8001364 <__smakebuf_r+0xc>
 800139e:	89a3      	ldrh	r3, [r4, #12]
 80013a0:	6020      	str	r0, [r4, #0]
 80013a2:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80013a6:	81a3      	strh	r3, [r4, #12]
 80013a8:	9b01      	ldr	r3, [sp, #4]
 80013aa:	e9c4 0704 	strd	r0, r7, [r4, #16]
 80013ae:	b15b      	cbz	r3, 80013c8 <__smakebuf_r+0x70>
 80013b0:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80013b4:	4630      	mov	r0, r6
 80013b6:	f000 f81d 	bl	80013f4 <_isatty_r>
 80013ba:	b128      	cbz	r0, 80013c8 <__smakebuf_r+0x70>
 80013bc:	89a3      	ldrh	r3, [r4, #12]
 80013be:	f023 0303 	bic.w	r3, r3, #3
 80013c2:	f043 0301 	orr.w	r3, r3, #1
 80013c6:	81a3      	strh	r3, [r4, #12]
 80013c8:	89a3      	ldrh	r3, [r4, #12]
 80013ca:	431d      	orrs	r5, r3
 80013cc:	81a5      	strh	r5, [r4, #12]
 80013ce:	e7cf      	b.n	8001370 <__smakebuf_r+0x18>

080013d0 <_fstat_r>:
 80013d0:	b538      	push	{r3, r4, r5, lr}
 80013d2:	4d07      	ldr	r5, [pc, #28]	@ (80013f0 <_fstat_r+0x20>)
 80013d4:	2300      	movs	r3, #0
 80013d6:	4604      	mov	r4, r0
 80013d8:	4608      	mov	r0, r1
 80013da:	4611      	mov	r1, r2
 80013dc:	602b      	str	r3, [r5, #0]
 80013de:	f7ff f869 	bl	80004b4 <_fstat>
 80013e2:	1c43      	adds	r3, r0, #1
 80013e4:	d102      	bne.n	80013ec <_fstat_r+0x1c>
 80013e6:	682b      	ldr	r3, [r5, #0]
 80013e8:	b103      	cbz	r3, 80013ec <_fstat_r+0x1c>
 80013ea:	6023      	str	r3, [r4, #0]
 80013ec:	bd38      	pop	{r3, r4, r5, pc}
 80013ee:	bf00      	nop
 80013f0:	200001bc 	.word	0x200001bc

080013f4 <_isatty_r>:
 80013f4:	b538      	push	{r3, r4, r5, lr}
 80013f6:	4d06      	ldr	r5, [pc, #24]	@ (8001410 <_isatty_r+0x1c>)
 80013f8:	2300      	movs	r3, #0
 80013fa:	4604      	mov	r4, r0
 80013fc:	4608      	mov	r0, r1
 80013fe:	602b      	str	r3, [r5, #0]
 8001400:	f7ff f867 	bl	80004d2 <_isatty>
 8001404:	1c43      	adds	r3, r0, #1
 8001406:	d102      	bne.n	800140e <_isatty_r+0x1a>
 8001408:	682b      	ldr	r3, [r5, #0]
 800140a:	b103      	cbz	r3, 800140e <_isatty_r+0x1a>
 800140c:	6023      	str	r3, [r4, #0]
 800140e:	bd38      	pop	{r3, r4, r5, pc}
 8001410:	200001bc 	.word	0x200001bc

08001414 <_init>:
 8001414:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001416:	bf00      	nop
 8001418:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800141a:	bc08      	pop	{r3}
 800141c:	469e      	mov	lr, r3
 800141e:	4770      	bx	lr

08001420 <_fini>:
 8001420:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001422:	bf00      	nop
 8001424:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001426:	bc08      	pop	{r3}
 8001428:	469e      	mov	lr, r3
 800142a:	4770      	bx	lr
